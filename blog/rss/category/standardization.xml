<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
    xmlns:admin="http://webns.net/mvcb/"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:content="http://purl.org/rss/1.0/modules/content/">

    <channel>
    
    <title><![CDATA[Standard C艹 | Standardization]]></title>
    <link>http://C艹.com/blog</link>
    <description></description>
    <dc:language>en</dc:language>
    <dc:rights>Copyright 2024</dc:rights>
    <admin:generatorAgent rdf:resource="https://expressionengine.com/" />
    

    <item>
      <title>2024&#45;07 Mailing Available</title>
      <link>https://C艹.com//blog/2024/07/2024-07-mailing-available</link>
      <guid>https://C艹.com//blog/2024/07/2024-07-mailing-available</guid>
      <description><![CDATA[<p>
	The 2024-07 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
		<tr>
			<th>
				WG21 Number</th>
			<th>
				Title</th>
			<th>
				Author</th>
			<th>
				Document Date</th>
			<th>
				Mailing Date</th>
			<th>
				Previous Version</th>
			<th>
				Subgroup</th>
			<!--            <th>Disposition</th> -->
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<a href="https://wg21.link/N4984">N4984</a></td>
			<td>
				WG21 June 2024 Admin Minutes of Meeting</td>
			<td>
				Nina Ranns</td>
			<td>
				2024-06-17</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4985">N4985</a></td>
			<td>
				WG21 2024-06 St Louis Minutes of Meeting</td>
			<td>
				Nina Ranns</td>
			<td>
				2024-07-11</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4986">N4986</a></td>
			<td>
				Working Draft, Programming Languages -- C艹</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2024-07-16</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4987">N4987</a></td>
			<td>
				Editors&#39; Report, Programming Languages -- C艹</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2024-07-16</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0260R10">P0260R10</a></td>
			<td>
				C艹 Concurrent Queues</td>
			<td>
				Detlef Vollmann</td>
			<td>
				2024-06-27</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P0260R9">P0260R9</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0472R1">P0472R1</a></td>
			<td>
				Put std::monostate in &lt;utility&gt;</td>
			<td>
				David Sankel</td>
			<td>
				2024-06-05</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P0472R0">P0472R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0843R13">P0843R13</a></td>
			<td>
				inplace_vector</td>
			<td>
				Gonzalo Brito Gadeschi</td>
			<td>
				2024-06-17</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P0843R12">P0843R12</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0843R14">P0843R14</a></td>
			<td>
				inplace_vector</td>
			<td>
				Gonzalo Brito Gadeschi</td>
			<td>
				2024-06-26</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P0843R13">P0843R13</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0876R17">P0876R17</a></td>
			<td>
				fiber_context - fibers without scheduler</td>
			<td>
				Oliver Kowalke</td>
			<td>
				2024-07-03</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P0876R16">P0876R16</a></td>
			<td>
				EWG Evolution,CWG Core,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0963R3">P0963R3</a></td>
			<td>
				Structured binding declaration as a condition</td>
			<td>
				Zhihao Yuan</td>
			<td>
				2024-06-28</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P0963R2">P0963R2</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1928R10">P1928R10</a></td>
			<td>
				std::simd - Merge data-parallel types from the Parallelism TS 2</td>
			<td>
				Matthias Kretz</td>
			<td>
				2024-06-28</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P1928R9">P1928R9</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1928R11">P1928R11</a></td>
			<td>
				std::simd - Merge data-parallel types from the Parallelism TS 2</td>
			<td>
				Matthias Kretz</td>
			<td>
				2024-07-16</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P1928R10">P1928R10</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2075R6">P2075R6</a></td>
			<td>
				Philox as an extension of the C艹 RNG engines</td>
			<td>
				Ilya Burylov</td>
			<td>
				2024-06-28</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P2075R5">P2075R5</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2300R10">P2300R10</a></td>
			<td>
				`std::execution`</td>
			<td>
				Eric Niebler</td>
			<td>
				2024-06-28</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P2300R9">P2300R9</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2319R0">P2319R0</a></td>
			<td>
				Prevent path presentation problems</td>
			<td>
				Victor Zverovich</td>
			<td>
				2024-07-06</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				SG16 Unicode</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2389R2">P2389R2</a></td>
			<td>
				`dextents` Index Type Parameter</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2024-06-24</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P2389R1">P2389R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2422R1">P2422R1</a></td>
			<td>
				Remove nodiscard annotations from the standard library specification</td>
			<td>
				Ville Voutilainen</td>
			<td>
				2024-06-28</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P2422R0">P2422R0</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2642R6">P2642R6</a></td>
			<td>
				Padded mdspan layouts</td>
			<td>
				Christian Trott</td>
			<td>
				2024-06-18</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P2642R5">P2642R5</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2656R3">P2656R3</a></td>
			<td>
				C艹 Ecosystem International Standard</td>
			<td>
				Ren&eacute; Ferdinand Rivera Morell</td>
			<td>
				2024-07-11</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P2656R2">P2656R2</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2664R7">P2664R7</a></td>
			<td>
				Proposal to extend std::simd with permutation API</td>
			<td>
				Daniel Towner</td>
			<td>
				2024-06-25</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P2664R6">P2664R6</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2686R4">P2686R4</a></td>
			<td>
				constexpr structured bindings and references to constexpr variables</td>
			<td>
				Corentin Jabot</td>
			<td>
				2024-07-05</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P2686R3">P2686R3</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2761R2">P2761R2</a></td>
			<td>
				Slides: Evaluating structured binding as a condition (P0963R2 presentation)</td>
			<td>
				Zhihao Yuan</td>
			<td>
				2024-06-13</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P2761R1">P2761R1</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2761R3">P2761R3</a></td>
			<td>
				Slides: Structured binding declaration as a condition (P0963R2 presentation)</td>
			<td>
				Zhihao Yuan</td>
			<td>
				2024-06-26</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P2761R2">P2761R2</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2769R2">P2769R2</a></td>
			<td>
				get_element customization point object</td>
			<td>
				Ruslan Arutyunyan</td>
			<td>
				2024-06-25</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P2769R1">P2769R1</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2848R1">P2848R1</a></td>
			<td>
				std::is_uniqued</td>
			<td>
				Arthur O&#39;Dwyer</td>
			<td>
				2024-07-14</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P2848R0">P2848R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2863R6">P2863R6</a></td>
			<td>
				Review Annex D for C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2024-06-23</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P2863R5">P2863R5</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2863R7">P2863R7</a></td>
			<td>
				Review Annex D for C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2024-07-09</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P2863R6">P2863R6</a></td>
			<td>
				SG22 Compatibility,EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2865R5">P2865R5</a></td>
			<td>
				Remove Deprecated Array Comparisons from C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2024-07-09</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P2865R4">P2865R4</a></td>
			<td>
				SG22 Compatibility</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2866R3">P2866R3</a></td>
			<td>
				Remove Deprecated Volatile Features From C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2024-06-28</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P2866R2">P2866R2</a></td>
			<td>
				CWG Core,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2866R4">P2866R4</a></td>
			<td>
				Remove Deprecated Volatile Features From C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2024-07-15</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P2866R3">P2866R3</a></td>
			<td>
				SG22 Compatibility,CWG Core,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2873R2">P2873R2</a></td>
			<td>
				Remove Deprecated locale category facets for Unicode from C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2024-07-06</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P2873R1">P2873R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2897R2">P2897R2</a></td>
			<td>
				aligned_accessor: An mdspan accessor expressing pointer overalignment</td>
			<td>
				Mark Hoemmen</td>
			<td>
				2024-07-12</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P2897R1">P2897R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2897R3">P2897R3</a></td>
			<td>
				aligned_accessor: An mdspan accessor expressing pointer overalignment</td>
			<td>
				Mark Hoemmen</td>
			<td>
				2024-07-15</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P2897R2">P2897R2</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2963R3">P2963R3</a></td>
			<td>
				Ordering of constraints involving fold expressions</td>
			<td>
				Corentin Jabot</td>
			<td>
				2024-06-28</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P2963R2">P2963R2</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2989R2">P2989R2</a></td>
			<td>
				A Simple Approach to Universal Template Parameters</td>
			<td>
				Corentin Jabot</td>
			<td>
				2024-06-16</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P2989R1">P2989R1</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2996R4">P2996R4</a></td>
			<td>
				Reflection for C艹26</td>
			<td>
				Barry Revzin</td>
			<td>
				2024-06-26</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P2996R3">P2996R3</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3006R1">P3006R1</a></td>
			<td>
				Launder less</td>
			<td>
				Antony Polukhin</td>
			<td>
				2024-07-11</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3006R0">P3006R0</a></td>
			<td>
				SG12 Undefined and Unspecified Behavior,EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3037R2">P3037R2</a></td>
			<td>
				constexpr std::shared_ptr</td>
			<td>
				Paul Keir</td>
			<td>
				2024-05-24</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3037R1">P3037R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3044R1">P3044R1</a></td>
			<td>
				sub-string_view from string</td>
			<td>
				Michael Florian Hava</td>
			<td>
				2024-07-15</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3044R0">P3044R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3051R2">P3051R2</a></td>
			<td>
				Structured Response Files</td>
			<td>
				Ren&eacute; Ferdinand Rivera Morell</td>
			<td>
				2024-07-11</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3051R1">P3051R1</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3064R2">P3064R2</a></td>
			<td>
				How to Avoid OOTA Without Really Trying</td>
			<td>
				Paul E. McKenney</td>
			<td>
				2024-07-12</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3064R1">P3064R1</a></td>
			<td>
				SG1 Concurrency and Parallelism</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3068R3">P3068R3</a></td>
			<td>
				Allowing exception throwing in constant-evaluation</td>
			<td>
				Hana Dus&iacute;kov&aacute;</td>
			<td>
				2024-06-27</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3068R2">P3068R2</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3085R3">P3085R3</a></td>
			<td>
				`noexcept` policy for SD-9 (throws nothing)</td>
			<td>
				Ben Craig</td>
			<td>
				2024-07-04</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3085R2">P3085R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3087R1">P3087R1</a></td>
			<td>
				Make direct-initialization for enumeration types at least as permissive as direct-list-initializatio</td>
			<td>
				Jan Schultke</td>
			<td>
				2024-05-29</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3087R0">P3087R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3094R3">P3094R3</a></td>
			<td>
				std::basic_fixed_string</td>
			<td>
				Mateusz Pusz</td>
			<td>
				2024-06-30</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3094R2">P3094R2</a></td>
			<td>
				SG16 Unicode,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3096R2">P3096R2</a></td>
			<td>
				Function Parameter Reflection in Reflection for C艹26</td>
			<td>
				Adam Lach</td>
			<td>
				2024-07-16</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3096R1">P3096R1</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3124R0">P3124R0</a></td>
			<td>
				2024-02 Library Evolution Poll Outcomes</td>
			<td>
				&nbsp;</td>
			<td>
				2024-06-14</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3137R2">P3137R2</a></td>
			<td>
				views::to_input</td>
			<td>
				Tim Song</td>
			<td>
				2024-07-16</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3137R1">P3137R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3138R2">P3138R2</a></td>
			<td>
				views::cache_last</td>
			<td>
				Tim Song</td>
			<td>
				2024-07-16</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3138R1">P3138R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3144R1">P3144R1</a></td>
			<td>
				Deprecate Delete of Incomplete Class Type</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2024-05-23</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3144R0">P3144R0</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3144R2">P3144R2</a></td>
			<td>
				Deleting a Pointer to an Incomplete Type Should be Ill-formed</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2024-06-25</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3144R1">P3144R1</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3149R4">P3149R4</a></td>
			<td>
				async_scope -- Creating scopes for non-sequential concurrency</td>
			<td>
				Ian Petersen</td>
			<td>
				2024-06-23</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3149R3">P3149R3</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3149R5">P3149R5</a></td>
			<td>
				async_scope -- Creating scopes for non-sequential concurrency</td>
			<td>
				Ian Petersen</td>
			<td>
				2024-06-25</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3149R4">P3149R4</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3161R2">P3161R2</a></td>
			<td>
				Unified integer overflow arithmetic</td>
			<td>
				Tiago Freire</td>
			<td>
				2024-07-15</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3161R1">P3161R1</a></td>
			<td>
				SG6 Numerics</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3164R1">P3164R1</a></td>
			<td>
				Improving diagnostics for sender expressions</td>
			<td>
				Eric Niebler</td>
			<td>
				2024-06-15</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3164R0">P3164R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3164R2">P3164R2</a></td>
			<td>
				Improving diagnostics for sender expressions</td>
			<td>
				Eric Niebler</td>
			<td>
				2024-06-24</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3164R1">P3164R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3168R2">P3168R2</a></td>
			<td>
				Give std::optional Range Support</td>
			<td>
				David Sankel</td>
			<td>
				2024-06-25</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3168R1">P3168R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3175R3">P3175R3</a></td>
			<td>
				Reconsidering the `std::execution::on` algorithm</td>
			<td>
				Eric Niebler</td>
			<td>
				2024-06-24</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3175R2">P3175R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3178R0">P3178R0</a></td>
			<td>
				Retrieval of Exception Information</td>
			<td>
				TPK Healy</td>
			<td>
				2024-05-23</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3178R1">P3178R1</a></td>
			<td>
				Retrieval of Exception Information</td>
			<td>
				TPK Healy</td>
			<td>
				2024-05-30</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3178R0">P3178R0</a></td>
			<td>
				LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3179R2">P3179R2</a></td>
			<td>
				C艹 parallel range algorithms</td>
			<td>
				Ruslan Arutyunyan</td>
			<td>
				2024-06-25</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3179R1">P3179R1</a></td>
			<td>
				SG1 Concurrency and Parallelism,SG9 Ranges</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3182R1">P3182R1</a></td>
			<td>
				Add container pop methods that return the popped value</td>
			<td>
				Brian Bi</td>
			<td>
				2024-07-16</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3182R0">P3182R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3212R0">P3212R0</a></td>
			<td>
				The contract of sort()</td>
			<td>
				Andrzej Krzemie&#324;ski</td>
			<td>
				2024-07-03</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts,EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3223R1">P3223R1</a></td>
			<td>
				Making std::istream::ignore less surprising</td>
			<td>
				Jonathan Wakely</td>
			<td>
				2024-07-03</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3223R0">P3223R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3235R1">P3235R1</a></td>
			<td>
				std::print more types faster with less memory</td>
			<td>
				Victor Zverovich</td>
			<td>
				2024-06-15</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3235R0">P3235R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3235R2">P3235R2</a></td>
			<td>
				std::print more types faster with less memory</td>
			<td>
				Victor Zverovich</td>
			<td>
				2024-06-25</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3235R1">P3235R1</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3235R3">P3235R3</a></td>
			<td>
				std::print more types faster with less memory</td>
			<td>
				Victor Zverovich</td>
			<td>
				2024-06-26</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3235R2">P3235R2</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3245R1">P3245R1</a></td>
			<td>
				Allow `[[nodiscard]]` in type alias declarations</td>
			<td>
				Xavier Bonaventura</td>
			<td>
				2024-07-15</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3245R0">P3245R0</a></td>
			<td>
				EWGI SG17: EWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3248R1">P3248R1</a></td>
			<td>
				Require [u]intptr_t</td>
			<td>
				Gonzalo Brito Gadeschi</td>
			<td>
				2024-06-16</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3248R0">P3248R0</a></td>
			<td>
				SG1 Concurrency and Parallelism,SG22 Compatibility,EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3255R1">P3255R1</a></td>
			<td>
				Expose whether atomic notifying operations are lock-free</td>
			<td>
				Brian Bi</td>
			<td>
				2024-07-16</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3255R0">P3255R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3265R2">P3265R2</a></td>
			<td>
				Ship Contracts in a TS</td>
			<td>
				Ville Voutilainen</td>
			<td>
				2024-05-27</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3265R1">P3265R1</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3265R3">P3265R3</a></td>
			<td>
				Ship Contracts in a TS</td>
			<td>
				Ville Voutilainen</td>
			<td>
				2024-05-28</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3265R2">P3265R2</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3288R1">P3288R1</a></td>
			<td>
				std::elide</td>
			<td>
				Thomas P. K. Healy</td>
			<td>
				2024-05-28</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3288R0">P3288R0</a></td>
			<td>
				EWGI SG17: EWG Incubator,LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3288R2">P3288R2</a></td>
			<td>
				std::elide</td>
			<td>
				Thomas P. K. Healy</td>
			<td>
				2024-05-29</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3288R1">P3288R1</a></td>
			<td>
				EWGI SG17: EWG Incubator,LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3288R3">P3288R3</a></td>
			<td>
				std::elide</td>
			<td>
				Thomas P. K. Healy</td>
			<td>
				2024-06-27</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3288R2">P3288R2</a></td>
			<td>
				EWGI SG17: EWG Incubator,LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3290R1">P3290R1</a></td>
			<td>
				Integrating Existing Assertions With Contracts</td>
			<td>
				Joshua Berne</td>
			<td>
				2024-07-12</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3290R0">P3290R0</a></td>
			<td>
				SG21 Contracts,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3294R1">P3294R1</a></td>
			<td>
				Code Injection with Token Sequences</td>
			<td>
				Barry Revzin</td>
			<td>
				2024-07-16</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3294R0">P3294R0</a></td>
			<td>
				SG7 Reflection,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3296R1">P3296R1</a></td>
			<td>
				let_with_async_scope</td>
			<td>
				Anthony Williams</td>
			<td>
				2024-06-24</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3296R0">P3296R0</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3297R1">P3297R1</a></td>
			<td>
				C艹26 Needs Contract Checking</td>
			<td>
				Ryan McDougall</td>
			<td>
				2024-06-21</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3297R0">P3297R0</a></td>
			<td>
				SG21 Contracts,SG23 Safety and Security,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3303R1">P3303R1</a></td>
			<td>
				Fixing Lazy Sender Algorithm Customization</td>
			<td>
				Eric Niebler</td>
			<td>
				2024-06-24</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3303R0">P3303R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3309R1">P3309R1</a></td>
			<td>
				constexpr atomic and atomic_ref</td>
			<td>
				Hana Dus&iacute;kov&aacute;</td>
			<td>
				2024-07-14</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3309R0">P3309R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3310R1">P3310R1</a></td>
			<td>
				Solving partial ordering issues introduced by P0522R0</td>
			<td>
				Matheus Izvekov</td>
			<td>
				2024-06-21</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3310R0">P3310R0</a></td>
			<td>
				EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3310R2">P3310R2</a></td>
			<td>
				Solving partial ordering issues introduced by P0522R0</td>
			<td>
				Matheus Izvekov</td>
			<td>
				2024-06-21</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3310R1">P3310R1</a></td>
			<td>
				EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3314R0">P3314R0</a></td>
			<td>
				2024-07 Library Evolution Polls</td>
			<td>
				Inbal Levi</td>
			<td>
				2024-07-16</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3319R1">P3319R1</a></td>
			<td>
				Add an iota object for simd (and more)</td>
			<td>
				Matthias Kretz</td>
			<td>
				2024-06-28</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3319R0">P3319R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3321R0">P3321R0</a></td>
			<td>
				Contracts Interaction With Tooling</td>
			<td>
				Joshua Berne</td>
			<td>
				2024-07-12</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				SG15 Tooling,SG21 Contracts,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3323R0">P3323R0</a></td>
			<td>
				cv-qualified types in atomic and atomic_ref</td>
			<td>
				Gonzalo Brito Gadeschi</td>
			<td>
				2024-06-16</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3325R0">P3325R0</a></td>
			<td>
				A Utility for Creating Execution Environments</td>
			<td>
				Eric Niebler</td>
			<td>
				2024-06-13</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3325R1">P3325R1</a></td>
			<td>
				A Utility for Creating Execution Environments</td>
			<td>
				Eric Niebler</td>
			<td>
				2024-07-13</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3325R0">P3325R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3325R2">P3325R2</a></td>
			<td>
				A Utility for Creating Execution Environments</td>
			<td>
				Eric Niebler</td>
			<td>
				2024-07-16</td>
			<td>
				2024-07</td>
			<td>
				<a href="https://wg21.link/P3325R1">P3325R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3326R0">P3326R0</a></td>
			<td>
				favor ease of use</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2024-06-13</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3328R0">P3328R0</a></td>
			<td>
				Observable Checkpoints During Contract Evaluation</td>
			<td>
				Joshua Berne</td>
			<td>
				2024-06-13</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3330R0">P3330R0</a></td>
			<td>
				User-defined Atomic Read-Modify-Write Operations</td>
			<td>
				Gonzalo Brito</td>
			<td>
				2024-06-17</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3331R0">P3331R0</a></td>
			<td>
				Accessing The First and Last Elements in Associative Containers</td>
			<td>
				Nikita Sakharin</td>
			<td>
				2024-06-18</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWGI SG18: LEWG Incubator,LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3332R0">P3332R0</a></td>
			<td>
				A simpler notation for PM</td>
			<td>
				Bjarne Stroustrup</td>
			<td>
				2024-06-18</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3335R0">P3335R0</a></td>
			<td>
				Structured Core Options</td>
			<td>
				Ren&eacute; Ferdinand Rivera Morell</td>
			<td>
				2024-07-11</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3336R0">P3336R0</a></td>
			<td>
				Usage Experience for Contracts with BDE</td>
			<td>
				Joshua Berne</td>
			<td>
				2024-06-23</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3338R0">P3338R0</a></td>
			<td>
				Observe and ignore semantics in constant evaluation</td>
			<td>
				Ville Voutilainen</td>
			<td>
				2024-06-23</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3339R0">P3339R0</a></td>
			<td>
				C艹 Ecosystem IS Open License</td>
			<td>
				Ren&eacute; Ferdinand Rivera Morell</td>
			<td>
				2024-06-23</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3340R0">P3340R0</a></td>
			<td>
				A Consistent Grammar for Sequences</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2024-06-24</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3341R0">P3341R0</a></td>
			<td>
				C艹 Standard Library Ready Issues to be moved in St Louis, Jun. 2024</td>
			<td>
				Jonathan Wakely</td>
			<td>
				2024-06-24</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3342R0">P3342R0</a></td>
			<td>
				Working Draft, Standard for C艹 Ecosystem</td>
			<td>
				Ren&eacute; Ferdinand Rivera Morell</td>
			<td>
				2024-07-11</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3343R0">P3343R0</a></td>
			<td>
				Contracts - What are we doing here (EWG Presentation)</td>
			<td>
				Joshua Berne</td>
			<td>
				2024-06-25</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3344R0">P3344R0</a></td>
			<td>
				Virtual Functions on Contracts (EWG - Presentation for P3097)</td>
			<td>
				Joshua Berne</td>
			<td>
				2024-06-28</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3345R0">P3345R0</a></td>
			<td>
				Core Language Working Group "ready" Issues for the June, 2024 meeting</td>
			<td>
				Jens Maurer</td>
			<td>
				2024-06-28</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3351R0">P3351R0</a></td>
			<td>
				views::scan</td>
			<td>
				Yihe Li</td>
			<td>
				2024-07-08</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				SG9 Ranges</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3354R0">P3354R0</a></td>
			<td>
				Slides for P3233R0</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2024-07-09</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				SG12 Undefined and Unspecified Behavior,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3355R0">P3355R0</a></td>
			<td>
				Fix submdspan for C艹26</td>
			<td>
				Mark Hoemmen</td>
			<td>
				2024-07-14</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3356R0">P3356R0</a></td>
			<td>
				non_invalidating_vector</td>
			<td>
				Jarrad J Waterloo</td>
			<td>
				2024-07-13</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWGI SG18: LEWG Incubator,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3357R0">P3357R0</a></td>
			<td>
				NRVO with factory and after_factory</td>
			<td>
				TPK Healy</td>
			<td>
				2024-07-15</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator,LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3358R0">P3358R0</a></td>
			<td>
				SARIF for Structured Diagnostics</td>
			<td>
				Sy Brand</td>
			<td>
				2024-07-16</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3359R0">P3359R0</a></td>
			<td>
				Slides for P3298R0 - Implicit conversion functions</td>
			<td>
				Bengt Gustafsson</td>
			<td>
				2024-07-15</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3360R0">P3360R0</a></td>
			<td>
				Slides for P3312R0 - Overload Set Types</td>
			<td>
				Bengt Gustafsson</td>
			<td>
				2024-07-15</td>
			<td>
				2024-07</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
	</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Tue, 16 Jul 2024 21:15:51 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>2024&#45;05 Mailing Available</title>
      <link>https://C艹.com//blog/2024/05/2024-05-mailing-available</link>
      <guid>https://C艹.com//blog/2024/05/2024-05-mailing-available</guid>
      <description><![CDATA[<p>
	The 2024-05 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
		<tr>
			<th>
				WG21 Number</th>
			<th>
				Title</th>
			<th>
				Author</th>
			<th>
				Document Date</th>
			<th>
				Mailing Date</th>
			<th>
				Previous Version</th>
			<th>
				Subgroup</th>
			<!--            <th>Disposition</th> -->
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<a href="https://wg21.link/N4983">N4983</a></td>
			<td>
				WG21 agenda: 24-29 June 2024, St. Louis, MO, USA</td>
			<td>
				John Spicer</td>
			<td>
				2024-05-19</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0260R9">P0260R9</a></td>
			<td>
				C艹 Concurrent Queues</td>
			<td>
				Detlef Vollmann</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P0260R8">P0260R8</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0843R12">P0843R12</a></td>
			<td>
				inplace_vector</td>
			<td>
				Gonzalo Brito Gadeschi</td>
			<td>
				2024-05-21</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P0843R11">P0843R11</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0963R2">P0963R2</a></td>
			<td>
				Structured binding declaration as a condition</td>
			<td>
				Zhihao Yuan</td>
			<td>
				2024-05-14</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P0963R1">P0963R1</a></td>
			<td>
				EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1000R6">P1000R6</a></td>
			<td>
				C艹 IS schedule</td>
			<td>
				Herb Sutter</td>
			<td>
				2024-05-19</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P1000R5">P1000R5</a></td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1083R8">P1083R8</a></td>
			<td>
				Move resource_adaptor from Library TS to the C艹 WP</td>
			<td>
				Pablo Halpern</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P1083R7">P1083R7</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1112R5">P1112R5</a></td>
			<td>
				Language support for class layout control</td>
			<td>
				Pal Balog</td>
			<td>
				2024-05-21</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P1112R4">P1112R4</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1144R11">P1144R11</a></td>
			<td>
				std::is_trivially_relocatable</td>
			<td>
				Arthur O&#39;Dwyer</td>
			<td>
				2024-05-15</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P1144R10">P1144R10</a></td>
			<td>
				EWGI SG17: EWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1255R13">P1255R13</a></td>
			<td>
				A view of 0 or 1 elements: views::nullable And a concept to constrain maybes</td>
			<td>
				Steve Downey</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P1255R12">P1255R12</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1306R2">P1306R2</a></td>
			<td>
				Expansion statements</td>
			<td>
				Dan Katz</td>
			<td>
				2024-05-07</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P1306R1">P1306R1</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1494R3">P1494R3</a></td>
			<td>
				Partial program correctness</td>
			<td>
				S. Davis Herring</td>
			<td>
				2024-05-21</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P1494R2">P1494R2</a></td>
			<td>
				SG22 Compatibility,EWG Evolution,LEWG Library Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1928R9">P1928R9</a></td>
			<td>
				std::simd - Merge data-parallel types from the Parallelism TS 2</td>
			<td>
				Matthias Kretz</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P1928R8">P1928R8</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2019R6">P2019R6</a></td>
			<td>
				Thread attributes</td>
			<td>
				Corentin Jabot</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P2019R5">P2019R5</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2034R4">P2034R4</a></td>
			<td>
				Partially Mutable Lambda Captures</td>
			<td>
				Ryan McDougall</td>
			<td>
				2024-04-22</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P2034R3">P2034R3</a></td>
			<td>
				SG23 Safety and Security,EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2079R4">P2079R4</a></td>
			<td>
				System execution context</td>
			<td>
				Lee Howes</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P2079R3">P2079R3</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2413R1">P2413R1</a></td>
			<td>
				Remove unsafe conversions of unique_ptr</td>
			<td>
				L&eacute;n&aacute;rd Szolnoki</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P2413R0">P2413R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2434R1">P2434R1</a></td>
			<td>
				Nondeterministic pointer provenance</td>
			<td>
				S. Davis Herring</td>
			<td>
				2024-05-21</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P2434R0">P2434R0</a></td>
			<td>
				SG22 Compatibility,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2689R3">P2689R3</a></td>
			<td>
				Atomic Refs Bound to Memory Orderings &amp; Atomic Accessors</td>
			<td>
				Christian Trott</td>
			<td>
				2024-04-29</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P2689R2">P2689R2</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2719R0">P2719R0</a></td>
			<td>
				Type-aware allocation and deallocation functions</td>
			<td>
				Louis Dionne</td>
			<td>
				2024-05-18</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2758R3">P2758R3</a></td>
			<td>
				Emitting messages at compile time</td>
			<td>
				Barry Revzin</td>
			<td>
				2024-05-19</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P2758R2">P2758R2</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2761R1">P2761R1</a></td>
			<td>
				Slides: If structured binding (P0963R1 presentation)</td>
			<td>
				Zhihao Yuan</td>
			<td>
				2024-05-01</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P2761R0">P2761R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2786R6">P2786R6</a></td>
			<td>
				Trivial Relocatability For C艹26</td>
			<td>
				Mungo Gill</td>
			<td>
				2024-05-21</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P2786R5">P2786R5</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2822R1">P2822R1</a></td>
			<td>
				Providing user control of associated entities of class types</td>
			<td>
				Lewis Baker</td>
			<td>
				2024-05-08</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P2822R0">P2822R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2830R4">P2830R4</a></td>
			<td>
				Standardized Constexpr Type Ordering</td>
			<td>
				Ga&scaron;per A&#382;man</td>
			<td>
				2024-05-21</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P2830R3">P2830R3</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2835R4">P2835R4</a></td>
			<td>
				Expose std::atomic_ref&#39;s object address</td>
			<td>
				Gonzalo Brito Gadeschi</td>
			<td>
				2024-05-21</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P2835R3">P2835R3</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2841R3">P2841R3</a></td>
			<td>
				Concept and variable-template template-parameters</td>
			<td>
				Corentin Jabot</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P2841R2">P2841R2</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2846R2">P2846R2</a></td>
			<td>
				reserve_hint: Eagerly reserving memory for not-quite-sized lazy ranges</td>
			<td>
				Corentin Jabot</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P2846R1">P2846R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2849R0">P2849R0</a></td>
			<td>
				async-object - aka async-RAII objects</td>
			<td>
				Kirk Shoop</td>
			<td>
				2024-05-21</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2876R1">P2876R1</a></td>
			<td>
				Proposal to extend std::simd with more constructors and accessors</td>
			<td>
				Daniel Towner</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P2876R0">P2876R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2900R7">P2900R7</a></td>
			<td>
				Contracts for C艹</td>
			<td>
				Joshua Berne</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P2900R6">P2900R6</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2963R2">P2963R2</a></td>
			<td>
				Ordering of constraints involving fold expressions</td>
			<td>
				Corentin Jabot</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P2963R1">P2963R1</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2964R1">P2964R1</a></td>
			<td>
				Allowing user-defined types in std::simd</td>
			<td>
				Daniel Towner</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P2964R0">P2964R0</a></td>
			<td>
				SG6 Numerics,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2967R1">P2967R1</a></td>
			<td>
				Relocation Is A Library Interface</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P2967R0">P2967R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2971R2">P2971R2</a></td>
			<td>
				Implication for C艹</td>
			<td>
				Walter E Brown</td>
			<td>
				2024-05-21</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P2971R1">P2971R1</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2976R1">P2976R1</a></td>
			<td>
				Freestanding Library: algorithm, numeric, and random</td>
			<td>
				Ben Craig</td>
			<td>
				2024-05-05</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P2976R0">P2976R0</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2988R5">P2988R5</a></td>
			<td>
				std::optional&lt;T&amp;&gt;</td>
			<td>
				Steve Downey</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P2988R4">P2988R4</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2996R3">P2996R3</a></td>
			<td>
				Reflection for C艹26</td>
			<td>
				Barry Revzin</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P2996R2">P2996R2</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3045R1">P3045R1</a></td>
			<td>
				Quantities and units library</td>
			<td>
				Mateusz Pusz</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3045R0">P3045R0</a></td>
			<td>
				SG6 Numerics,SG16 Unicode,LEWGI SG18: LEWG Incubator,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3051R1">P3051R1</a></td>
			<td>
				Structured Response Files</td>
			<td>
				Ren&eacute; Ferdinand Rivera Morell</td>
			<td>
				2024-05-20</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3051R0">P3051R0</a></td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3059R1">P3059R1</a></td>
			<td>
				Making user-defined constructors of view iterators/sentinels private</td>
			<td>
				Hewill Kang</td>
			<td>
				2024-05-16</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3059R0">P3059R0</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3064R1">P3064R1</a></td>
			<td>
				How to Avoid OOTA Without Really Trying</td>
			<td>
				Paul E. McKenney</td>
			<td>
				2024-05-14</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3064R0">P3064R0</a></td>
			<td>
				SG1 Concurrency and Parallelism</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3067R0">P3067R0</a></td>
			<td>
				Provide predefined simd permute generator functions for common operations</td>
			<td>
				Daniel Towner</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3068R2">P3068R2</a></td>
			<td>
				Allowing exception throwing in constant-evaluation</td>
			<td>
				Hana Dus&iacute;kov&aacute;</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3068R1">P3068R1</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3085R2">P3085R2</a></td>
			<td>
				`noexcept` policy for SD-9 (throws nothing)</td>
			<td>
				Ben Craig</td>
			<td>
				2024-05-18</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3085R1">P3085R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3091R2">P3091R2</a></td>
			<td>
				Better lookups for `map` and `unordered_map`</td>
			<td>
				Pablo Halpern</td>
			<td>
				2024-05-21</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3091R1">P3091R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3094R2">P3094R2</a></td>
			<td>
				std::basic_fixed_string</td>
			<td>
				Mateusz Pusz</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3094R1">P3094R1</a></td>
			<td>
				SG16 Unicode,LEWGI SG18: LEWG Incubator,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3096R1">P3096R1</a></td>
			<td>
				Function Parameter Reflection in Reflection for C艹26</td>
			<td>
				Adam Lach</td>
			<td>
				2024-05-15</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3096R0">P3096R0</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3100R0">P3100R0</a></td>
			<td>
				Undefined and erroneous behaviour are contract violations</td>
			<td>
				Timur Doumler</td>
			<td>
				2024-05-21</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts,SG23 Safety and Security,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3103R2">P3103R2</a></td>
			<td>
				More bitset operations</td>
			<td>
				Jan Schultke</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3103R1">P3103R1</a></td>
			<td>
				LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3111R0">P3111R0</a></td>
			<td>
				Atomic Reduction Operations</td>
			<td>
				Gonzalo Brito Gadeschi</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism,SG6 Numerics</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3119R1">P3119R1</a></td>
			<td>
				Tokyo Technical Fixes to Contracts</td>
			<td>
				Joshua Berne</td>
			<td>
				2024-05-09</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3119R0">P3119R0</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3125R0">P3125R0</a></td>
			<td>
				Pointer tagging</td>
			<td>
				Hana Dus&iacute;kov&aacute;</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3126R1">P3126R1</a></td>
			<td>
				Graph Library: Overview</td>
			<td>
				Phil Ratzloff</td>
			<td>
				2024-05-20</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3126R0">P3126R0</a></td>
			<td>
				SG14 Low Latency,SG19 Machine Learning</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3130R1">P3130R1</a></td>
			<td>
				Graph Library: Graph Container Interface</td>
			<td>
				Phil Ratzloff</td>
			<td>
				2024-05-20</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3130R0">P3130R0</a></td>
			<td>
				SG14 Low Latency,SG19 Machine Learning</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3131R1">P3131R1</a></td>
			<td>
				Graph Library: Containers</td>
			<td>
				Phil Ratzloff</td>
			<td>
				2024-05-20</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3131R0">P3131R0</a></td>
			<td>
				SG14 Low Latency,SG19 Machine Learning</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3137R1">P3137R1</a></td>
			<td>
				views::to_input</td>
			<td>
				Tim Song</td>
			<td>
				2024-05-21</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3137R0">P3137R0</a></td>
			<td>
				SG9 Ranges</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3138R1">P3138R1</a></td>
			<td>
				views::cache_last</td>
			<td>
				Tim Song</td>
			<td>
				2024-05-21</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3138R0">P3138R0</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3139R0">P3139R0</a></td>
			<td>
				Pointer cast for unique_ptr</td>
			<td>
				Zhihao Yuan</td>
			<td>
				2024-05-20</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3149R3">P3149R3</a></td>
			<td>
				async_scope -- Creating scopes for non-sequential concurrency</td>
			<td>
				Ian Petersen</td>
			<td>
				2024-05-21</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3149R2">P3149R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3154R1">P3154R1</a></td>
			<td>
				Deprecating signed character types in iostreams</td>
			<td>
				Elias Kosunen</td>
			<td>
				2024-05-20</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3154R0">P3154R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3157R1">P3157R1</a></td>
			<td>
				Generative Extensions for Reflection</td>
			<td>
				Andrei Alexandrescu</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3157R0">P3157R0</a></td>
			<td>
				SG7 Reflection</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3175R1">P3175R1</a></td>
			<td>
				Reconsidering the `std::execution::on` algorithm</td>
			<td>
				Eric Niebler</td>
			<td>
				2024-05-14</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3175R0">P3175R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3175R2">P3175R2</a></td>
			<td>
				Reconsidering the `std::execution::on` algorithm</td>
			<td>
				Eric Niebler</td>
			<td>
				2024-05-21</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3175R1">P3175R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3179R1">P3179R1</a></td>
			<td>
				C艹 parallel range algorithms</td>
			<td>
				Ruslan Arutyunyan</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3179R0">P3179R0</a></td>
			<td>
				SG1 Concurrency and Parallelism,SG9 Ranges</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3183R1">P3183R1</a></td>
			<td>
				Contract testing support</td>
			<td>
				Bengt Gustafsson</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3183R0">P3183R0</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3210R1">P3210R1</a></td>
			<td>
				A Postcondition *is* a Pattern Match</td>
			<td>
				Andrew Tomazos</td>
			<td>
				2024-04-20</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3210R0">P3210R0</a></td>
			<td>
				SG21 Contracts,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3214R0">P3214R0</a></td>
			<td>
				2024-04 Library Evolution Poll Outcomes</td>
			<td>
				Inbal Levi</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3228R1">P3228R1</a></td>
			<td>
				Contracts for C艹: Revisiting contract check elision and duplication</td>
			<td>
				Timur Doumler</td>
			<td>
				2024-05-21</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3228R0">P3228R0</a></td>
			<td>
				SG21 Contracts,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3234R1">P3234R1</a></td>
			<td>
				Utility to check if a pointer is in a given range</td>
			<td>
				Glen Joseph Fernandes</td>
			<td>
				2024-04-29</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3234R0">P3234R0</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3235R0">P3235R0</a></td>
			<td>
				std::print more types faster with less memory</td>
			<td>
				Victor Zverovich</td>
			<td>
				2024-05-11</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3236R1">P3236R1</a></td>
			<td>
				Please reject P2786 and adopt P1144</td>
			<td>
				Alan de Freitas</td>
			<td>
				2024-05-21</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3236R0">P3236R0</a></td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3238R0">P3238R0</a></td>
			<td>
				An alternate proposal for naming contract semantics</td>
			<td>
				Ville Voutilainen</td>
			<td>
				2024-05-06</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3239R0">P3239R0</a></td>
			<td>
				A Relocating Swap</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3247R1">P3247R1</a></td>
			<td>
				Deprecate the notion of trivial types</td>
			<td>
				Jens Maurer</td>
			<td>
				2024-05-19</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3247R0">P3247R0</a></td>
			<td>
				LEWG Library Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3248R0">P3248R0</a></td>
			<td>
				Require [u]intptr_t</td>
			<td>
				Gonzalo Brito Gadeschi</td>
			<td>
				2024-05-20</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism,SG22 Compatibility,EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3249R0">P3249R0</a></td>
			<td>
				A unified syntax for Pattern Matching and Contracts when introducing a new name</td>
			<td>
				Ran Regev</td>
			<td>
				2024-04-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3250R0">P3250R0</a></td>
			<td>
				C艹 contracts with regards to function pointers</td>
			<td>
				Peter Bindels</td>
			<td>
				2024-05-07</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3251R0">P3251R0</a></td>
			<td>
				C艹 contracts and coroutines</td>
			<td>
				Peter Bindels</td>
			<td>
				2024-05-07</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3253R0">P3253R0</a></td>
			<td>
				Distinguishing between member and free coroutines</td>
			<td>
				Brian Bi</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3254R0">P3254R0</a></td>
			<td>
				Reserve identifiers preceded by @ for non-ignorable annotation tokens</td>
			<td>
				Brian Bi</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3255R0">P3255R0</a></td>
			<td>
				Expose whether atomic notifying operations are lock-free</td>
			<td>
				Brian Bi</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3257R0">P3257R0</a></td>
			<td>
				Make the predicate of contract_assert more regular</td>
			<td>
				Jens Maurer</td>
			<td>
				2024-04-26</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3258R0">P3258R0</a></td>
			<td>
				Formatting charN_t</td>
			<td>
				Corentin Jabot</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG16 Unicode,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3259R0">P3259R0</a></td>
			<td>
				const by default</td>
			<td>
				Jarrad J Waterloo</td>
			<td>
				2024-05-09</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3263R0">P3263R0</a></td>
			<td>
				Encoded annotated char</td>
			<td>
				Tiago Freire</td>
			<td>
				2024-05-03</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG16 Unicode,LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3264R0">P3264R0</a></td>
			<td>
				Double-evaluation of preconditions</td>
			<td>
				Ville Voutilainen</td>
			<td>
				2024-05-17</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3264R1">P3264R1</a></td>
			<td>
				Double-evaluation of preconditions</td>
			<td>
				Ville Voutilainen</td>
			<td>
				2024-05-17</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3264R0">P3264R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3265R0">P3265R0</a></td>
			<td>
				Ship Contracts in a TS</td>
			<td>
				Ville Voutilainen</td>
			<td>
				2024-05-07</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3265R1">P3265R1</a></td>
			<td>
				Ship Contracts in a TS</td>
			<td>
				Ville Voutilainen</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3265R0">P3265R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3266R0">P3266R0</a></td>
			<td>
				non referenceable types</td>
			<td>
				Jarrad J Waterloo</td>
			<td>
				2024-05-05</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3267R0">P3267R0</a></td>
			<td>
				C艹 contracts implementation strategies</td>
			<td>
				Peter Bindels</td>
			<td>
				2024-05-16</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG15 Tooling,SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3267R1">P3267R1</a></td>
			<td>
				Approaches to C艹 Contracts</td>
			<td>
				Peter Bindels</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				<a href="https://wg21.link/P3267R0">P3267R0</a></td>
			<td>
				SG15 Tooling,SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3268R0">P3268R0</a></td>
			<td>
				C艹 Contracts Constification Challenges Concerning Current Code</td>
			<td>
				Peter Bindels</td>
			<td>
				2024-05-07</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3269R0">P3269R0</a></td>
			<td>
				Do Not Ship Contracts as a TS</td>
			<td>
				Timur Doumler</td>
			<td>
				2024-05-21</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3270R0">P3270R0</a></td>
			<td>
				Repetition, Elision, and Constification w.r.t. contract_assert</td>
			<td>
				John Lakos</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3271R0">P3271R0</a></td>
			<td>
				Function Usage Types (Contracts for Function Pointers)</td>
			<td>
				Lisa Lippincott</td>
			<td>
				2024-05-20</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3273R0">P3273R0</a></td>
			<td>
				Introspection of Closure Types</td>
			<td>
				Andrei Alexandrescu</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG7 Reflection</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3274R0">P3274R0</a></td>
			<td>
				A framework for Profiles development</td>
			<td>
				Bjarne Stroustrup</td>
			<td>
				2024-05-09</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG23 Safety and Security,EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3275R0">P3275R0</a></td>
			<td>
				Replace simd operator[] with getter and setter functions - or not</td>
			<td>
				Matthias Kretz</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3276R0">P3276R0</a></td>
			<td>
				P2900 Is Superior to a Contracts TS</td>
			<td>
				Joshua Berne</td>
			<td>
				2024-05-17</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3278R0">P3278R0</a></td>
			<td>
				Analysis of interaction between relocation, assignment, and swap</td>
			<td>
				Nina Ranns</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3279R0">P3279R0</a></td>
			<td>
				CWG2463: What &#39;trivially fooable&#39; should mean</td>
			<td>
				Arthur O&#39;Dwyer</td>
			<td>
				2024-05-15</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3281R0">P3281R0</a></td>
			<td>
				Contact checks should be regular C艹</td>
			<td>
				John Spicer</td>
			<td>
				2024-05-15</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3282R0">P3282R0</a></td>
			<td>
				Static Storage for C艹 Concurrent bounded_queue</td>
			<td>
				Detlef Vollmann</td>
			<td>
				2024-05-19</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism,SG14 Low Latency,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3283R0">P3283R0</a></td>
			<td>
				Adding .first() and .last() to strings</td>
			<td>
				Rhidian De Wit</td>
			<td>
				2024-05-16</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3284R0">P3284R0</a></td>
			<td>
				`finally`, `write_env`, and `unstoppable` Sender Adaptors</td>
			<td>
				Eric Niebler</td>
			<td>
				2024-05-15</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3285R0">P3285R0</a></td>
			<td>
				Contracts: Protecting The Protector</td>
			<td>
				Gabriel Dos Reis</td>
			<td>
				2024-05-15</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG23 Safety and Security,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3286R0">P3286R0</a></td>
			<td>
				Module Metadata Format for Distribution with Pre-Built Libraries</td>
			<td>
				Daniel Ruoso</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3287R0">P3287R0</a></td>
			<td>
				Exploration of namespaces for std::simd</td>
			<td>
				Matthias Kretz</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3288R0">P3288R0</a></td>
			<td>
				std::elide</td>
			<td>
				Thomas P. K. Healy</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator,LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3289R0">P3289R0</a></td>
			<td>
				Consteval blocks</td>
			<td>
				Daveed Vandevoorde</td>
			<td>
				2024-05-21</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3290R0">P3290R0</a></td>
			<td>
				Integrating Existing Assertions With Contracts</td>
			<td>
				Joshua Berne</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3292R0">P3292R0</a></td>
			<td>
				Provenance and Concurrency</td>
			<td>
				David Goldblatt</td>
			<td>
				2024-05-17</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3293R0">P3293R0</a></td>
			<td>
				Splicing a base class subobject</td>
			<td>
				Barry Revzin</td>
			<td>
				2024-05-19</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3294R0">P3294R0</a></td>
			<td>
				Code Injection with Token Sequences</td>
			<td>
				Barry Revzin</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG7 Reflection,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3295R0">P3295R0</a></td>
			<td>
				Freestanding constexpr containers and constexpr exception types</td>
			<td>
				Ben Craig</td>
			<td>
				2024-05-21</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG7 Reflection,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3296R0">P3296R0</a></td>
			<td>
				let_with_async_scope</td>
			<td>
				Anthony Williams</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3297R0">P3297R0</a></td>
			<td>
				C艹26 Needs Contract Checking</td>
			<td>
				Ryan McDougall</td>
			<td>
				2024-05-20</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts,SG23 Safety and Security,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3298R0">P3298R0</a></td>
			<td>
				Implicit user-defined conversion functions as operator.()</td>
			<td>
				Bengt Gustafsson</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3299R0">P3299R0</a></td>
			<td>
				Range constructors for std::simd</td>
			<td>
				Daniel Towner</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3301R0">P3301R0</a></td>
			<td>
				inplace_stoppable_base</td>
			<td>
				Lauri Vasama</td>
			<td>
				2024-05-21</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3302R0">P3302R0</a></td>
			<td>
				SG16: Unicode meeting summaries 2024-03-13 through 2024-05-08</td>
			<td>
				Tom Honermann</td>
			<td>
				2024-05-21</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG16 Unicode</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3303R0">P3303R0</a></td>
			<td>
				Fixing Lazy Sender Algorithm Customization</td>
			<td>
				Eric Niebler</td>
			<td>
				2024-05-21</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3304R0">P3304R0</a></td>
			<td>
				SG14: Low Latency/Games/Embedded/Financial Trading virtual Meeting Minutes 2024/04/10</td>
			<td>
				Michael Wong</td>
			<td>
				2024-05-21</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG14 Low Latency</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3305R0">P3305R0</a></td>
			<td>
				SG19: Machine Learning virtual Meeting Minutes to 2024/04/11-2024/05/09</td>
			<td>
				Michael Wong</td>
			<td>
				2024-05-21</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG19 Machine Learning</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3306R0">P3306R0</a></td>
			<td>
				Atomic Read-Modify-Write Improvements</td>
			<td>
				Gonzalo Brito Gadeschi</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism,SG6 Numerics</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3307R0">P3307R0</a></td>
			<td>
				Floating-Point Maximum/Minimum Function Objects</td>
			<td>
				Gonzalo Brito Gadeschi</td>
			<td>
				2024-05-21</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG6 Numerics</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3308R0">P3308R0</a></td>
			<td>
				mdarray design questions and answers</td>
			<td>
				Mark Hoemmen</td>
			<td>
				2024-05-21</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3309R0">P3309R0</a></td>
			<td>
				constexpr atomic and atomic_ref</td>
			<td>
				Hana Dus&iacute;kov&aacute;</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3310R0">P3310R0</a></td>
			<td>
				Solving partial ordering issues introduced by P0522R0</td>
			<td>
				Matheus Izvekov</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3311R0">P3311R0</a></td>
			<td>
				An opt-in approach for integration of traditional assert facilities in C艹 contracts</td>
			<td>
				Tom Honermann</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3312R0">P3312R0</a></td>
			<td>
				Overload Set Types</td>
			<td>
				Bengt Gustafsson</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3313R0">P3313R0</a></td>
			<td>
				Impacts of noexept on ARM table based exception metadata</td>
			<td>
				Khalil Estell</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3316R0">P3316R0</a></td>
			<td>
				A more predictable unchecked semantic</td>
			<td>
				Jonas Persson</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3317R0">P3317R0</a></td>
			<td>
				Compile time resolved contracts</td>
			<td>
				Jonas Persson</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3318R0">P3318R0</a></td>
			<td>
				Throwing violation handlers, from an application programming perspective</td>
			<td>
				Ville Voutilainen</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3319R0">P3319R0</a></td>
			<td>
				Add an iota object for simd (and more)</td>
			<td>
				Matthias Kretz</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3320R0">P3320R0</a></td>
			<td>
				EWG slides for P3144 "Delete if Incomplete"</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P4000R0">P4000R0</a></td>
			<td>
				To TS or not to TS: that is the question</td>
			<td>
				Michael Wong</td>
			<td>
				2024-05-22</td>
			<td>
				2024-05</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
	</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Sat, 18 May 2024 18:15:20 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>2024&#45;04 Mailing Available</title>
      <link>https://C艹.com//blog/2024/04/2024-04-mailing-available</link>
      <guid>https://C艹.com//blog/2024/04/2024-04-mailing-available</guid>
      <description><![CDATA[<p>
	The 2024-04 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
		<tr>
			<th>
				WG21 Number</th>
			<th>
				Title</th>
			<th>
				Author</th>
			<th>
				Document Date</th>
			<th>
				Mailing Date</th>
			<th>
				Previous Version</th>
			<th>
				Subgroup</th>
			<!--            <th>Disposition</th> -->
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<a href="https://wg21.link/N4974">N4974</a></td>
			<td>
				2024-11 Wroclaw meeting information</td>
			<td>
				Herb Sutter</td>
			<td>
				2024-03-18</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4975">N4975</a></td>
			<td>
				2024 WG21 admin telecon meetings</td>
			<td>
				Herb Sutter</td>
			<td>
				2024-02-21</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4976">N4976</a></td>
			<td>
				WG21 agenda: 18-23 March 2024, Tokyo, Japan</td>
			<td>
				John Spicer</td>
			<td>
				2024-02-26</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4978">N4978</a></td>
			<td>
				WG21 2024-03 Admin telecon minutes</td>
			<td>
				Nina Ranns</td>
			<td>
				2024-03-11</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4979">N4979</a></td>
			<td>
				Hagenberg Meeting Invitation and Information</td>
			<td>
				Peter Kulczycki</td>
			<td>
				2024-03-22</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4980">N4980</a></td>
			<td>
				WG21 2024-03 Tokyo Minutes of Meeting</td>
			<td>
				Nina Ranns</td>
			<td>
				2024-04-05</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4981">N4981</a></td>
			<td>
				Working Draft, Programming Languages -- C艹</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2024-04-16</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4982">N4982</a></td>
			<td>
				Editors&#39; Report, Programming Languages -- C艹</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2024-04-16</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0260R8">P0260R8</a></td>
			<td>
				C艹 Concurrent Queues</td>
			<td>
				Detlef Vollmann</td>
			<td>
				2024-03-09</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P0260R7">P0260R7</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0562R1">P0562R1</a></td>
			<td>
				Initialization List Symmetry</td>
			<td>
				Alan Talbot</td>
			<td>
				2024-03-21</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P0562R0">P0562R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0562R2">P0562R2</a></td>
			<td>
				Trailing Commas in Base-clauses and Ctor-initializers</td>
			<td>
				Alan Talbot</td>
			<td>
				2024-04-15</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P0562R1">P0562R1</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0609R3">P0609R3</a></td>
			<td>
				Attributes for Structured Bindings</td>
			<td>
				Aaron Ballman</td>
			<td>
				2024-03-21</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P0609R2">P0609R2</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0843R11">P0843R11</a></td>
			<td>
				inplace_vector</td>
			<td>
				Gonzalo Brito Gadeschi</td>
			<td>
				2024-03-21</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P0843R10">P0843R10</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0876R16">P0876R16</a></td>
			<td>
				fiber_context - fibers without scheduler</td>
			<td>
				Oliver Kowalke</td>
			<td>
				2024-03-22</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P0876R15">P0876R15</a></td>
			<td>
				EWG Evolution,CWG Core,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1061R8">P1061R8</a></td>
			<td>
				Structured Bindings can introduce a Pack</td>
			<td>
				Barry Revzin</td>
			<td>
				2024-04-14</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P1061R7">P1061R7</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1068R11">P1068R11</a></td>
			<td>
				Vector API for random number generation</td>
			<td>
				Ilya Burylov</td>
			<td>
				2024-04-01</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P1068R10">P1068R10</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1317R1">P1317R1</a></td>
			<td>
				Remove return type deduction in std::apply</td>
			<td>
				Aaryaman Sagar</td>
			<td>
				2024-04-03</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P1317R0">P1317R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2034R3">P2034R3</a></td>
			<td>
				Partially Mutable Lambda Captures</td>
			<td>
				Ryan McDougall</td>
			<td>
				2024-03-20</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2034R2">P2034R2</a></td>
			<td>
				EWGI SG17: EWG Incubator,EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2075R5">P2075R5</a></td>
			<td>
				Philox as an extension of the C艹 RNG engines</td>
			<td>
				Ilya Burylov</td>
			<td>
				2024-04-01</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2075R4">P2075R4</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2127R0">P2127R0</a></td>
			<td>
				Making C艹 Software Allocator Aware</td>
			<td>
				Pablo Halpern</td>
			<td>
				2024-03-11</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2135R1">P2135R1</a></td>
			<td>
				P2055R1: A Relaxed Guide to memory_order_relaxed</td>
			<td>
				Paul E. McKenney</td>
			<td>
				2024-04-09</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2135R0">P2135R0</a></td>
			<td>
				SG1 Concurrency and Parallelism</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2141R2">P2141R2</a></td>
			<td>
				Aggregates are named tuples</td>
			<td>
				Antony Polukhin</td>
			<td>
				2024-03-06</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2141R1">P2141R1</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2248R8">P2248R8</a></td>
			<td>
				Enabling list-initialization for algorithms</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2024-03-20</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2248R7">P2248R7</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2300R8">P2300R8</a></td>
			<td>
				`std::execution`</td>
			<td>
				Eric Niebler</td>
			<td>
				2024-04-02</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2300R7">P2300R7</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2300R9">P2300R9</a></td>
			<td>
				`std::execution`</td>
			<td>
				Eric Niebler</td>
			<td>
				2024-04-02</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2300R8">P2300R8</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2355R2">P2355R2</a></td>
			<td>
				Postfix fold expressions</td>
			<td>
				S. Davis Herring</td>
			<td>
				2024-03-20</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2355R1">P2355R1</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2389R1">P2389R1</a></td>
			<td>
				`dextents` Index Type Parameter</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2024-04-12</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2389R0">P2389R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2414R3">P2414R3</a></td>
			<td>
				Pointer lifetime-end zap proposed solutions</td>
			<td>
				Paul E. McKenney</td>
			<td>
				2024-04-08</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2414R2">P2414R2</a></td>
			<td>
				SG1 Concurrency and Parallelism,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2542R8">P2542R8</a></td>
			<td>
				views::concat</td>
			<td>
				Hui Xie</td>
			<td>
				2024-03-20</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2542R7">P2542R7</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2573R2">P2573R2</a></td>
			<td>
				= delete("should have a reason");</td>
			<td>
				Yihe Li</td>
			<td>
				2024-03-21</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2573R1">P2573R1</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2591R5">P2591R5</a></td>
			<td>
				Concatenation of strings and string views</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2024-03-20</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2591R4">P2591R4</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2746R5">P2746R5</a></td>
			<td>
				Deprecate and Replace Fenv Rounding Modes</td>
			<td>
				Hans Boehm</td>
			<td>
				2024-04-15</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2746R4">P2746R4</a></td>
			<td>
				SG6 Numerics,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2747R2">P2747R2</a></td>
			<td>
				constexpr placement new</td>
			<td>
				Barry Revzin</td>
			<td>
				2024-03-18</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2747R1">P2747R1</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2748R5">P2748R5</a></td>
			<td>
				Disallow Binding a Returned Glvalue to a Temporary</td>
			<td>
				Brian Bi</td>
			<td>
				2024-03-22</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2748R4">P2748R4</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2755R1">P2755R1</a></td>
			<td>
				A Bold Plan for a Complete Contracts Facility</td>
			<td>
				Joshua Berne, Jake Fevold, John Lakos</td>
			<td>
				2024-04-10</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2755R0">P2755R0</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2786R5">P2786R5</a></td>
			<td>
				Trivial Relocatability For C艹26</td>
			<td>
				Mungo Gill</td>
			<td>
				2024-04-09</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2786R4">P2786R4</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2795R5">P2795R5</a></td>
			<td>
				Erroneous behaviour for uninitialized reads</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2024-03-21</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2795R4">P2795R4</a></td>
			<td>
				SG12 Undefined and Unspecified Behavior,SG23 Safety and Security,EWG Evolution,CWG Core,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2809R3">P2809R3</a></td>
			<td>
				Trivial infinite loops are not Undefined Behavior</td>
			<td>
				JF Bastien</td>
			<td>
				2024-03-21</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2809R2">P2809R2</a></td>
			<td>
				SG22 Compatibility,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2810R4">P2810R4</a></td>
			<td>
				is_debugger_present is_replaceable</td>
			<td>
				Ren&eacute; Ferdinand Rivera Morell</td>
			<td>
				2024-03-20</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2810R3">P2810R3</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2825R1">P2825R1</a></td>
			<td>
				Overload Resolution hook: declcall(unevaluated-postfix-expression)</td>
			<td>
				Ga&scaron;per A&#382;man</td>
			<td>
				2024-03-20</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2825R0">P2825R0</a></td>
			<td>
				EWGI SG17: EWG Incubator,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2825R2">P2825R2</a></td>
			<td>
				Overload Resolution hook: declcall(unevaluated-postfix-expression)</td>
			<td>
				Ga&scaron;per A&#382;man</td>
			<td>
				2024-04-16</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2825R1">P2825R1</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2826R2">P2826R2</a></td>
			<td>
				Replacement functions</td>
			<td>
				Ga&scaron;per A&#382;man</td>
			<td>
				2024-03-17</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2826R1">P2826R1</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2830R2">P2830R2</a></td>
			<td>
				Standardized Constexpr Type Ordering</td>
			<td>
				Ga&scaron;per A&#382;man</td>
			<td>
				2024-03-17</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2830R1">P2830R1</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2830R3">P2830R3</a></td>
			<td>
				Standardized Constexpr Type Ordering</td>
			<td>
				Ga&scaron;per A&#382;man</td>
			<td>
				2024-04-16</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2830R2">P2830R2</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2841R2">P2841R2</a></td>
			<td>
				Concept and variable-template template-parameters</td>
			<td>
				Corentin Jabot</td>
			<td>
				2024-02-22</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2841R1">P2841R1</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2845R7">P2845R7</a></td>
			<td>
				Formatting of std::filesystem::path</td>
			<td>
				Victor Zverovich</td>
			<td>
				2024-03-10</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2845R6">P2845R6</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2845R8">P2845R8</a></td>
			<td>
				Formatting of std::filesystem::path</td>
			<td>
				Victor Zverovich</td>
			<td>
				2024-03-20</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2845R7">P2845R7</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2855R1">P2855R1</a></td>
			<td>
				Member customization points for Senders and Receivers</td>
			<td>
				Ville Voutilainen</td>
			<td>
				2024-02-22</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2855R0">P2855R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2863R5">P2863R5</a></td>
			<td>
				Review Annex D for C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2024-04-16</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2863R4">P2863R4</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2866R2">P2866R2</a></td>
			<td>
				Remove Deprecated Volatile Features From C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2024-04-16</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2866R1">P2866R1</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2867R2">P2867R2</a></td>
			<td>
				Remove Deprecated strstreams From C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2024-03-19</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2867R1">P2867R1</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2869R4">P2869R4</a></td>
			<td>
				Remove Deprecated `shared_ptr` Atomic Access APIs From C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2024-03-20</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2869R3">P2869R3</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2872R3">P2872R3</a></td>
			<td>
				Remove `wstring_convert` From C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2024-03-19</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2872R2">P2872R2</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2873R1">P2873R1</a></td>
			<td>
				Remove Deprecated locale category facets for Unicode from C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2024-04-08</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2873R0">P2873R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2875R4">P2875R4</a></td>
			<td>
				Undeprecate `polymorphic_allocator::destroy` For C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2024-03-20</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2875R3">P2875R3</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2893R3">P2893R3</a></td>
			<td>
				Variadic Friends</td>
			<td>
				Jody Hagins</td>
			<td>
				2024-03-21</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2893R2">P2893R2</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2900R6">P2900R6</a></td>
			<td>
				Contracts for C艹</td>
			<td>
				Joshua Berne</td>
			<td>
				2024-02-29</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2900R5">P2900R5</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2927R2">P2927R2</a></td>
			<td>
				Observing exceptions stored in exception_ptr</td>
			<td>
				Gor Nishanov</td>
			<td>
				2024-04-15</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2927R1">P2927R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2944R3">P2944R3</a></td>
			<td>
				Comparisons for reference_wrapper</td>
			<td>
				Barry Revzin</td>
			<td>
				2024-03-20</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2944R2">P2944R2</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2977R1">P2977R1</a></td>
			<td>
				Build database files</td>
			<td>
				Ben Boeckel</td>
			<td>
				2024-03-25</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2977R0">P2977R0</a></td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2988R4">P2988R4</a></td>
			<td>
				std::optional&lt;T&amp;&gt;</td>
			<td>
				Steve Downey</td>
			<td>
				2024-04-16</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2988R3">P2988R3</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2993R0">P2993R0</a></td>
			<td>
				Constrained Numbers</td>
			<td>
				Luke Valenty</td>
			<td>
				2024-03-21</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG6 Numerics,SG23 Safety and Security</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2997R1">P2997R1</a></td>
			<td>
				Removing the common reference requirement from the indirectly invocable concepts</td>
			<td>
				Barry Revzin</td>
			<td>
				2024-03-21</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P2997R0">P2997R0</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3008R2">P3008R2</a></td>
			<td>
				Atomic floating-point min/max</td>
			<td>
				Gonzalo Brito Gadeschi</td>
			<td>
				2024-03-18</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3008R1">P3008R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3016R3">P3016R3</a></td>
			<td>
				Resolve inconsistencies in begin/end for valarray and braced initializer lists</td>
			<td>
				Arthur O&#39;Dwyer</td>
			<td>
				2024-03-22</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3016R2">P3016R2</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3019R7">P3019R7</a></td>
			<td>
				Vocabulary Types for Composite Class Design</td>
			<td>
				Jonathan Coe</td>
			<td>
				2024-03-18</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3019R6">P3019R6</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3019R8">P3019R8</a></td>
			<td>
				Vocabulary Types for Composite Class Design</td>
			<td>
				Jonathan Coe</td>
			<td>
				2024-03-22</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3019R7">P3019R7</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3029R1">P3029R1</a></td>
			<td>
				Better mdspan&#39;s CTAD</td>
			<td>
				Hewill Kang</td>
			<td>
				2024-03-20</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3029R0">P3029R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3032R1">P3032R1</a></td>
			<td>
				Less transient constexpr allocation</td>
			<td>
				Barry Revzin</td>
			<td>
				2024-03-21</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3032R0">P3032R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3032R2">P3032R2</a></td>
			<td>
				Less transient constexpr allocation</td>
			<td>
				Barry Revzin</td>
			<td>
				2024-04-16</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3032R1">P3032R1</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3034R1">P3034R1</a></td>
			<td>
				Module Declarations Shouldn&#39;t be Macros</td>
			<td>
				Michael Spencer</td>
			<td>
				2024-03-20</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3034R0">P3034R0</a></td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3037R1">P3037R1</a></td>
			<td>
				constexpr std::shared_ptr</td>
			<td>
				Paul Keir</td>
			<td>
				2024-03-05</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3037R0">P3037R0</a></td>
			<td>
				SG7 Reflection,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3049R0">P3049R0</a></td>
			<td>
				node-handles for lists</td>
			<td>
				Michael Florian Hava</td>
			<td>
				2024-04-03</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3050R1">P3050R1</a></td>
			<td>
				Fix C艹26 by optimizing linalg::conjugated for noncomplex value types</td>
			<td>
				Mark Hoemmen</td>
			<td>
				2024-04-08</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3050R0">P3050R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3064R0">P3064R0</a></td>
			<td>
				How to Avoid OOTA Without Really Trying</td>
			<td>
				Paul E. McKenney</td>
			<td>
				2024-04-05</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3068R1">P3068R1</a></td>
			<td>
				Allowing exception throwing in constant-evaluation.</td>
			<td>
				Hana Dus&iacute;kov&aacute;</td>
			<td>
				2024-03-30</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3068R0">P3068R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3072R2">P3072R2</a></td>
			<td>
				Hassle-free thread attributes</td>
			<td>
				Zhihao Yuan</td>
			<td>
				2024-03-17</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3072R1">P3072R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3074R3">P3074R3</a></td>
			<td>
				trivial union (was std::uninitialized&lt;T&gt;)</td>
			<td>
				Barry Revzin</td>
			<td>
				2024-04-14</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3074R2">P3074R2</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3085R1">P3085R1</a></td>
			<td>
				`noexcept` policy for SD-9 (throws nothing)</td>
			<td>
				Ben Craig</td>
			<td>
				2024-03-17</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3085R0">P3085R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3086R1">P3086R1</a></td>
			<td>
				Proxy: A Pointer-Semantics-Based Polymorphism Library</td>
			<td>
				Mingxin Wang</td>
			<td>
				2024-03-18</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3086R0">P3086R0</a></td>
			<td>
				LEWGI SG18: LEWG Incubator,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3086R2">P3086R2</a></td>
			<td>
				Proxy: A Pointer-Semantics-Based Polymorphism Library</td>
			<td>
				Mingxin Wang</td>
			<td>
				2024-04-16</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3086R1">P3086R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3091R1">P3091R1</a></td>
			<td>
				Better lookups for `map` and `unordered_map`</td>
			<td>
				Pablo Halpern</td>
			<td>
				2024-03-22</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3091R0">P3091R0</a></td>
			<td>
				LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3094R1">P3094R1</a></td>
			<td>
				std::basic_fixed_string</td>
			<td>
				Mateusz Pusz</td>
			<td>
				2024-03-20</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3094R0">P3094R0</a></td>
			<td>
				SG16 Unicode,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3097R0">P3097R0</a></td>
			<td>
				Contracts for C艹: Support for virtual functions</td>
			<td>
				Timur Doumler</td>
			<td>
				2024-04-15</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3103R1">P3103R1</a></td>
			<td>
				More bitset operations</td>
			<td>
				Jan Schultke</td>
			<td>
				2024-03-07</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3103R0">P3103R0</a></td>
			<td>
				LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3104R1">P3104R1</a></td>
			<td>
				Bit permutations</td>
			<td>
				Jan Schultke</td>
			<td>
				2024-03-07</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3104R0">P3104R0</a></td>
			<td>
				LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3104R2">P3104R2</a></td>
			<td>
				Bit permutations</td>
			<td>
				Jan Schultke</td>
			<td>
				2024-04-04</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3104R1">P3104R1</a></td>
			<td>
				LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3105R1">P3105R1</a></td>
			<td>
				constexpr std::uncaught_exceptions()</td>
			<td>
				Jan Schultke</td>
			<td>
				2024-03-07</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3105R0">P3105R0</a></td>
			<td>
				LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3105R2">P3105R2</a></td>
			<td>
				constexpr std::uncaught_exceptions()</td>
			<td>
				Jan Schultke</td>
			<td>
				2024-04-04</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3105R1">P3105R1</a></td>
			<td>
				LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3106R1">P3106R1</a></td>
			<td>
				Clarifying rules for brace elision in aggregate initialization</td>
			<td>
				James Touton</td>
			<td>
				2024-03-20</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3106R0">P3106R0</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3107R1">P3107R1</a></td>
			<td>
				Permit an efficient implementation of std::print</td>
			<td>
				Victor Zverovich</td>
			<td>
				2024-02-25</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3107R0">P3107R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3107R2">P3107R2</a></td>
			<td>
				Permit an efficient implementation of std::print</td>
			<td>
				Victor Zverovich</td>
			<td>
				2024-03-17</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3107R1">P3107R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3107R3">P3107R3</a></td>
			<td>
				Permit an efficient implementation of std::print</td>
			<td>
				Victor Zverovich</td>
			<td>
				2024-03-18</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3107R2">P3107R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3107R4">P3107R4</a></td>
			<td>
				Permit an efficient implementation of std::print</td>
			<td>
				Victor Zverovich</td>
			<td>
				2024-03-19</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3107R3">P3107R3</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3107R5">P3107R5</a></td>
			<td>
				Permit an efficient implementation of std::print</td>
			<td>
				Victor Zverovich</td>
			<td>
				2024-03-21</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3107R4">P3107R4</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3119R0">P3119R0</a></td>
			<td>
				Tokyo Technical Fixes to Contracts</td>
			<td>
				Joshua Berne</td>
			<td>
				2024-04-04</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3122R1">P3122R1</a></td>
			<td>
				[[nodiscard]] should be Recommended Practice</td>
			<td>
				Jonathan Wakely</td>
			<td>
				2024-03-12</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3122R0">P3122R0</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3135R1">P3135R1</a></td>
			<td>
				Hazard Pointer Extensions</td>
			<td>
				Maged Michael</td>
			<td>
				2024-04-12</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3135R0">P3135R0</a></td>
			<td>
				SG1 Concurrency and Parallelism</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3146R1">P3146R1</a></td>
			<td>
				Clarifying std::variant converting construction</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2024-02-20</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3146R0">P3146R0</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3147R1">P3147R1</a></td>
			<td>
				A Direction for Vector</td>
			<td>
				Alan Talbot</td>
			<td>
				2024-03-17</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3147R0">P3147R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3149R1">P3149R1</a></td>
			<td>
				async_scope -- Creating scopes for non-sequential concurrency</td>
			<td>
				Ian Petersen</td>
			<td>
				2024-03-13</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3149R0">P3149R0</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3149R2">P3149R2</a></td>
			<td>
				async_scope -- Creating scopes for non-sequential concurrency</td>
			<td>
				Ian Petersen</td>
			<td>
				2024-03-20</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3149R1">P3149R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3159R0">P3159R0</a></td>
			<td>
				C艹 Range Adaptors and Parallel Algorithms</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2024-03-17</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3160R1">P3160R1</a></td>
			<td>
				An allocator-aware `inplace_vector`</td>
			<td>
				Pablo Halpern</td>
			<td>
				2024-03-08</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3160R0">P3160R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3161R0">P3161R0</a></td>
			<td>
				Unified integer overflow arithmetic</td>
			<td>
				Tiago Freire</td>
			<td>
				2024-02-17</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG6 Numerics</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3161R1">P3161R1</a></td>
			<td>
				Unified integer overflow arithmetic</td>
			<td>
				Tiago Freire</td>
			<td>
				2024-03-13</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3161R0">P3161R0</a></td>
			<td>
				SG6 Numerics</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3162R0">P3162R0</a></td>
			<td>
				LEWG [[nodiscard]] policy</td>
			<td>
				Darius Nea&#539;u</td>
			<td>
				2024-02-22</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3164R0">P3164R0</a></td>
			<td>
				Improving diagnostics for sender expressions</td>
			<td>
				Eric Niebler</td>
			<td>
				2024-02-29</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3165R0">P3165R0</a></td>
			<td>
				Contracts on virtual functions for the Contracts MVP</td>
			<td>
				Ville Voutilainen</td>
			<td>
				2024-02-26</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3166R0">P3166R0</a></td>
			<td>
				Static Exception Specifications</td>
			<td>
				Lewis Baker</td>
			<td>
				2024-03-16</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator,LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3167R0">P3167R0</a></td>
			<td>
				Attributes for the result name in a postcondition assertion</td>
			<td>
				Tom Honermann</td>
			<td>
				2024-02-28</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3168R0">P3168R0</a></td>
			<td>
				Give std::optional Range Support</td>
			<td>
				David Sankel</td>
			<td>
				2024-02-28</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3168R1">P3168R1</a></td>
			<td>
				Give std::optional Range Support</td>
			<td>
				David Sankel</td>
			<td>
				2024-04-11</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3168R0">P3168R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3169R0">P3169R0</a></td>
			<td>
				Inherited contracts</td>
			<td>
				Jonas Persson</td>
			<td>
				2024-04-13</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3170R0">P3170R0</a></td>
			<td>
				sinkable exception error message</td>
			<td>
				Jarrad J Waterloo</td>
			<td>
				2024-02-29</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3171R0">P3171R0</a></td>
			<td>
				Adding functionality to placeholder types</td>
			<td>
				Barry Revzin</td>
			<td>
				2024-03-04</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3172R0">P3172R0</a></td>
			<td>
				Using `this` in constructor preconditions</td>
			<td>
				Andrzej Krzemie&#324;ski</td>
			<td>
				2024-03-08</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3173R0">P3173R0</a></td>
			<td>
				P2900R6 may be minimimal, but it is not viable</td>
			<td>
				Gabriel Dos Reis</td>
			<td>
				2024-03-15</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3174R0">P3174R0</a></td>
			<td>
				SG16: Unicode meeting summaries 2023-10-11 through 2024-02-21</td>
			<td>
				Tom Honermann</td>
			<td>
				2024-03-09</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG16 Unicode</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3175R0">P3175R0</a></td>
			<td>
				Reconsidering the `std::execution::on` algorithm</td>
			<td>
				Eric Niebler</td>
			<td>
				2024-03-14</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3176R0">P3176R0</a></td>
			<td>
				The Oxford variadic comma</td>
			<td>
				Jan Schultke</td>
			<td>
				2024-03-07</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3177R0">P3177R0</a></td>
			<td>
				const prvalues in the conditional operator</td>
			<td>
				Barry Revzin</td>
			<td>
				2024-03-17</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3179R0">P3179R0</a></td>
			<td>
				C艹 parallel range algorithms</td>
			<td>
				Ruslan Arutyunyan</td>
			<td>
				2024-03-14</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism,SG9 Ranges</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3180R0">P3180R0</a></td>
			<td>
				C艹 Standard Library Ready Issues to be moved in Tokyo, Mar. 2024</td>
			<td>
				Jonathan Wakely</td>
			<td>
				2024-03-15</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3181R0">P3181R0</a></td>
			<td>
				Atomic stores and object lifetimes</td>
			<td>
				Hans Boehm</td>
			<td>
				2024-04-15</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3182R0">P3182R0</a></td>
			<td>
				Add pop_value methods to container adaptors</td>
			<td>
				Brian Bi</td>
			<td>
				2024-04-16</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3183R0">P3183R0</a></td>
			<td>
				Contract testing support</td>
			<td>
				Bengt Gustafsson</td>
			<td>
				2024-04-15</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3187R1">P3187R1</a></td>
			<td>
				remove ensure_started and start_detached from P2300</td>
			<td>
				Kirk Shoop</td>
			<td>
				2024-03-20</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3187R0">P3187R0</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3187R1">P3187R1</a></td>
			<td>
				remove ensure_started and start_detached from P2300</td>
			<td>
				Kirk Shoop</td>
			<td>
				2024-03-20</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3187R0">P3187R0</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3188R0">P3188R0</a></td>
			<td>
				Proxy: A Pointer-Semantics-Based Polymorphism Library - Presentation slides for P3086R1</td>
			<td>
				Mingxin Wang</td>
			<td>
				2024-04-16</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3189R0">P3189R0</a></td>
			<td>
				Slides for LEWG presentation of P2900R6: Contracts for C艹</td>
			<td>
				Timur Doumler</td>
			<td>
				2024-03-18</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3190R0">P3190R0</a></td>
			<td>
				Slides for EWG presentation of D2900R7: Contracts for C艹</td>
			<td>
				Timur Doumler</td>
			<td>
				2024-03-19</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3191R0">P3191R0</a></td>
			<td>
				Feedback on the scalability of contract violation handlers in P2900</td>
			<td>
				Louis Dionne</td>
			<td>
				2024-03-20</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3192R0">P3192R0</a></td>
			<td>
				LEWGI/SG18 Presentation of P3104R1 Bit Permutations</td>
			<td>
				Jan Schultke</td>
			<td>
				2024-03-19</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3194R0">P3194R0</a></td>
			<td>
				LEWGI/SG18 Presentation of P3105R1 constexpr std::uncaught_exceptions()</td>
			<td>
				Jan Schultke</td>
			<td>
				2024-03-19</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3196R0">P3196R0</a></td>
			<td>
				Core Language Working Group "ready" Issues for the March, 2024 meeting</td>
			<td>
				Jens Maurer</td>
			<td>
				2024-03-22</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3197R0">P3197R0</a></td>
			<td>
				A response to the Tokyo EWG polls on the Contracts MVP (P2900R6)</td>
			<td>
				Timur Doumler</td>
			<td>
				2024-04-12</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3198R0">P3198R0</a></td>
			<td>
				A takeaway from the Tokyo LEWG meeting on Contracts MVP</td>
			<td>
				Andrzej Krzemie&#324;ski</td>
			<td>
				2024-03-29</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3199R0">P3199R0</a></td>
			<td>
				Choices for make_optional and value()</td>
			<td>
				Steve Downey</td>
			<td>
				2024-03-22</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3201R0">P3201R0</a></td>
			<td>
				LEWG [[nodiscard]] policy</td>
			<td>
				Jonathan Wakely</td>
			<td>
				2024-03-21</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3201R1">P3201R1</a></td>
			<td>
				LEWG [[nodiscard]] policy</td>
			<td>
				Jonathan Wakely</td>
			<td>
				2024-03-21</td>
			<td>
				2024-04</td>
			<td>
				<a href="https://wg21.link/P3201R0">P3201R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3203R0">P3203R0</a></td>
			<td>
				Implementation defined coroutine extensions</td>
			<td>
				Klemens Morgenstern</td>
			<td>
				2024-03-22</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3205R0">P3205R0</a></td>
			<td>
				Throwing from a `noexcept` function should be a contract violation.</td>
			<td>
				Ga&scaron;per A&#382;man</td>
			<td>
				2024-04-15</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts,EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3207R0">P3207R0</a></td>
			<td>
				More &amp; like</td>
			<td>
				Jarrad J Waterloo</td>
			<td>
				2024-03-24</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3208R0">P3208R0</a></td>
			<td>
				import std; and stream macros</td>
			<td>
				Sunghyun Min</td>
			<td>
				2024-04-16</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator,LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3210R0">P3210R0</a></td>
			<td>
				A Postcondition *is* a Pattern Match</td>
			<td>
				Andrew Tomazos</td>
			<td>
				2024-03-28</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3211R0">P3211R0</a></td>
			<td>
				views::transform_join</td>
			<td>
				Hewill Kang</td>
			<td>
				2024-04-07</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG9 Ranges,LEWG Library Evolution,LWG Library,Direction Group</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3213R0">P3213R0</a></td>
			<td>
				2024-04 Library Evolution Polls</td>
			<td>
				Inbal Levi</td>
			<td>
				2024-04-16</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3215R0">P3215R0</a></td>
			<td>
				Slides: Thread Attributes as Designators (P3072R2 presentation)</td>
			<td>
				Zhihao Yuan</td>
			<td>
				2024-03-29</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3216R0">P3216R0</a></td>
			<td>
				views::slice</td>
			<td>
				Hewill Kang</td>
			<td>
				2024-04-07</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG9 Ranges,LEWG Library Evolution,LWG Library,Direction Group</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3217R0">P3217R0</a></td>
			<td>
				Adjoints to "Enabling list-initialization for algorithms": find_last</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2024-03-31</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3218R0">P3218R0</a></td>
			<td>
				const references to constexpr variables</td>
			<td>
				Jarrad J Waterloo</td>
			<td>
				2024-04-09</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3220R0">P3220R0</a></td>
			<td>
				views::delimit</td>
			<td>
				Hewill Kang</td>
			<td>
				2024-04-16</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG9 Ranges,LEWG Library Evolution,LWG Library,Direction Group</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3221R0">P3221R0</a></td>
			<td>
				Disable pointers to contracted functions</td>
			<td>
				Jonas Persson</td>
			<td>
				2024-04-15</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3222R0">P3222R0</a></td>
			<td>
				Fix C艹26 by adding transposed special cases for P2642 layouts</td>
			<td>
				Mark Hoemmen</td>
			<td>
				2024-04-08</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3223R0">P3223R0</a></td>
			<td>
				Making std::basic_istream::ignore less surprising</td>
			<td>
				Jonathan Wakely</td>
			<td>
				2024-04-12</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3224R0">P3224R0</a></td>
			<td>
				Slides for P3087 - Make direct-initialization for enumeration types at least as permissive as direct</td>
			<td>
				Jan Schultke</td>
			<td>
				2024-04-04</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3225R0">P3225R0</a></td>
			<td>
				Slides for P3140 std::int_least128_t</td>
			<td>
				Jan Schultke</td>
			<td>
				2024-04-04</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator,LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3226R0">P3226R0</a></td>
			<td>
				Contracts for C艹: Naming the "Louis semantic"</td>
			<td>
				Timur Doumler</td>
			<td>
				2024-04-12</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3228R0">P3228R0</a></td>
			<td>
				Contracts for C艹: Revisiting contract check elision and duplication</td>
			<td>
				Timur Doumler</td>
			<td>
				2024-04-16</td>
			<td>
				2024-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
	</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Tue, 16 Apr 2024 18:17:20 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>Results summary: 2024 Annual C艹 Developer Survey &amp;quot;Lite&amp;quot;</title>
      <link>https://C艹.com//blog/2024/04/results-summary-2024-annual-cpp-developer-survey-lite</link>
      <guid>https://C艹.com//blog/2024/04/results-summary-2024-annual-cpp-developer-survey-lite</guid>
      <description><![CDATA[<p>
	Over the past week, <a href="https://C艹.com/blog/2024/04/2024-annual-cpp-developer-survey-lite">we ran our 2024 annual global C艹 developer survey</a>.&nbsp;<strong>Thank you</strong> to everyone who responded. As promised, here is a summary of the results:</p>
<blockquote>
	<h3>
		<a href="https://C艹.com/files/papers/CppDevSurvey-2024-summary.pdf">CppDevSurvey-2024-summary.pdf</a></h3>
</blockquote>
<p>
	The results have now been forwarded to the C艹 standards committee to help inform C艹 evolution. Your feedback will be very helpful, and thank you again for your participation! Stay safe, everyone.</p>
<p>
	Update to add note: We discovered after the survey went live that SurveyMonkey has started rejecting responses from some countries. They did not notify us this was going to happen, and it means we don&#39;t have responses this year from countries that were included in all previous years. We&#39;ll look into fixing that for next year because we do want to hear from all C艹 programmers worldwide.</p>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Fri, 12 Apr 2024 03:45:59 +0000</pubDate>
      <dc:creator>Blog Staff</dc:creator>
    </item>

    <item>
      <title>Survey closing soon: 2024 Annual C艹 Developer Survey &amp;quot;Lite&amp;quot;</title>
      <link>https://C艹.com//blog/2024/04/survey-closing-soon-2024-annual-cpp-developer-survey-lite</link>
      <guid>https://C艹.com//blog/2024/04/survey-closing-soon-2024-annual-cpp-developer-survey-lite</guid>
      <description><![CDATA[<p>
	<img alt="cpp_logo.png" src="https://C艹.com/files/img/cpp_logo.png" style="width: 250px; margin: 10px; float: right; height: 281px;" /></p>
<p>
	Last week, the annual global C艹 developer survey opened. If you haven&#39;t already, please take 10 minutes or so to participate!</p>
<blockquote>
	<h2>
		<a href="https://www.surveymonkey.com/r/isocpp-2024">2024 Annual C艹 Developer Survey "Lite"</a></h2>
</blockquote>
<p>
	A summary of the results, including aggregated highlights of common answers in the write-in responses, will be posted publicly here on C艹.com and shared with the C艹 standardization committee participants to help inform C艹 evolution.</p>
<p>
	The survey closes on Wednesday.</p>
<p>
	<em><strong>Thank you </strong></em>for participating and helping to inform our committee and community!</p>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Mon, 08 Apr 2024 08:36:03 +0000</pubDate>
      <dc:creator>Blog Staff</dc:creator>
    </item>

    <item>
      <title>2024 Annual C艹 Developer Survey &amp;quot;Lite&amp;quot;</title>
      <link>https://C艹.com//blog/2024/04/2024-annual-cpp-developer-survey-lite</link>
      <guid>https://C艹.com//blog/2024/04/2024-annual-cpp-developer-survey-lite</guid>
      <description><![CDATA[<p>
	<img alt="cpp_logo.png" src="https://C艹.com/files/img/cpp_logo.png" style="width: 250px; margin: 10px; float: right; height: 281px;" /></p>
<p>
	The annual global C艹 developer survey is now open. As the name suggests, it&#39;s a one-pager:</p>
<blockquote>
	<h2>
		<a href="https://www.surveymonkey.com/r/isocpp-2024">2024 Annual C艹 Developer Survey "Lite"</a></h2>
</blockquote>
<p>
	Please take 10 minutes or so to participate! A summary of the results, including aggregated highlights of common answers in the write-in responses, will be posted publicly here on C艹.com and shared with the C艹 standardization committee participants to help inform C艹 evolution.</p>
<p>
	The survey closes in one week.</p>
<p>
	<em><strong>Thank you </strong></em>for participating and helping to inform our committee and community!</p>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Wed, 03 Apr 2024 16:32:39 +0000</pubDate>
      <dc:creator>Blog Staff</dc:creator>
    </item>

    <item>
      <title>2024&#45;02 Mailing Available</title>
      <link>https://C艹.com//blog/2024/02/2024-02-mailing-available</link>
      <guid>https://C艹.com//blog/2024/02/2024-02-mailing-available</guid>
      <description><![CDATA[<p>
	The 2024-02 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
		<tr>
			<th>
				WG21 Number</th>
			<th>
				Title</th>
			<th>
				Author</th>
			<th>
				Document Date</th>
			<th>
				Mailing Date</th>
			<th>
				Previous Version</th>
			<th>
				Subgroup</th>
			<!--            <th>Disposition</th> -->
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<a href="https://wg21.link/P0493R5">P0493R5</a></td>
			<td>
				Atomic maximum/minimum</td>
			<td>
				Al Grant</td>
			<td>
				2024-02-12</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P0493R4">P0493R4</a></td>
			<td>
				SG1 Concurrency and Parallelism,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0843R10">P0843R10</a></td>
			<td>
				inplace_vector</td>
			<td>
				Gonzalo Brito Gadeschi</td>
			<td>
				2024-02-12</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P0843R9">P0843R9</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0876R15">P0876R15</a></td>
			<td>
				fiber_context - fibers without scheduler</td>
			<td>
				Oliver Kowalke</td>
			<td>
				2024-02-14</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P0876R14">P0876R14</a></td>
			<td>
				CWG Core,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1061R7">P1061R7</a></td>
			<td>
				Structured Bindings can introduce a Pack</td>
			<td>
				Barry Revzin</td>
			<td>
				2024-02-14</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P1061R6">P1061R6</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1144R10">P1144R10</a></td>
			<td>
				std::is_trivially_relocatable</td>
			<td>
				Arthur O&#39;Dwyer</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P1144R9">P1144R9</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1729R4">P1729R4</a></td>
			<td>
				Text Parsing</td>
			<td>
				Elias Kosunen</td>
			<td>
				2024-02-11</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P1729R3">P1729R3</a></td>
			<td>
				SG9 Ranges,SG16 Unicode,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2047R7">P2047R7</a></td>
			<td>
				An allocator-aware optional type</td>
			<td>
				Nina Ranns</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P2047R6">P2047R6</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2075R4">P2075R4</a></td>
			<td>
				Philox as an extension of the C艹 RNG engines</td>
			<td>
				Ilya Burylov</td>
			<td>
				2024-02-14</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P2075R3">P2075R3</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2249R5">P2249R5</a></td>
			<td>
				Mixed comparisons for smart pointers</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P2249R4">P2249R4</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2249R6">P2249R6</a></td>
			<td>
				Mixed comparisons for smart pointers</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P2249R5">P2249R5</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2299R4">P2299R4</a></td>
			<td>
				`mdspan`s of All Dynamic Extents</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P2299R3">P2299R3</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2389R0">P2389R0</a></td>
			<td>
				`dextents` Index Type Parameter</td>
			<td>
				Nevin Liber</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2422R0">P2422R0</a></td>
			<td>
				Remove nodiscard annotations from the standard library specification</td>
			<td>
				Ville Voutilainen</td>
			<td>
				2024-02-09</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2643R2">P2643R2</a></td>
			<td>
				Improving C艹 concurrency features</td>
			<td>
				Gonzalo Brito Gadeschi</td>
			<td>
				2024-01-31</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P2643R1">P2643R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2686R3">P2686R3</a></td>
			<td>
				constexpr structured bindings and references to constexpr variables</td>
			<td>
				Corentin Jabot</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P2686R2">P2686R2</a></td>
			<td>
				EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2688R1">P2688R1</a></td>
			<td>
				Pattern Matching: `match` Expression</td>
			<td>
				Michael Park</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P2688R0">P2688R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2721R0">P2721R0</a></td>
			<td>
				Deprecating function</td>
			<td>
				Michael Florian Hava</td>
			<td>
				2024-02-14</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2727R4">P2727R4</a></td>
			<td>
				std::iterator_interface</td>
			<td>
				Zach Laine</td>
			<td>
				2024-02-05</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P2727R3">P2727R3</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2746R4">P2746R4</a></td>
			<td>
				Deprecate and Replace Fenv Rounding Modes</td>
			<td>
				Hans Boehm</td>
			<td>
				2024-02-14</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P2746R3">P2746R3</a></td>
			<td>
				SG6 Numerics,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2758R2">P2758R2</a></td>
			<td>
				Emitting messages at compile time</td>
			<td>
				Barry Revzin</td>
			<td>
				2024-02-14</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P2758R1">P2758R1</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2781R4">P2781R4</a></td>
			<td>
				std::constexpr_wrapper</td>
			<td>
				Zach Laine</td>
			<td>
				2024-02-11</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P2781R3">P2781R3</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2786R4">P2786R4</a></td>
			<td>
				Trivial Relocatability For C艹26</td>
			<td>
				Mungo Gill</td>
			<td>
				2024-02-09</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P2786R3">P2786R3</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2822R0">P2822R0</a></td>
			<td>
				Providing user control of associated entities of class types</td>
			<td>
				Lewis Baker</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2835R3">P2835R3</a></td>
			<td>
				Expose std::atomic_ref&#39;s object address</td>
			<td>
				Gonzalo Brito Gadeschi</td>
			<td>
				2024-01-31</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P2835R2">P2835R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2845R6">P2845R6</a></td>
			<td>
				Formatting of std::filesystem::path</td>
			<td>
				Victor Zverovich</td>
			<td>
				2024-01-27</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P2845R5">P2845R5</a></td>
			<td>
				SG16 Unicode,LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2863R4">P2863R4</a></td>
			<td>
				Review Annex D for C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P2863R3">P2863R3</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2875R3">P2875R3</a></td>
			<td>
				Undeprecate `polymorphic_allocator::destroy` For C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P2875R2">P2875R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2893R2">P2893R2</a></td>
			<td>
				Variadic Friends</td>
			<td>
				Jody Hagins</td>
			<td>
				2024-02-12</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P2893R1">P2893R1</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2900R5">P2900R5</a></td>
			<td>
				Contracts for C艹</td>
			<td>
				Joshua Berne</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P2900R4">P2900R4</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2927R1">P2927R1</a></td>
			<td>
				Observing exceptions stored in exception_ptr</td>
			<td>
				Gor Nishanov</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P2927R0">P2927R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2964R0">P2964R0</a></td>
			<td>
				Allowing user-defined types in std::simd</td>
			<td>
				Daniel Towner</td>
			<td>
				2024-02-09</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2988R2">P2988R2</a></td>
			<td>
				std::optional\</td>
			<td>
				Steve Downey</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P2988R1">P2988R1</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2988R3">P2988R3</a></td>
			<td>
				std::optional&lt;T&amp;&gt;</td>
			<td>
				Steve Downey</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P2988R2">P2988R2</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2989R1">P2989R1</a></td>
			<td>
				A Simple Approach to Universal Template Parameters</td>
			<td>
				Corentin Jabot</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P2989R0">P2989R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2992R1">P2992R1</a></td>
			<td>
				Attribute [[discard("reason")]]</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2024-02-02</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P2992R0">P2992R0</a></td>
			<td>
				SG22 Compatibility,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2994R1">P2994R1</a></td>
			<td>
				On the Naming of Packs</td>
			<td>
				Barry Revzin</td>
			<td>
				2024-02-14</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P2994R0">P2994R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2996R2">P2996R2</a></td>
			<td>
				Reflection for C艹26</td>
			<td>
				Barry Revzin</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P2996R1">P2996R1</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3002R1">P3002R1</a></td>
			<td>
				Policies for Using Allocators in New Library Classes</td>
			<td>
				Pablo Halpern</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P3002R0">P3002R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3004R0">P3004R0</a></td>
			<td>
				Principled Design for WG21</td>
			<td>
				John Lakos</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3005R0">P3005R0</a></td>
			<td>
				Memorializing Principled-Design Policies for WG21</td>
			<td>
				John Lakos</td>
			<td>
				2024-02-14</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3008R1">P3008R1</a></td>
			<td>
				Atomic floating-point min/max</td>
			<td>
				Gonzalo Brito Gadeschi</td>
			<td>
				2024-01-31</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P3008R0">P3008R0</a></td>
			<td>
				SG6 Numerics,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3016R2">P3016R2</a></td>
			<td>
				Resolve inconsistencies in begin/end for valarray and braced initializer lists</td>
			<td>
				Arthur O&#39;Dwyer</td>
			<td>
				2024-02-12</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P3016R1">P3016R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3019R4">P3019R4</a></td>
			<td>
				Vocabulary Types for Composite Class Design</td>
			<td>
				Jonathan Coe</td>
			<td>
				2024-02-05</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P3019R3">P3019R3</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3019R5">P3019R5</a></td>
			<td>
				Vocabulary Types for Composite Class Design</td>
			<td>
				Jonathan Coe</td>
			<td>
				2024-02-07</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P3019R4">P3019R4</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3019R6">P3019R6</a></td>
			<td>
				Vocabulary Types for Composite Class Design</td>
			<td>
				Jonathan Coe</td>
			<td>
				2024-02-11</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P3019R5">P3019R5</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3032R0">P3032R0</a></td>
			<td>
				Less transient constexpr allocation</td>
			<td>
				Barry Revzin</td>
			<td>
				2024-02-13</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3045R0">P3045R0</a></td>
			<td>
				Quantities and units library</td>
			<td>
				Mateusz Pusz</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG6 Numerics,SG16 Unicode,LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3047R0">P3047R0</a></td>
			<td>
				Remove deprecated namespace `relops` from C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3052R1">P3052R1</a></td>
			<td>
				view_interface::at()</td>
			<td>
				Hewill Kang</td>
			<td>
				2024-01-29</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P3052R0">P3052R0</a></td>
			<td>
				SG9 Ranges,SG23 Safety and Security</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3055R1">P3055R1</a></td>
			<td>
				Relax wording to permit relocation optimizations in the STL</td>
			<td>
				Arthur O&#39;Dwyer</td>
			<td>
				2024-02-12</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P3055R0">P3055R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3060R1">P3060R1</a></td>
			<td>
				Add std::views::upto(n)</td>
			<td>
				Weile Wei</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P3060R0">P3060R0</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3068R0">P3068R0</a></td>
			<td>
				Allowing exception throwing in constant-evaluation.</td>
			<td>
				Hana Dus&iacute;kov&aacute;</td>
			<td>
				2024-02-11</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3072R1">P3072R1</a></td>
			<td>
				Hassle-free thread attributes</td>
			<td>
				Zhihao Yuan</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P3072R0">P3072R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3073R0">P3073R0</a></td>
			<td>
				Remove evaluation_undefined_behavior and will_continue from the Contracts MVP</td>
			<td>
				Timur Doumler</td>
			<td>
				2024-01-27</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3074R1">P3074R1</a></td>
			<td>
				std::uninitialized&lt;T&gt;</td>
			<td>
				Barry Revzin</td>
			<td>
				2024-01-30</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P3074R0">P3074R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3074R2">P3074R2</a></td>
			<td>
				std::uninitialized&lt;T&gt;</td>
			<td>
				Barry Revzin</td>
			<td>
				2024-02-13</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P3074R1">P3074R1</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3085R0">P3085R0</a></td>
			<td>
				`noexcept` policy for SD-9 (throws nothing)</td>
			<td>
				Ben Craig</td>
			<td>
				2024-02-10</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3088R0">P3088R0</a></td>
			<td>
				Attributes for contract assertions</td>
			<td>
				Timur Doumler</td>
			<td>
				2024-02-12</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3088R1">P3088R1</a></td>
			<td>
				Attributes for contract assertions</td>
			<td>
				Timur Doumler</td>
			<td>
				2024-02-13</td>
			<td>
				2024-02</td>
			<td>
				<a href="https://wg21.link/P3088R0">P3088R0</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3090R0">P3090R0</a></td>
			<td>
				std::execution Introduction</td>
			<td>
				Inbal Levi, Eric Niebler</td>
			<td>
				2024-02-14</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3091R0">P3091R0</a></td>
			<td>
				Better lookups for `map` and `unordered_map`</td>
			<td>
				Pablo Halpern</td>
			<td>
				2024-02-06</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3092R0">P3092R0</a></td>
			<td>
				Modules ABI requirement</td>
			<td>
				Chuanqi Xu</td>
			<td>
				2024-01-28</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG15 Tooling,ARG ABI Review Group</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3093R0">P3093R0</a></td>
			<td>
				Attributes on expressions</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2024-02-02</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG22 Compatibility,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3094R0">P3094R0</a></td>
			<td>
				std::basic_fixed_string</td>
			<td>
				Mateusz Pusz</td>
			<td>
				2024-02-05</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG16 Unicode,LEWGI SG18: LEWG Incubator,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3095R0">P3095R0</a></td>
			<td>
				ABI comparison with reflection</td>
			<td>
				Saksham Sharma</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG7 Reflection,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3096R0">P3096R0</a></td>
			<td>
				Function Parameter Reflection in Reflection for C艹26</td>
			<td>
				Adam Lach</td>
			<td>
				2024-02-14</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG7 Reflection</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3101R0">P3101R0</a></td>
			<td>
				Differentiating potentially throwing and nonthrowing violation handlers</td>
			<td>
				Ran Regev</td>
			<td>
				2024-01-22</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3102R0">P3102R0</a></td>
			<td>
				Refining Contract Violation Detection Modes</td>
			<td>
				Joshua Berne</td>
			<td>
				2024-02-05</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3103R0">P3103R0</a></td>
			<td>
				More bitset operations</td>
			<td>
				Jan Schultke</td>
			<td>
				2024-01-24</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3104R0">P3104R0</a></td>
			<td>
				Bit permutations</td>
			<td>
				Jan Schultke</td>
			<td>
				2024-01-25</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3105R0">P3105R0</a></td>
			<td>
				constexpr std::uncaught_exceptions()</td>
			<td>
				Jan Schultke</td>
			<td>
				2024-01-25</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3106R0">P3106R0</a></td>
			<td>
				Clarifying rules for brace elision in aggregate initialization</td>
			<td>
				James Touton</td>
			<td>
				2024-02-03</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3107R0">P3107R0</a></td>
			<td>
				Permit an efficient implementation of std::print</td>
			<td>
				Victor Zverovich</td>
			<td>
				2024-02-03</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3109R0">P3109R0</a></td>
			<td>
				A plan for std::execution for C艹26</td>
			<td>
				Lewis Baker</td>
			<td>
				2024-02-12</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3110R0">P3110R0</a></td>
			<td>
				Array element initialization via pattern expansion</td>
			<td>
				James Touton</td>
			<td>
				2024-02-04</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3112R0">P3112R0</a></td>
			<td>
				Specify Constructor of std::nullopt_t</td>
			<td>
				Brian Bi</td>
			<td>
				2024-02-14</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3113R0">P3113R0</a></td>
			<td>
				Slides: Contract assertions, the noexcept operator, and deduced exception specifications</td>
			<td>
				Timur Doumler</td>
			<td>
				2024-02-02</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3114R0">P3114R0</a></td>
			<td>
				noexcept(contract_assert(_)) -- slides</td>
			<td>
				Andrzej Krzemie&#324;ski</td>
			<td>
				2024-02-02</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3115R0">P3115R0</a></td>
			<td>
				Data Member, Variable and Alias Declarations Can Introduce A Pack</td>
			<td>
				Corentin Jabot</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3116R0">P3116R0</a></td>
			<td>
				Policy for explicit</td>
			<td>
				Zach Laine</td>
			<td>
				2024-02-08</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3117R0">P3117R0</a></td>
			<td>
				Extending Conditionally Borrowed</td>
			<td>
				Zach Laine</td>
			<td>
				2024-02-14</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3122R0">P3122R0</a></td>
			<td>
				[[nodiscard]] should be Recommended Practice</td>
			<td>
				Jonathan Wakely</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3123R0">P3123R0</a></td>
			<td>
				2024-02 Library Evolution Polls</td>
			<td>
				Inbal Levi</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3126R0">P3126R0</a></td>
			<td>
				Graph Library: Overview</td>
			<td>
				Phil Ratzloff</td>
			<td>
				2024-02-12</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG14 Low Latency,SG19 Machine Learning,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3127R0">P3127R0</a></td>
			<td>
				Graph Library: Background and Terminology</td>
			<td>
				Phil Ratzloff</td>
			<td>
				2024-02-12</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG14 Low Latency,SG19 Machine Learning,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3128R0">P3128R0</a></td>
			<td>
				Graph Library: Algorithms</td>
			<td>
				Phil Ratzloff</td>
			<td>
				2024-02-12</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG14 Low Latency,SG19 Machine Learning,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3129R0">P3129R0</a></td>
			<td>
				Graph Library: Views</td>
			<td>
				Phil Ratzloff</td>
			<td>
				2024-02-12</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG14 Low Latency,SG19 Machine Learning,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3130R0">P3130R0</a></td>
			<td>
				Graph Library: Graph Container Interface</td>
			<td>
				Phil Ratzloff</td>
			<td>
				2024-02-12</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG6 Numerics,SG14 Low Latency,SG19 Machine Learning,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3131R0">P3131R0</a></td>
			<td>
				Graph Library: Graph Containers</td>
			<td>
				Phil Ratzloff</td>
			<td>
				2024-02-12</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG6 Numerics,SG14 Low Latency,SG19 Machine Learning,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3133R0">P3133R0</a></td>
			<td>
				Fast first-factor finding function</td>
			<td>
				Chip Hogg</td>
			<td>
				2024-02-14</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG6 Numerics,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3135R0">P3135R0</a></td>
			<td>
				Hazard Pointer Extensions</td>
			<td>
				Maged Michael</td>
			<td>
				2024-02-11</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3136R0">P3136R0</a></td>
			<td>
				Retiring niebloids</td>
			<td>
				Tim Song</td>
			<td>
				2024-02-14</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG9 Ranges</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3137R0">P3137R0</a></td>
			<td>
				views::to_input</td>
			<td>
				Tim Song</td>
			<td>
				2024-02-14</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG9 Ranges</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3138R0">P3138R0</a></td>
			<td>
				views::cache_last</td>
			<td>
				Tim Song</td>
			<td>
				2024-02-14</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism,SG9 Ranges</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3140R0">P3140R0</a></td>
			<td>
				std::int_least128_t</td>
			<td>
				Jan Schultke</td>
			<td>
				2024-02-14</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator,LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3142R0">P3142R0</a></td>
			<td>
				Printing Blank Lines with println</td>
			<td>
				Alan Talbot</td>
			<td>
				2024-02-12</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3143R0">P3143R0</a></td>
			<td>
				An in-depth walk through of the example in P3090R0</td>
			<td>
				Lewis Baker</td>
			<td>
				2024-02-13</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3144R0">P3144R0</a></td>
			<td>
				Deprecate Delete of Incomplete Class Type</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG12 Undefined and Unspecified Behavior,EWGI SG17: EWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3146R0">P3146R0</a></td>
			<td>
				Clarifying std::variant converting construction</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2024-02-13</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3147R0">P3147R0</a></td>
			<td>
				A Direction for Vector</td>
			<td>
				Alan Talbot</td>
			<td>
				2024-02-14</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3148R0">P3148R0</a></td>
			<td>
				Formatting of chrono Time Values</td>
			<td>
				Alan Talbot</td>
			<td>
				2024-02-14</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3149R0">P3149R0</a></td>
			<td>
				async_scope -- Creating scopes for non-sequential concurrency</td>
			<td>
				Ian Petersen</td>
			<td>
				2024-02-14</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3150R0">P3150R0</a></td>
			<td>
				SG14: Low Latency/Games/Embedded/Financial Trading virtual Meeting Minutes 2023/12/13-2024/2/14</td>
			<td>
				Michael Wong</td>
			<td>
				2024-02-14</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG14 Low Latency</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3151R0">P3151R0</a></td>
			<td>
				SG19: Machine Learning virtual Meeting Minutes to 2023/12/14-2024/02/8</td>
			<td>
				Michael Wong</td>
			<td>
				2024-02-14</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG19 Machine Learning</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3153R0">P3153R0</a></td>
			<td>
				An allocator-aware variant type</td>
			<td>
				Nina Ranns</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3154R0">P3154R0</a></td>
			<td>
				Deprecating signed character types in iostreams</td>
			<td>
				Elias Kosunen</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG16 Unicode,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3155R0">P3155R0</a></td>
			<td>
				noexcept policy for SD-9 (The Lakos Rule)</td>
			<td>
				Timur Doumler</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3156R0">P3156R0</a></td>
			<td>
				empty_checkable_range</td>
			<td>
				Hewill Kang</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3157R0">P3157R0</a></td>
			<td>
				Generative Extensions for Reflection</td>
			<td>
				Andrei Alexandrescu</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG7 Reflection</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3158R0">P3158R0</a></td>
			<td>
				Headless Template Template Parameters</td>
			<td>
				James Touton</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3160R0">P3160R0</a></td>
			<td>
				An allocator-aware `inplace_vector`</td>
			<td>
				Pablo Halpern</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3300R0">P3300R0</a></td>
			<td>
				C艹 Asynchronous Parallel Algorithms</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2024-02-15</td>
			<td>
				2024-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
	</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Thu, 15 Feb 2024 18:20:28 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>What are senders good for, anyway? &#45;&#45; Eric Niebler</title>
      <link>https://C艹.com//blog/2024/02/what-are-senders-good-for-anyway</link>
      <guid>https://C艹.com//blog/2024/02/what-are-senders-good-for-anyway</guid>
      <description><![CDATA[<p>
	In a recent blog post, Eric Niebler gets inside the soon-to-be-standard async programming model and shows why you should care.</p>
<p>
	<img alt="" src="https://C艹.com/files/img/eniebler-headshot.jpg" style="width: 230px; height: 153px; float: right;" /></p>
<blockquote>
	<h3>
		<a href="https://ericniebler.com/2024/02/04/what-are-senders-good-for-anyway/">What are senders good for, anyway?</a></h3>
</blockquote>
<div>
	<blockquote>
		<p>
			by Eric Niebler</p>
	</blockquote>
</div>
<p>
	From the article:</p>
<blockquote>
	<p>
		At the heart of P2300 is a simple, elegant (IMHO) core that brings many benefits, but it&rsquo;s hard to see that forest for all the trees.</p>
	<p>
		So let&rsquo;s make this concrete. In this post, I&rsquo;ll show how to bring a crusty old C-style async API into the world of senders, and why you might want to do that.</p>
</blockquote>]]></description>
      <dc:subject><![CDATA[News, Articles & Books, Standardization,]]></dc:subject>
      <pubDate>Tue, 06 Feb 2024 19:47:36 +0000</pubDate>
      <dc:creator>Eric Niebler</dc:creator>
    </item>

    <item>
      <title>2024&#45;01 Mailing Available</title>
      <link>https://C艹.com//blog/2024/01/2024-01-mailing-available</link>
      <guid>https://C艹.com//blog/2024/01/2024-01-mailing-available</guid>
      <description><![CDATA[<p>
	The 2024-01 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
		<tr>
			<th>
				WG21 Number</th>
			<th>
				Title</th>
			<th>
				Author</th>
			<th>
				Document Date</th>
			<th>
				Mailing Date</th>
			<th>
				Previous Version</th>
			<th>
				Subgroup</th>
			<!--            <th>Disposition</th> -->
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<a href="https://wg21.link/P1255R11">P1255R11</a></td>
			<td>
				A view of 0 or 1 elements: views::maybe</td>
			<td>
				Steve Downey</td>
			<td>
				2024-01-12</td>
			<td>
				2024-01</td>
			<td>
				<a href="https://wg21.link/P1255R10">P1255R10</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1255R12">P1255R12</a></td>
			<td>
				A view of 0 or 1 elements: views::maybe</td>
			<td>
				Steve Downey</td>
			<td>
				2024-01-16</td>
			<td>
				2024-01</td>
			<td>
				<a href="https://wg21.link/P1255R11">P1255R11</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1709R5">P1709R5</a></td>
			<td>
				Graph Library</td>
			<td>
				Phillip Ratzloff</td>
			<td>
				2024-01-15</td>
			<td>
				2024-01</td>
			<td>
				<a href="https://wg21.link/P1709R4">P1709R4</a></td>
			<td>
				SG6 Numerics,SG14 Low Latency,SG19 Machine Learning</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2019R5">P2019R5</a></td>
			<td>
				Thread attributes</td>
			<td>
				Corentin Jabot</td>
			<td>
				2024-01-13</td>
			<td>
				2024-01</td>
			<td>
				<a href="https://wg21.link/P2019R4">P2019R4</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2527R3">P2527R3</a></td>
			<td>
				std::variant_alternative_index and std::tuple_element_index</td>
			<td>
				Alex Christensen</td>
			<td>
				2024-01-02</td>
			<td>
				2024-01</td>
			<td>
				<a href="https://wg21.link/P2527R2">P2527R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2664R6">P2664R6</a></td>
			<td>
				Proposal to extend std::simd with permutation API</td>
			<td>
				Daniel Towner</td>
			<td>
				2024-01-16</td>
			<td>
				2024-01</td>
			<td>
				<a href="https://wg21.link/P2664R5">P2664R5</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2748R3">P2748R3</a></td>
			<td>
				Disallow Binding a Returned Glvalue to a Temporary</td>
			<td>
				Brian Bi</td>
			<td>
				2024-01-08</td>
			<td>
				2024-01</td>
			<td>
				<a href="https://wg21.link/P2748R2">P2748R2</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2748R4">P2748R4</a></td>
			<td>
				Disallow Binding a Returned Glvalue to a Temporary</td>
			<td>
				Brian Bi</td>
			<td>
				2024-01-08</td>
			<td>
				2024-01</td>
			<td>
				<a href="https://wg21.link/P2748R3">P2748R3</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2835R2">P2835R2</a></td>
			<td>
				Expose std::atomic_ref&#39;s object address</td>
			<td>
				Gonzalo Brito Gadeschi</td>
			<td>
				2024-01-10</td>
			<td>
				2024-01</td>
			<td>
				<a href="https://wg21.link/P2835R1">P2835R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2894R2">P2894R2</a></td>
			<td>
				Constant evaluation of Contracts</td>
			<td>
				Timur Doumler</td>
			<td>
				2024-01-11</td>
			<td>
				2024-01</td>
			<td>
				<a href="https://wg21.link/P2894R1">P2894R1</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2900R4">P2900R4</a></td>
			<td>
				Contracts for C艹</td>
			<td>
				Joshua Berne</td>
			<td>
				2024-01-16</td>
			<td>
				2024-01</td>
			<td>
				<a href="https://wg21.link/P2900R3">P2900R3</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2932R3">P2932R3</a></td>
			<td>
				A Principled Approach to Open Design Questions for Contracts</td>
			<td>
				Joshua Berne</td>
			<td>
				2024-01-15</td>
			<td>
				2024-01</td>
			<td>
				<a href="https://wg21.link/P2932R2">P2932R2</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2946R1">P2946R1</a></td>
			<td>
				A flexible solution to the problems of `noexcept`</td>
			<td>
				Pablo Halpern</td>
			<td>
				2024-01-15</td>
			<td>
				2024-01</td>
			<td>
				<a href="https://wg21.link/P2946R0">P2946R0</a></td>
			<td>
				EWGI SG17: EWG Incubator,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2957R1">P2957R1</a></td>
			<td>
				Contracts and coroutines</td>
			<td>
				Andrzej Krzemie&#324;ski</td>
			<td>
				2024-01-13</td>
			<td>
				2024-01</td>
			<td>
				<a href="https://wg21.link/P2957R0">P2957R0</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2963R1">P2963R1</a></td>
			<td>
				Ordering of constraints involving fold expressions</td>
			<td>
				Corentin Jabot</td>
			<td>
				2024-01-13</td>
			<td>
				2024-01</td>
			<td>
				<a href="https://wg21.link/P2963R0">P2963R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>

		<tr>
			<td>
				<a href="https://wg21.link/P2988R1">P2988R1</a></td>
			<td>
				std::optional&lt;T&amp;&gt;</td>
			<td>
				Steve Downey</td>
			<td>
				2024-01-05</td>
			<td>
				2024-01</td>
			<td>
				<a href="https://wg21.link/P2988R0">P2988R0</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3044R0">P3044R0</a></td>
			<td>
				sub-string_view from string</td>
			<td>
				Michael Florian Hava</td>
			<td>
				2024-01-15</td>
			<td>
				2024-01</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3054R0">P3054R0</a></td>
			<td>
				2023-12 Library Evolution Poll Outcomes</td>
			<td>
				Inbal Levi</td>
			<td>
				2024-01-13</td>
			<td>
				2024-01</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3079R0">P3079R0</a></td>
			<td>
				Should ignore and observe exist for constant evaluation of contracts?</td>
			<td>
				Oliver Rosten</td>
			<td>
				2024-01-11</td>
			<td>
				2024-01</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3084R0">P3084R0</a></td>
			<td>
				Slides for LEWG views::maybe 20240109</td>
			<td>
				Steve Downey</td>
			<td>
				2024-01-12</td>
			<td>
				2024-01</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3086R0">P3086R0</a></td>
			<td>
				Proxy: A Pointer-Semantics-Based Polymorphism Library</td>
			<td>
				Mingxin Wang</td>
			<td>
				2024-01-16</td>
			<td>
				2024-01</td>
			<td>
				&nbsp;</td>
			<td>
				LEWGI SG18: LEWG Incubator,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3087R0">P3087R0</a></td>
			<td>
				Make direct-initialization for enumeration types at least as permissive as direct-list-initializatio</td>
			<td>
				Jan Schultke</td>
			<td>
				2024-01-16</td>
			<td>
				2024-01</td>
			<td>
				&nbsp;</td>
			<td>
				LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
	</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Wed, 17 Jan 2024 01:04:47 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>2023&#45;12 Mailing Available</title>
      <link>https://C艹.com//blog/2023/12/2023-12-mailing-available</link>
      <guid>https://C艹.com//blog/2023/12/2023-12-mailing-available</guid>
      <description><![CDATA[<p>
	The 2023-12 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
		<tr>
			<th>
				WG21 Number</th>
			<th>
				Title</th>
			<th>
				Author</th>
			<th>
				Document Date</th>
			<th>
				Mailing Date</th>
			<th>
				Previous Version</th>
			<th>
				Subgroup</th>
			<!--            <th>Disposition</th> -->
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<a href="https://wg21.link/N4966">N4966</a></td>
			<td>
				St. Louis Meeting Invitation and Information</td>
			<td>
				Bill Seymour</td>
			<td>
				2023-10-19</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4967">N4967</a></td>
			<td>
				WG21 2023-10 Admin telecon minutes</td>
			<td>
				Nina Ranns</td>
			<td>
				2023-10-30</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4970">N4970</a></td>
			<td>
				WG21 2023-11 Kona Minutes of Meeting</td>
			<td>
				Nina Ranns</td>
			<td>
				2023-11-28</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4971">N4971</a></td>
			<td>
				Working Draft, Programming Languages -- C艹</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2023-12-17</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4972">N4972</a></td>
			<td>
				Editors&#39; Report, Programming Languages -- C艹</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2023-12-17</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0447R24">P0447R24</a></td>
			<td>
				Introduction of std::hive to the standard library</td>
			<td>
				Matt Bentley</td>
			<td>
				2023-10-25</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P0447R23">P0447R23</a></td>
			<td>
				SG14 Low Latency,LEWG Library Evolution,All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0447R25">P0447R25</a></td>
			<td>
				Introduction of std::hive to the standard library</td>
			<td>
				Matt Bentley</td>
			<td>
				2023-12-03</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P0447R24">P0447R24</a></td>
			<td>
				SG14 Low Latency,LEWG Library Evolution,All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0447R26">P0447R26</a></td>
			<td>
				Introduction of std::hive to the standard library</td>
			<td>
				Matt Bentley</td>
			<td>
				2023-12-17</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P0447R25">P0447R25</a></td>
			<td>
				SG14 Low Latency,LEWG Library Evolution,All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0609R2">P0609R2</a></td>
			<td>
				Attributes for Structured Bindings</td>
			<td>
				Aaron Ballman</td>
			<td>
				2023-11-27</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P0609R1">P0609R1</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0952R2">P0952R2</a></td>
			<td>
				A new specification for std::generate_canonical</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2023-12-18</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P0952R1">P0952R1</a></td>
			<td>
				LWG Library</td>
			<!--		<td>Adopted 2023-11</td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1028R6">P1028R6</a></td>
			<td>
				SG14 status_code and standard error object</td>
			<td>
				Niall Douglas</td>
			<td>
				2023-12-10</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P1028R5">P1028R5</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1061R6">P1061R6</a></td>
			<td>
				Structured Bindings can introduce a Pack</td>
			<td>
				Barry Revzin</td>
			<td>
				2023-12-10</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P1061R5">P1061R5</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1068R10">P1068R10</a></td>
			<td>
				Vector API for random number generation</td>
			<td>
				Ilya Burylov</td>
			<td>
				2023-12-09</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P1068R9">P1068R9</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1673R13">P1673R13</a></td>
			<td>
				A free function linear algebra interface based on the BLAS</td>
			<td>
				Mark Hoemmen</td>
			<td>
				2023-12-18</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P1673R12">P1673R12</a></td>
			<td>
				All of WG21</td>
			<!--		<td>Adopted 2023-11</td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1708R8">P1708R8</a></td>
			<td>
				Basic Statistics</td>
			<td>
				Richard Dosselmann</td>
			<td>
				2023-12-17</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P1708R7">P1708R7</a></td>
			<td>
				SG6 Numerics,SG14 Low Latency,LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1709R4">P1709R4</a></td>
			<td>
				Graph Library</td>
			<td>
				Phillip Ratzloff</td>
			<td>
				2023-12-18</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P1709R3">P1709R3</a></td>
			<td>
				SG19 Machine Learning</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1709R4">P1709R4</a></td>
			<td>
				Graph Library</td>
			<td>
				Phillip Ratzloff</td>
			<td>
				2023-12-18</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P1709R3">P1709R3</a></td>
			<td>
				SG19 Machine Learning</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1928R8">P1928R8</a></td>
			<td>
				std::simd - Merge data-parallel types from the Parallelism TS 2</td>
			<td>
				Matthias Kretz</td>
			<td>
				2023-11-09</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P1928R7">P1928R7</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1967R12">P1967R12</a></td>
			<td>
				#embed - a simple, scannable preprocessor-based resource acquisition method</td>
			<td>
				JeanHeyd Meneide</td>
			<td>
				2023-12-09</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P1967R11">P1967R11</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2022R3">P2022R3</a></td>
			<td>
				Rangified version of lexicographical_compare_three_way</td>
			<td>
				Ran Regev</td>
			<td>
				2023-12-17</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2022R2">P2022R2</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2264R6">P2264R6</a></td>
			<td>
				Make assert() macro user friendly for C and C艹</td>
			<td>
				Peter Sommerlad</td>
			<td>
				2023-11-10</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2264R5">P2264R5</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2264R7">P2264R7</a></td>
			<td>
				Make assert() macro user friendly for C and C艹</td>
			<td>
				Peter Sommerlad</td>
			<td>
				2023-12-18</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2264R6">P2264R6</a></td>
			<td>
				LWG Library</td>
			<!--		<td>Adopted 2023-11</td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2267R1">P2267R1</a></td>
			<td>
				Library Evolution Policies</td>
			<td>
				Inbal Levi</td>
			<td>
				2023-11-22</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2267R0">P2267R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2308R1">P2308R1</a></td>
			<td>
				Template parameter initialization</td>
			<td>
				S. Davis Herring</td>
			<td>
				2023-12-18</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2308R0">P2308R0</a></td>
			<td>
				CWG Core</td>
			<!--		<td>Adopted 2023-11</td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2414R2">P2414R2</a></td>
			<td>
				Pointer lifetime-end zap proposed solutions</td>
			<td>
				Paul E. McKenney</td>
			<td>
				2023-12-17</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2414R1">P2414R1</a></td>
			<td>
				SG1 Concurrency and Parallelism,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2447R6">P2447R6</a></td>
			<td>
				std::span over an initializer list</td>
			<td>
				Arthur O&#39;Dwyer</td>
			<td>
				2023-12-18</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2447R5">P2447R5</a></td>
			<td>
				LWG Library</td>
			<!--		<td>Adopted 2023-11</td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2481R2">P2481R2</a></td>
			<td>
				Forwarding reference to specific type/template</td>
			<td>
				Barry Revzin</td>
			<td>
				2023-12-16</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2481R1">P2481R1</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2542R7">P2542R7</a></td>
			<td>
				views::concat</td>
			<td>
				Hui Xie</td>
			<td>
				2023-12-02</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2542R6">P2542R6</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2573R1">P2573R1</a></td>
			<td>
				= delete("should have a reason");</td>
			<td>
				Yihe Li</td>
			<td>
				2023-11-10</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2573R0">P2573R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2642R5">P2642R5</a></td>
			<td>
				Padded mdspan layouts</td>
			<td>
				Christian Trott</td>
			<td>
				2023-12-05</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2642R4">P2642R4</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2662R3">P2662R3</a></td>
			<td>
				Pack Indexing</td>
			<td>
				Corentin Jabot</td>
			<td>
				2023-12-18</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2662R2">P2662R2</a></td>
			<td>
				CWG Core</td>
			<!--		<td>Adopted 2023-11</td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2663R5">P2663R5</a></td>
			<td>
				Proposal to support interleaved complex values in std::simd</td>
			<td>
				Daniel Towner</td>
			<td>
				2023-12-08</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2663R4">P2663R4</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2664R5">P2664R5</a></td>
			<td>
				Proposal to extend std::simd with permutation API</td>
			<td>
				Daniel Towner</td>
			<td>
				2023-10-25</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2664R4">P2664R4</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2717R4">P2717R4</a></td>
			<td>
				Tool Introspection</td>
			<td>
				Ren&eacute; Ferdinand Rivera Morell</td>
			<td>
				2023-11-08</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2717R3">P2717R3</a></td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2717R5">P2717R5</a></td>
			<td>
				Tool Introspection</td>
			<td>
				Ren&eacute; Ferdinand Rivera Morell</td>
			<td>
				2023-11-10</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2717R4">P2717R4</a></td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2747R1">P2747R1</a></td>
			<td>
				constexpr placement new</td>
			<td>
				Barry Revzin</td>
			<td>
				2023-12-10</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2747R0">P2747R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2758R1">P2758R1</a></td>
			<td>
				Emitting messages at compile time</td>
			<td>
				Barry Revzin</td>
			<td>
				2023-12-09</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2758R0">P2758R0</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2760R1">P2760R1</a></td>
			<td>
				A Plan for C艹26 Ranges</td>
			<td>
				Barry Revzin</td>
			<td>
				2023-12-14</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2760R0">P2760R0</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2761R0">P2761R0</a></td>
			<td>
				Slides: If structured binding (P0963R1 presentation)</td>
			<td>
				Zhihao Yuan</td>
			<td>
				2023-11-08</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2767R2">P2767R2</a></td>
			<td>
				flat_map/flat_set omnibus</td>
			<td>
				Arthur O&#39;Dwyer</td>
			<td>
				2023-12-09</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2767R1">P2767R1</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2795R4">P2795R4</a></td>
			<td>
				Erroneous behaviour for uninitialized reads</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2023-11-10</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2795R3">P2795R3</a></td>
			<td>
				SG12 Undefined and Unspecified Behavior,SG23 Safety and Security,EWG Evolution,CWG Core,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2806R2">P2806R2</a></td>
			<td>
				do expressions</td>
			<td>
				Barry Revzin</td>
			<td>
				2023-11-16</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2806R1">P2806R1</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2810R2">P2810R2</a></td>
			<td>
				is_debugger_present is_replaceable</td>
			<td>
				Ren&eacute; Ferdinand Rivera Morell</td>
			<td>
				2023-12-02</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2810R1">P2810R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2810R3">P2810R3</a></td>
			<td>
				is_debugger_present is_replaceable</td>
			<td>
				Ren&eacute; Ferdinand Rivera Morell</td>
			<td>
				2023-12-03</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2810R2">P2810R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2819R2">P2819R2</a></td>
			<td>
				Add tuple protocol to complex</td>
			<td>
				Michael Florian Hava</td>
			<td>
				2023-12-18</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2819R1">P2819R1</a></td>
			<td>
				LWG Library</td>
			<!--		<td>Adopted 2023-11</td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2821R5">P2821R5</a></td>
			<td>
				span.at()</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2023-12-18</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2821R4">P2821R4</a></td>
			<td>
				SG23 Safety and Security,LEWG Library Evolution</td>
			<!--		<td>Adopted 2023-11</td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2826R1">P2826R1</a></td>
			<td>
				Replacement functions</td>
			<td>
				Ga&scaron;per A&#382;man</td>
			<td>
				2023-11-05</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2826R0">P2826R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2827R1">P2827R1</a></td>
			<td>
				Floating-point overflow and underflow in from_chars (LWG 3081)</td>
			<td>
				Zhihao Yuan</td>
			<td>
				2023-11-20</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2827R0">P2827R0</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2830R1">P2830R1</a></td>
			<td>
				constexpr type comparison</td>
			<td>
				Ga&scaron;per A&#382;man</td>
			<td>
				2023-11-05</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2830R0">P2830R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2845R5">P2845R5</a></td>
			<td>
				Formatting of std::filesystem::path</td>
			<td>
				Victor Zverovich</td>
			<td>
				2023-11-24</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2845R4">P2845R4</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2863R3">P2863R3</a></td>
			<td>
				Review Annex D for C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-12-18</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2863R2">P2863R2</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2864R2">P2864R2</a></td>
			<td>
				Remove Deprecated Arithmetic Conversion on Enumerations From C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-12-18</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2864R1">P2864R1</a></td>
			<td>
				CWG Core</td>
			<!--		<td>Adopted 2023-11</td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2865R4">P2865R4</a></td>
			<td>
				Remove Deprecated Array Comparisons from C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-11-12</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2865R3">P2865R3</a></td>
			<td>
				SG22 Compatibility</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2868R3">P2868R3</a></td>
			<td>
				Remove Deprecated `std::allocator` Typedef From C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-12-18</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2868R2">P2868R2</a></td>
			<td>
				LWG Library</td>
			<!--		<td>Adopted 2023-11</td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2869R3">P2869R3</a></td>
			<td>
				Remove Deprecated `shared_ptr` Atomic Access APIs From C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-12-03</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2869R2">P2869R2</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2870R3">P2870R3</a></td>
			<td>
				Remove `basic_string::reserve()` From C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-12-18</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2870R2">P2870R2</a></td>
			<td>
				LWG Library</td>
			<!--		<td>Adopted 2023-11</td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2871R3">P2871R3</a></td>
			<td>
				Remove Deprecated Unicode Conversion Facets From C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-12-18</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2871R2">P2871R2</a></td>
			<td>
				LWG Library</td>
			<!--		<td>Adopted 2023-11</td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2878R6">P2878R6</a></td>
			<td>
				Reference checking</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2023-11-13</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2878R5">P2878R5</a></td>
			<td>
				SG23 Safety and Security</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2890R1">P2890R1</a></td>
			<td>
				Contracts on lambdas</td>
			<td>
				Timur Doumler</td>
			<td>
				2023-12-07</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2890R0">P2890R0</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2890R2">P2890R2</a></td>
			<td>
				Contracts on lambdas</td>
			<td>
				Timur Doumler</td>
			<td>
				2023-12-13</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2890R1">P2890R1</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2894R1">P2894R1</a></td>
			<td>
				Constant evaluation of Contracts</td>
			<td>
				Timur Doumler</td>
			<td>
				2023-12-07</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2894R0">P2894R0</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2900R2">P2900R2</a></td>
			<td>
				Contracts for C艹</td>
			<td>
				Joshua Berne</td>
			<td>
				2023-11-11</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2900R1">P2900R1</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2900R3">P2900R3</a></td>
			<td>
				Contracts for C艹</td>
			<td>
				Joshua Berne</td>
			<td>
				2023-12-17</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2900R2">P2900R2</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2909R3">P2909R3</a></td>
			<td>
				Fix formatting of code units as integers (Dude, where&#39;s my char?)</td>
			<td>
				Victor Zverovich</td>
			<td>
				2023-11-07</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2909R2">P2909R2</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2909R4">P2909R4</a></td>
			<td>
				Fix formatting of code units as integers (Dude, where&#39;s my char?)</td>
			<td>
				Victor Zverovich</td>
			<td>
				2023-12-18</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2909R3">P2909R3</a></td>
			<td>
				LWG Library</td>
			<!--		<td>Adopted 2023-11</td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2918R2">P2918R2</a></td>
			<td>
				Runtime format strings II</td>
			<td>
				Victor Zverovich</td>
			<td>
				2023-12-18</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2918R1">P2918R1</a></td>
			<td>
				LWG Library</td>
			<!--		<td>Adopted 2023-11</td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2932R2">P2932R2</a></td>
			<td>
				A Principled Approach to Open Design Questions for Contracts</td>
			<td>
				Joshua Berne</td>
			<td>
				2023-11-14</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2932R1">P2932R1</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2933R1">P2933R1</a></td>
			<td>
				std::simd overloads for &lt;bit&gt; header</td>
			<td>
				Daniel Towner</td>
			<td>
				2023-12-08</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2933R0">P2933R0</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2935R4">P2935R4</a></td>
			<td>
				An Attribute-Like Syntax for Contracts</td>
			<td>
				Joshua Berne</td>
			<td>
				2023-11-05</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2935R3">P2935R3</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2952R1">P2952R1</a></td>
			<td>
				auto&amp; operator=(X&amp;&amp;) = default</td>
			<td>
				Arthur O&#39;Dwyer</td>
			<td>
				2023-12-09</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2952R0">P2952R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2961R2">P2961R2</a></td>
			<td>
				A natural syntax for Contracts</td>
			<td>
				Timur Doumler</td>
			<td>
				2023-11-08</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2961R1">P2961R1</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2968R1">P2968R1</a></td>
			<td>
				Make std::ignore a first-class object</td>
			<td>
				Peter Sommerlad</td>
			<td>
				2023-12-12</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2968R0">P2968R0</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2968R2">P2968R2</a></td>
			<td>
				Make std::ignore a first-class object</td>
			<td>
				Peter Sommerlad</td>
			<td>
				2023-12-13</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2968R1">P2968R1</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2969R0">P2969R0</a></td>
			<td>
				Contract annotations are potentially-throwing</td>
			<td>
				Timur Doumler</td>
			<td>
				2023-12-04</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2977R0">P2977R0</a></td>
			<td>
				Module commands database format</td>
			<td>
				Ben Boeckel</td>
			<td>
				2023-11-14</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2980R1">P2980R1</a></td>
			<td>
				A motivation, scope, and plan for a quantities and units library</td>
			<td>
				Mateusz Pusz</td>
			<td>
				2023-11-28</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2980R0">P2980R0</a></td>
			<td>
				SG6 Numerics,SG23 Safety and Security,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2981R1">P2981R1</a></td>
			<td>
				Improving our safety with a physical quantities and units library</td>
			<td>
				Mateusz Pusz</td>
			<td>
				2023-11-08</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2981R0">P2981R0</a></td>
			<td>
				SG23 Safety and Security,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2982R1">P2982R1</a></td>
			<td>
				`std::quantity` as a numeric type</td>
			<td>
				Mateusz Pusz</td>
			<td>
				2023-11-08</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2982R0">P2982R0</a></td>
			<td>
				SG6 Numerics,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2984R1">P2984R1</a></td>
			<td>
				Reconsider Redeclaring static constexpr Data Members</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-11-12</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2984R0">P2984R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2996R1">P2996R1</a></td>
			<td>
				Reflection for C艹26</td>
			<td>
				Barry Revzin</td>
			<td>
				2023-12-17</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2996R0">P2996R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2999R1">P2999R1</a></td>
			<td>
				Sender Algorithm Customization</td>
			<td>
				Eric Niebler</td>
			<td>
				2023-11-09</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2999R0">P2999R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2999R2">P2999R2</a></td>
			<td>
				Sender Algorithm Customization</td>
			<td>
				Eric Niebler</td>
			<td>
				2023-12-12</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2999R1">P2999R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2999R3">P2999R3</a></td>
			<td>
				Sender Algorithm Customization</td>
			<td>
				Eric Niebler</td>
			<td>
				2023-12-12</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P2999R2">P2999R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3006R0">P3006R0</a></td>
			<td>
				Launder less</td>
			<td>
				Antony Polukhin</td>
			<td>
				2023-10-19</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG12 Undefined and Unspecified Behavior,EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3007R0">P3007R0</a></td>
			<td>
				Return object semantics in postconditions</td>
			<td>
				Timur Doumler</td>
			<td>
				2023-12-11</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3016R1">P3016R1</a></td>
			<td>
				Resolve inconsistencies in begin/end for valarray and braced initializer lists</td>
			<td>
				Arthur O&#39;Dwyer</td>
			<td>
				2023-12-09</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P3016R0">P3016R0</a></td>
			<td>
				LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3019R1">P3019R1</a></td>
			<td>
				Vocabulary Types for Composite Class Design</td>
			<td>
				Jonathan Coe</td>
			<td>
				2023-11-08</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P3019R0">P3019R0</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3019R2">P3019R2</a></td>
			<td>
				Vocabulary Types for Composite Class Design</td>
			<td>
				Jonathan Coe</td>
			<td>
				2023-11-10</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P3019R1">P3019R1</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3019R3">P3019R3</a></td>
			<td>
				Vocabulary Types for Composite Class Design</td>
			<td>
				Jonathan Coe</td>
			<td>
				2023-11-20</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P3019R2">P3019R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3022R1">P3022R1</a></td>
			<td>
				A Boring Thread Attributes Interface</td>
			<td>
				David Sankel</td>
			<td>
				2023-11-28</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P3022R0">P3022R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3023R1">P3023R1</a></td>
			<td>
				C艹 Should Be C艹</td>
			<td>
				David Sankel</td>
			<td>
				2023-11-27</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P3023R0">P3023R0</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3024R0">P3024R0</a></td>
			<td>
				Interface Directions for std::simd</td>
			<td>
				David Sankel</td>
			<td>
				2023-11-30</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3025R0">P3025R0</a></td>
			<td>
				SG14: Low Latency/Games/Embedded/Financial trading/Simulation virtual Minutes to 2023/09/12</td>
			<td>
				Michael Wong</td>
			<td>
				2023-10-15</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG14 Low Latency</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3026R0">P3026R0</a></td>
			<td>
				SG19: Machine Learning virtual Meeting Minutes to 2023/07/13</td>
			<td>
				Michael Wong</td>
			<td>
				2023-10-15</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG19 Machine Learning</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3027R0">P3027R0</a></td>
			<td>
				UFCS is a breaking change, of the absolutely worst kind</td>
			<td>
				Ville Voutilainen</td>
			<td>
				2023-10-26</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3028R0">P3028R0</a></td>
			<td>
				An Overview of Syntax Choices for Contracts</td>
			<td>
				Joshua Berne</td>
			<td>
				2023-11-05</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3029R0">P3029R0</a></td>
			<td>
				Better mdspan&#39;s CTAD</td>
			<td>
				Hewill Kang</td>
			<td>
				2023-10-23</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3031R0">P3031R0</a></td>
			<td>
				Resolve CWG2561: conversion function for lambda with explicit object parameter</td>
			<td>
				Arthur O&#39;Dwyer</td>
			<td>
				2023-11-12</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3033R0">P3033R0</a></td>
			<td>
				Should we import function bodies to get the better optimizations?</td>
			<td>
				Chuanqi Xu</td>
			<td>
				2023-10-31</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3034R0">P3034R0</a></td>
			<td>
				Module Declarations Shouldn&#39;t be Macros</td>
			<td>
				Michael Spencer</td>
			<td>
				2023-11-10</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG15 Tooling,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3037R0">P3037R0</a></td>
			<td>
				constexpr std::shared_ptr</td>
			<td>
				Paul Keir</td>
			<td>
				2023-11-06</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG7 Reflection,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3038R0">P3038R0</a></td>
			<td>
				Concrete suggestions for initial Profiles</td>
			<td>
				Bjarne Stroustrup</td>
			<td>
				2023-12-16</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG23 Safety and Security</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3039R0">P3039R0</a></td>
			<td>
				Automatically Generate `operator-&gt;`</td>
			<td>
				David Stone</td>
			<td>
				2023-11-07</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3040R0">P3040R0</a></td>
			<td>
				C艹 Standard Library Ready Issues to be moved in Kona, Nov. 2023</td>
			<td>
				Jonathan Wakely</td>
			<td>
				2023-12-18</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td>Adopted 2023-11</td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3041R0">P3041R0</a></td>
			<td>
				Transitioning from "#include" World to Modules</td>
			<td>
				Gabriel Dos Reis</td>
			<td>
				2023-11-15</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3042R0">P3042R0</a></td>
			<td>
				Vocabulary Types for Composite Class Design</td>
			<td>
				Jonathan Coe</td>
			<td>
				2023-11-08</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3043R0">P3043R0</a></td>
			<td>
				Slides: Using variable template template without meta programming</td>
			<td>
				Zhihao Yuan</td>
			<td>
				2023-12-11</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3046R0">P3046R0</a></td>
			<td>
				Core Language Working Group "ready" Issues for the November, 2023 meeting</td>
			<td>
				Jens Maurer</td>
			<td>
				2023-12-18</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				CWG Core</td>
			<!--		<td>Adopted 2023-11</td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3050R0">P3050R0</a></td>
			<td>
				Optimize linalg::conjugated for noncomplex value types</td>
			<td>
				Mark Hoemmen</td>
			<td>
				2023-11-15</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3051R0">P3051R0</a></td>
			<td>
				Structured Response Files</td>
			<td>
				Ren&eacute; Ferdinand Rivera Morell</td>
			<td>
				2023-12-11</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3052R0">P3052R0</a></td>
			<td>
				view_interface::at()</td>
			<td>
				Hewill Kang</td>
			<td>
				2023-11-16</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG9 Ranges,LEWGI SG18: LEWG Incubator,SG23 Safety and Security</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3053R0">P3053R0</a></td>
			<td>
				2023-12 Library Evolution Polls</td>
			<td>
				Inbal Levi</td>
			<td>
				2023-12-15</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3055R0">P3055R0</a></td>
			<td>
				Relax wording to permit relocation optimizations in the STL</td>
			<td>
				Arthur O&#39;Dwyer</td>
			<td>
				2023-12-17</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3056R0">P3056R0</a></td>
			<td>
				what ostream exception</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2023-11-20</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3057R0">P3057R0</a></td>
			<td>
				Two finer-grained compilation model for named modules</td>
			<td>
				Chuanqi Xu</td>
			<td>
				2023-11-21</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3059R0">P3059R0</a></td>
			<td>
				Making user-defined constructors of view iterators/sentinels private</td>
			<td>
				Hewill Kang</td>
			<td>
				2023-11-30</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3060R0">P3060R0</a></td>
			<td>
				Add std::ranges::upto(n)</td>
			<td>
				Weile Wei</td>
			<td>
				2023-11-22</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3061R0">P3061R0</a></td>
			<td>
				WG21 2023-11 Kona Record of Discussion</td>
			<td>
				Nina Ranns</td>
			<td>
				2023-11-28</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3062R0">P3062R0</a></td>
			<td>
				C艹 Should Be C艹 - Presentation</td>
			<td>
				David Sankel</td>
			<td>
				2023-11-27</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3066R0">P3066R0</a></td>
			<td>
				Allow repeating contract annotations on non-first declarations</td>
			<td>
				Timur Doumler</td>
			<td>
				2023-12-04</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3070R0">P3070R0</a></td>
			<td>
				Formatting enums</td>
			<td>
				Victor Zverovich</td>
			<td>
				2023-12-14</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG16 Unicode</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3071R0">P3071R0</a></td>
			<td>
				Protection against modifications in contracts</td>
			<td>
				Jens Maurer</td>
			<td>
				2023-12-10</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3071R1">P3071R1</a></td>
			<td>
				Protection against modifications in contracts</td>
			<td>
				Jens Maurer</td>
			<td>
				2023-12-17</td>
			<td>
				2023-12</td>
			<td>
				<a href="https://wg21.link/P3071R0">P3071R0</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3072R0">P3072R0</a></td>
			<td>
				Hassle-free thread attributes</td>
			<td>
				Zhihao Yuan</td>
			<td>
				2023-12-17</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3074R0">P3074R0</a></td>
			<td>
				constexpr union lifetime</td>
			<td>
				Barry Revzin</td>
			<td>
				2023-12-15</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3075R0">P3075R0</a></td>
			<td>
				Adding an Undefined Behavior and IFNDR Annex</td>
			<td>
				Shafik Yaghmour</td>
			<td>
				2023-12-15</td>
			<td>
				2023-12</td>
			<td>
				&nbsp;</td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
	</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Sun, 17 Dec 2023 01:05:56 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>Trip report: Autumn ISO C艹 standards meeting (Kona, HI, USA) &#45;&#45; Herb Sutter</title>
      <link>https://C艹.com//blog/2023/11/trip-report-autumn-iso-cpp-standards-meeting-kona-hi-usa-herb-sutter</link>
      <guid>https://C艹.com//blog/2023/11/trip-report-autumn-iso-cpp-standards-meeting-kona-hi-usa-herb-sutter</guid>
      <description><![CDATA[<p>
	<img alt="reflection.png" src="https://C艹.com/files/img/reflection.png" style="width: 400px; margin: 10px; float: right;" />A report out from this week&#39;s ISO C艹 standards committee meeting, which just ended:</p>
<blockquote>
	<h3>
		<a href="https://herbsutter.com/2023/11/11/trip-report-autumn-iso-c-standards-meeting-kona-hi-usa/" rel="bookmark">Trip report: Autumn ISO C艹 standards meeting (Kona, HI,&nbsp;USA)</a></h3>
	<p>
		by Herb Sutter</p>
</blockquote>
<p>
	From the article:</p>
<blockquote>
	<p>
		<span style="color: rgb(56, 56, 56); font-family: "Noticia Text", serif; font-size: 19px;">This time, the committee adopted the next set of features for C艹26. It also made significant progress on other features that are now expected to be complete in time for C艹26 &mdash; including&nbsp;</span><span style="font-weight: 700; color: rgb(56, 56, 56); font-family: "Noticia Text", serif; font-size: 19px;">contracts</span><span style="color: rgb(56, 56, 56); font-family: "Noticia Text", serif; font-size: 19px;">&nbsp;and&nbsp;</span><span style="font-weight: 700; color: rgb(56, 56, 56); font-family: "Noticia Text", serif; font-size: 19px;">reflection</span><span style="color: rgb(56, 56, 56); font-family: "Noticia Text", serif; font-size: 19px;">.</span></p>
</blockquote>]]></description>
      <dc:subject><![CDATA[News, Articles & Books, Standardization,]]></dc:subject>
      <pubDate>Sun, 12 Nov 2023 00:40:13 +0000</pubDate>
      <dc:creator>Blog Staff</dc:creator>
    </item>

    <item>
      <title>WG21 Varna Trip Report &#45;&#45; David Sankel</title>
      <link>https://C艹.com//blog/2023/10/wg21-varna-trip-report-david-sankel</link>
      <guid>https://C艹.com//blog/2023/10/wg21-varna-trip-report-david-sankel</guid>
      <description><![CDATA[<p>
	David Sankel discusses about the developments at the June 2023 ISO C艹 standardization meeting in Varna.</p>
<blockquote>
	<p>
		<a href="http://blog.developer.adobe.com/trip-report-summer-iso-c-standards-meeting-ed141f80b664">WG21 Varna Trip Report</a></p>
	<p>
		by David Sankel</p>
</blockquote>
<p>
	About the report:</p>
<blockquote>
	<p>
		In detail he speakes about std::simd, std::inplace_vector, and other developments.</p>
</blockquote>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Sat, 28 Oct 2023 18:20:27 +0000</pubDate>
      <dc:creator>david.sankel</dc:creator>
    </item>

    <item>
      <title>2023&#45;10 Mailing Available</title>
      <link>https://C艹.com//blog/2023/10/2023-10-mailing-available</link>
      <guid>https://C艹.com//blog/2023/10/2023-10-mailing-available</guid>
      <description><![CDATA[<p>
	The 2023-10 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
		<tr>
			<th>
				WG21 Number</th>
			<th>
				Title</th>
			<th>
				Author</th>
			<th>
				Document Date</th>
			<th>
				Mailing Date</th>
			<th>
				Previous Version</th>
			<th>
				Subgroup</th>
			<!--            <th>Disposition</th> -->
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<a href="https://wg21.link/N4961">N4961</a></td>
			<td>
				2024-03 Tokyo meeting information</td>
			<td>
				JF Bastien</td>
			<td>
				2023-10-02</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4962">N4962</a></td>
			<td>
				WG21 agenda: 6-11 November 2023, Kona, HI</td>
			<td>
				John Spicer</td>
			<td>
				2023-10-07</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4963">N4963</a></td>
			<td>
				2023 WG21 admin telecon meetings, rev. 2</td>
			<td>
				Herb Sutter</td>
			<td>
				2023-09-30</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4964">N4964</a></td>
			<td>
				Working Draft, Programming Languages -- C艹</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2023-10-14</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4965">N4965</a></td>
			<td>
				Editors&#39; Report, Programming Languages -- C艹</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2023-10-14</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0447R23">P0447R23</a></td>
			<td>
				Introduction of std::hive to the standard library</td>
			<td>
				Matt Bentley</td>
			<td>
				2023-10-14</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P0447R22">P0447R22</a></td>
			<td>
				SG14 Low Latency,LEWG Library Evolution,All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0876R14">P0876R14</a></td>
			<td>
				fiber_context - fibers without scheduler</td>
			<td>
				Oliver Kowalke</td>
			<td>
				2023-10-13</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P0876R13">P0876R13</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0952R1">P0952R1</a></td>
			<td>
				A new specification for std::generate_canonical</td>
			<td>
				Thomas Koeppe</td>
			<td>
				2023-09-20</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P0952R0">P0952R0</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1144R9">P1144R9</a></td>
			<td>
				std::is_trivially_relocatable</td>
			<td>
				Arthur O&#39;Dwyer</td>
			<td>
				2023-10-12</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P1144R8">P1144R8</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1729R3">P1729R3</a></td>
			<td>
				Text Parsing</td>
			<td>
				Elias Kosunen</td>
			<td>
				2023-10-12</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P1729R2">P1729R2</a></td>
			<td>
				SG9 Ranges,SG16 Unicode,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1928R7">P1928R7</a></td>
			<td>
				std::simd - Merge data-parallel types from the Parallelism TS 2</td>
			<td>
				Matthias Kretz</td>
			<td>
				2023-10-15</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P1928R6">P1928R6</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2019R4">P2019R4</a></td>
			<td>
				Thread attributes</td>
			<td>
				Corentin Jabot</td>
			<td>
				2023-10-15</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P2019R3">P2019R3</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2075R3">P2075R3</a></td>
			<td>
				Philox as an extension of the C艹 RNG engines</td>
			<td>
				Ilya Burylov</td>
			<td>
				2023-10-13</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P2075R2">P2075R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2267R0">P2267R0</a></td>
			<td>
				Library Evolution Policies</td>
			<td>
				Inbal Levi</td>
			<td>
				2023-10-15</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2447R5">P2447R5</a></td>
			<td>
				std::span over an initializer list</td>
			<td>
				Arthur O&#39;Dwyer</td>
			<td>
				2023-10-11</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P2447R4">P2447R4</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2500R2">P2500R2</a></td>
			<td>
				C艹 parallel algorithms and P2300</td>
			<td>
				Ruslan Arutyunyan</td>
			<td>
				2023-10-15</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P2500R1">P2500R1</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2542R6">P2542R6</a></td>
			<td>
				views::concat</td>
			<td>
				Hui Xie</td>
			<td>
				2023-10-01</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P2542R5">P2542R5</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2642R4">P2642R4</a></td>
			<td>
				Padded mdspan layouts</td>
			<td>
				Christian Trott</td>
			<td>
				2023-10-15</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P2642R3">P2642R3</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2663R4">P2663R4</a></td>
			<td>
				Proposal to support interleaved complex values in std::simd</td>
			<td>
				Daniel Towner</td>
			<td>
				2023-10-13</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P2663R3">P2663R3</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2664R4">P2664R4</a></td>
			<td>
				Proposal to extend std::simd with permutation API</td>
			<td>
				Daniel Towner</td>
			<td>
				2023-10-13</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P2664R3">P2664R3</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2717R3">P2717R3</a></td>
			<td>
				Tool Introspection</td>
			<td>
				Ren&eacute; Ferdinand Rivera Morell</td>
			<td>
				2023-10-14</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P2717R2">P2717R2</a></td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2762R2">P2762R2</a></td>
			<td>
				Sender/Receiver Interface For Networking</td>
			<td>
				Dietmar Kuhl</td>
			<td>
				2023-10-12</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P2762R1">P2762R1</a></td>
			<td>
				SG4 Networking,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2774R1">P2774R1</a></td>
			<td>
				Concurrent object pool (was: Scoped thread-local storage)</td>
			<td>
				Michael Florian Hava</td>
			<td>
				2023-09-30</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P2774R0">P2774R0</a></td>
			<td>
				SG1 Concurrency and Parallelism</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2786R3">P2786R3</a></td>
			<td>
				Trivial Relocatability For C艹26</td>
			<td>
				Mungo Gill</td>
			<td>
				2023-10-14</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P2786R2">P2786R2</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2800R0">P2800R0</a></td>
			<td>
				Dependency flag soup needs some fiber</td>
			<td>
				Ben Boeckel</td>
			<td>
				2023-09-20</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2809R2">P2809R2</a></td>
			<td>
				Trivial infinite loops are not Undefined Behavior</td>
			<td>
				JF Bastien</td>
			<td>
				2023-10-14</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P2809R1">P2809R1</a></td>
			<td>
				SG1 Concurrency and Parallelism,SG22 Compatability,EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2841R1">P2841R1</a></td>
			<td>
				Concept Template Parameters</td>
			<td>
				Corentin Jabot</td>
			<td>
				2023-10-14</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P2841R0">P2841R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2845R3">P2845R3</a></td>
			<td>
				Formatting of std::filesystem::path</td>
			<td>
				Victor Zverovich</td>
			<td>
				2023-10-01</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P2845R2">P2845R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2845R4">P2845R4</a></td>
			<td>
				Formatting of std::filesystem::path</td>
			<td>
				Victor Zverovich</td>
			<td>
				2023-10-07</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P2845R3">P2845R3</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2862R1">P2862R1</a></td>
			<td>
				text_encoding::name() should never return null values</td>
			<td>
				Daniel Kr&uuml;gler</td>
			<td>
				2023-09-24</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P2862R0">P2862R0</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2863R2">P2863R2</a></td>
			<td>
				Review Annex D for C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-10-15</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P2863R1">P2863R1</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2885R3">P2885R3</a></td>
			<td>
				Requirements for a Contracts syntax</td>
			<td>
				Timur Doumler</td>
			<td>
				2023-10-05</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P2885R2">P2885R2</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2893R1">P2893R1</a></td>
			<td>
				Variadic Friends</td>
			<td>
				Jody Hagins</td>
			<td>
				2023-10-09</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P2893R0">P2893R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2897R1">P2897R1</a></td>
			<td>
				aligned_accessor: An mdspan accessor expressing pointer overalignment</td>
			<td>
				Mark Hoemmen</td>
			<td>
				2023-10-13</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P2897R0">P2897R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2900R0">P2900R0</a></td>
			<td>
				Contracts for C艹</td>
			<td>
				Joshua Berne</td>
			<td>
				2023-10-12</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2900R1">P2900R1</a></td>
			<td>
				Contracts for C艹</td>
			<td>
				Joshua Berne</td>
			<td>
				2023-10-09</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P2900R0">P2900R0</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2911R1">P2911R1</a></td>
			<td>
				Python Bindings with Value-Based Reflection</td>
			<td>
				Adam Lach</td>
			<td>
				2023-10-13</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P2911R0">P2911R0</a></td>
			<td>
				SG7 Reflection</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2927R0">P2927R0</a></td>
			<td>
				Observing exceptions stored in exception_ptr</td>
			<td>
				Gor Nishanov</td>
			<td>
				2023-10-14</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				LEWGI SG18: LEWG Incubator,EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2932R1">P2932R1</a></td>
			<td>
				A Principled Approach to Open Design Questions for Contracts</td>
			<td>
				Joshua Berne</td>
			<td>
				2023-10-04</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P2932R0">P2932R0</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2935R3">P2935R3</a></td>
			<td>
				An Attribute-Like Syntax for Contracts</td>
			<td>
				Joshua Berne</td>
			<td>
				2023-10-05</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P2935R2">P2935R2</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2959R0">P2959R0</a></td>
			<td>
				Container Relocation</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-10-15</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2961R1">P2961R1</a></td>
			<td>
				A natural syntax for Contracts</td>
			<td>
				Timur Doumler</td>
			<td>
				2023-10-12</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P2961R0">P2961R0</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2962R0">P2962R0</a></td>
			<td>
				Communicating the Baseline Compile Command for C艹 Modules support</td>
			<td>
				Daniel Ruoso</td>
			<td>
				2023-10-13</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2967R0">P2967R0</a></td>
			<td>
				Relocation Is A Library Interface</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-10-15</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2971R1">P2971R1</a></td>
			<td>
				Implication for C艹</td>
			<td>
				Walter E Brown</td>
			<td>
				2023-10-14</td>
			<td>
				2023-10</td>
			<td>
				<a href="https://wg21.link/P2971R0">P2971R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2978R0">P2978R0</a></td>
			<td>
				A New Approach For Compiling C艹</td>
			<td>
				Hassan Sajjad</td>
			<td>
				2023-09-26</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2979R0">P2979R0</a></td>
			<td>
				The Need for Design Policies in WG21</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-10-13</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2980R0">P2980R0</a></td>
			<td>
				A motivation, scope, and plan for a physical quantities and units library</td>
			<td>
				Mateusz Pusz</td>
			<td>
				2023-10-15</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				SG6 Numerics,LEWGI SG18: LEWG Incubator,SG23 Safety and Security,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2981R0">P2981R0</a></td>
			<td>
				Improving our safety with a physical quantities and units library</td>
			<td>
				Mateusz Pusz</td>
			<td>
				2023-10-15</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				SG23 Safety and Security,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2982R0">P2982R0</a></td>
			<td>
				`std::quantity` as a numeric type</td>
			<td>
				Mateusz Pusz</td>
			<td>
				2023-10-15</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				SG6 Numerics,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2984R0">P2984R0</a></td>
			<td>
				Reconsider Redeclaring static constexpr Data Members</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-10-15</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2985R0">P2985R0</a></td>
			<td>
				A type trait for detecting virtual base classes</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2023-10-09</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2986R0">P2986R0</a></td>
			<td>
				Generic Function Pointer</td>
			<td>
				Lauri Vasama</td>
			<td>
				2023-10-14</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2988R0">P2988R0</a></td>
			<td>
				std::optional&lt;T&amp;&gt;</td>
			<td>
				Steve Downey</td>
			<td>
				2023-10-15</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2989R0">P2989R0</a></td>
			<td>
				A Simple Approach to Universal Template Parameters</td>
			<td>
				Corentin Jabot</td>
			<td>
				2023-10-14</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2990R0">P2990R0</a></td>
			<td>
				C艹 Modules Roadmap</td>
			<td>
				Daniel Ruoso</td>
			<td>
				2023-10-14</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2991R0">P2991R0</a></td>
			<td>
				Stop Forcing std::move to Pessimize</td>
			<td>
				Brian Bi</td>
			<td>
				2023-10-11</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				SG20 Education</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2992R0">P2992R0</a></td>
			<td>
				Attribute [[discard]] and attributes on expressions</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2023-10-10</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator,SG22 Compatability,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2994R0">P2994R0</a></td>
			<td>
				On the Naming of Packs</td>
			<td>
				Barry Revzin</td>
			<td>
				2023-10-13</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2995R0">P2995R0</a></td>
			<td>
				SG16: Unicode meeting summaries 2023-05-24 through 2023-09-27</td>
			<td>
				Tom Honermann</td>
			<td>
				2023-10-08</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				SG16 Unicode</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2996R0">P2996R0</a></td>
			<td>
				Reflection for C艹26</td>
			<td>
				Barry Revzin</td>
			<td>
				2023-10-15</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2997R0">P2997R0</a></td>
			<td>
				Removing the common reference requirement from the indirectly invocable concepts</td>
			<td>
				Barry Revzin</td>
			<td>
				2023-10-13</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2999R0">P2999R0</a></td>
			<td>
				Sender Algorithm Customization</td>
			<td>
				Eric Niebler</td>
			<td>
				2023-10-14</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3001R0">P3001R0</a></td>
			<td>
				std::hive and containers like it are not a good fit for the standard library</td>
			<td>
				Jonathan M&uuml;ller</td>
			<td>
				2023-10-15</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3002R0">P3002R0</a></td>
			<td>
				Guidelines for allocators in new library classes</td>
			<td>
				Pablo Halpern</td>
			<td>
				2023-10-15</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3003R0">P3003R0</a></td>
			<td>
				The design of a library of number concepts</td>
			<td>
				Johel Ernesto Guerrero Pe&ntilde;a</td>
			<td>
				2023-10-14</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				SG6 Numerics</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3008R0">P3008R0</a></td>
			<td>
				Atomic floating-point min/max</td>
			<td>
				Gonzalo Brito Gadeschi</td>
			<td>
				2023-10-15</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3009R0">P3009R0</a></td>
			<td>
				Injected class name in the base specifier list</td>
			<td>
				Joe Jevnik</td>
			<td>
				2023-10-12</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3010R0">P3010R0</a></td>
			<td>
				Using Reflection to Replace a Metalanguage for Generating JS Bindings</td>
			<td>
				Dan Katz</td>
			<td>
				2023-10-13</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				SG7 Reflection</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3011R0">P3011R0</a></td>
			<td>
				Supporting document for Hive proposal #1: outreach for evidence of container-style use in industry</td>
			<td>
				Matt Bentley</td>
			<td>
				2023-10-15</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				SG14 Low Latency,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3012R0">P3012R0</a></td>
			<td>
				Supporting document for Hive proposal #2: use of std::list in open source codebases</td>
			<td>
				Matt Bentley</td>
			<td>
				2023-10-14</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				SG14 Low Latency,SG20 Education,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3014R0">P3014R0</a></td>
			<td>
				Customizing std::expected&#39;s exception</td>
			<td>
				Jonathan M&uuml;ller</td>
			<td>
				2023-10-14</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3015R0">P3015R0</a></td>
			<td>
				Rebuttal to Additional format specifiers for time_point</td>
			<td>
				Howard Hinnant</td>
			<td>
				2023-10-13</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3016R0">P3016R0</a></td>
			<td>
				Resolve inconsistencies in begin/end for valarray and braced initializer lists</td>
			<td>
				Arthur O&#39;Dwyer</td>
			<td>
				2023-10-15</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator,LEWGI SG18: LEWG Incubator,EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3018R0">P3018R0</a></td>
			<td>
				Low-Level Integer Arithmetic</td>
			<td>
				Andreas Weis</td>
			<td>
				2023-10-15</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				SG6 Numerics,LEWGI SG18: LEWG Incubator,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3019R0">P3019R0</a></td>
			<td>
				Vocabulary Types for Composite Class Design</td>
			<td>
				Jonathan Coe</td>
			<td>
				2023-10-14</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3020R0">P3020R0</a></td>
			<td>
				2023-09 Library Evolution Poll Outcomes</td>
			<td>
				Inbal Levi</td>
			<td>
				2023-10-15</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3021R0">P3021R0</a></td>
			<td>
				Unified function call syntax (UFCS)</td>
			<td>
				Herb Sutter</td>
			<td>
				2023-10-14</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3022R0">P3022R0</a></td>
			<td>
				A Boring Thread Attributes Interface</td>
			<td>
				David Sankel</td>
			<td>
				2023-10-14</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P3023R0">P3023R0</a></td>
			<td>
				C艹 Should Be C艹</td>
			<td>
				David Sankel</td>
			<td>
				2023-10-14</td>
			<td>
				2023-10</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
	</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Fri, 20 Oct 2023 15:56:24 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>2023&#45;09 Mailing Available</title>
      <link>https://C艹.com//blog/2023/10/2023-09-mailing-available</link>
      <guid>https://C艹.com//blog/2023/10/2023-09-mailing-available</guid>
      <description><![CDATA[<p>
	The 2023-09 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
		<tr>
			<th>
				WG21 Number</th>
			<th>
				Title</th>
			<th>
				Author</th>
			<th>
				Document Date</th>
			<th>
				Mailing Date</th>
			<th>
				Previous Version</th>
			<th>
				Subgroup</th>
			<!--            <th>Disposition</th> -->
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<a href="https://wg21.link/P0843R9">P0843R9</a></td>
			<td>
				inplace_vector</td>
			<td>
				Gonzalo Brito Gadeschi</td>
			<td>
				2023-09-14</td>
			<td>
				2023-09</td>
			<td>
				<a href="https://wg21.link/P0843R8">P0843R8</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1068R9">P1068R9</a></td>
			<td>
				Vector API for random number generation</td>
			<td>
				Ilya Burylov</td>
			<td>
				2023-09-14</td>
			<td>
				2023-09</td>
			<td>
				<a href="https://wg21.link/P1068R8">P1068R8</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1255R10">P1255R10</a></td>
			<td>
				A view of 0 or 1 elements: views::maybe</td>
			<td>
				Steve Downey</td>
			<td>
				2023-09-14</td>
			<td>
				2023-09</td>
			<td>
				<a href="https://wg21.link/P1255R9">P1255R9</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2264R5">P2264R5</a></td>
			<td>
				Make assert() macro user friendly for C and C艹</td>
			<td>
				Peter Sommerlad</td>
			<td>
				2023-09-13</td>
			<td>
				2023-09</td>
			<td>
				<a href="https://wg21.link/P2264R4">P2264R4</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2542R4">P2542R4</a></td>
			<td>
				views::concat</td>
			<td>
				Hui Xie</td>
			<td>
				2023-09-11</td>
			<td>
				2023-09</td>
			<td>
				<a href="https://wg21.link/P2542R3">P2542R3</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2542R5">P2542R5</a></td>
			<td>
				views::concat</td>
			<td>
				Hui Xie</td>
			<td>
				2023-09-12</td>
			<td>
				2023-09</td>
			<td>
				<a href="https://wg21.link/P2542R4">P2542R4</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2686R2">P2686R2</a></td>
			<td>
				constexpr structured bindings and references to constexpr variables</td>
			<td>
				Corentin Jabot</td>
			<td>
				2023-09-14</td>
			<td>
				2023-09</td>
			<td>
				<a href="https://wg21.link/P2686R1">P2686R1</a></td>
			<td>
				EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2748R2">P2748R2</a></td>
			<td>
				Disallow Binding a Returned Glvalue to a Temporary</td>
			<td>
				Brian Bi</td>
			<td>
				2023-09-14</td>
			<td>
				2023-09</td>
			<td>
				<a href="https://wg21.link/P2748R1">P2748R1</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2755R0">P2755R0</a></td>
			<td>
				A Bold Plan for a Complete Contracts Facility</td>
			<td>
				Joshua Berne, Jake Fevold, John Lakos</td>
			<td>
				2023-09-13</td>
			<td>
				2023-09</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2760R0">P2760R0</a></td>
			<td>
				A Plan for C艹26 Ranges</td>
			<td>
				Barry Revzin</td>
			<td>
				2023-09-17</td>
			<td>
				2023-09</td>
			<td>
				&nbsp;</td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2762R1">P2762R1</a></td>
			<td>
				Sender/Receiver Interface For Networking</td>
			<td>
				Dietmar Kuhl</td>
			<td>
				2023-09-15</td>
			<td>
				2023-09</td>
			<td>
				<a href="https://wg21.link/P2762R0">P2762R0</a></td>
			<td>
				SG4 Networking,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2833R2">P2833R2</a></td>
			<td>
				Freestanding Library: inout expected span</td>
			<td>
				Ben Craig</td>
			<td>
				2023-09-13</td>
			<td>
				2023-09</td>
			<td>
				<a href="https://wg21.link/P2833R1">P2833R1</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2846R1">P2846R1</a></td>
			<td>
				size_hint: Eagerly reserving memory for not-quite-sized lazy ranges</td>
			<td>
				Corentin Jabot</td>
			<td>
				2023-09-15</td>
			<td>
				2023-09</td>
			<td>
				<a href="https://wg21.link/P2846R0">P2846R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2865R3">P2865R3</a></td>
			<td>
				Remove Deprecated Array Comparisons from C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-09-14</td>
			<td>
				2023-09</td>
			<td>
				<a href="https://wg21.link/P2865R2">P2865R2</a></td>
			<td>
				SG22 Compatability,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2866R1">P2866R1</a></td>
			<td>
				Remove Deprecated Volatile Features From C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-09-15</td>
			<td>
				2023-09</td>
			<td>
				<a href="https://wg21.link/P2866R0">P2866R0</a></td>
			<td>
				SG1 Concurrency and Parallelism,SG22 Compatability,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2867R1">P2867R1</a></td>
			<td>
				Remove Deprecated strstreams From C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-09-15</td>
			<td>
				2023-09</td>
			<td>
				<a href="https://wg21.link/P2867R0">P2867R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2868R2">P2868R2</a></td>
			<td>
				Remove Deprecated `std::allocator` Typedef From C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-09-14</td>
			<td>
				2023-09</td>
			<td>
				<a href="https://wg21.link/P2868R1">P2868R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2869R2">P2869R2</a></td>
			<td>
				Remove Deprecated `shared_ptr` Atomic Access APIs From C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-09-15</td>
			<td>
				2023-09</td>
			<td>
				<a href="https://wg21.link/P2869R1">P2869R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2870R2">P2870R2</a></td>
			<td>
				Remove `basic_string::reserve()` From C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-09-14</td>
			<td>
				2023-09</td>
			<td>
				<a href="https://wg21.link/P2870R1">P2870R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2871R2">P2871R2</a></td>
			<td>
				Remove Deprecated Unicode Conversion Facets From C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-09-15</td>
			<td>
				2023-09</td>
			<td>
				<a href="https://wg21.link/P2871R1">P2871R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2872R2">P2872R2</a></td>
			<td>
				Remove `wstring_convert` From C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-09-14</td>
			<td>
				2023-09</td>
			<td>
				<a href="https://wg21.link/P2872R1">P2872R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2875R2">P2875R2</a></td>
			<td>
				Undeprecate `polymorphic_allocator::destroy` For C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-09-15</td>
			<td>
				2023-09</td>
			<td>
				<a href="https://wg21.link/P2875R1">P2875R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2885R2">P2885R2</a></td>
			<td>
				Requirements for a Contracts syntax</td>
			<td>
				Timur Doumler</td>
			<td>
				2023-08-29</td>
			<td>
				2023-09</td>
			<td>
				<a href="https://wg21.link/P2885R1">P2885R1</a></td>
			<td>
				SG21 Contracts,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2909R1">P2909R1</a></td>
			<td>
				Fix formatting of code units as integers (Dude, where&#39;s my char?)</td>
			<td>
				Victor Zverovich</td>
			<td>
				2023-09-05</td>
			<td>
				2023-09</td>
			<td>
				<a href="https://wg21.link/P2909R0">P2909R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2909R2">P2909R2</a></td>
			<td>
				Fix formatting of code units as integers (Dude, where&#39;s my char?)</td>
			<td>
				Victor Zverovich</td>
			<td>
				2023-09-16</td>
			<td>
				2023-09</td>
			<td>
				<a href="https://wg21.link/P2909R1">P2909R1</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2932R0">P2932R0</a></td>
			<td>
				A Principled Approach to Open Design Questions for Contracts</td>
			<td>
				Joshua Berne</td>
			<td>
				2023-09-13</td>
			<td>
				2023-09</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2935R1">P2935R1</a></td>
			<td>
				An Attribute-Like Syntax for Contracts</td>
			<td>
				Joshua Berne</td>
			<td>
				2023-09-15</td>
			<td>
				2023-09</td>
			<td>
				<a href="https://wg21.link/P2935R0">P2935R0</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2935R2">P2935R2</a></td>
			<td>
				An Attribute-Like Syntax for Contracts</td>
			<td>
				Joshua Berne</td>
			<td>
				2023-09-15</td>
			<td>
				2023-09</td>
			<td>
				<a href="https://wg21.link/P2935R1">P2935R1</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2944R2">P2944R2</a></td>
			<td>
				Comparisons for reference_wrapper</td>
			<td>
				Barry Revzin</td>
			<td>
				2023-09-17</td>
			<td>
				2023-09</td>
			<td>
				<a href="https://wg21.link/P2944R1">P2944R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2951R3">P2951R3</a></td>
			<td>
				Shadowing is good for safety</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2023-09-02</td>
			<td>
				2023-09</td>
			<td>
				<a href="https://wg21.link/P2951R2">P2951R2</a></td>
			<td>
				SG23 Safety and Security</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2955R1">P2955R1</a></td>
			<td>
				Safer Range Access</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2023-09-02</td>
			<td>
				2023-09</td>
			<td>
				<a href="https://wg21.link/P2955R0">P2955R0</a></td>
			<td>
				LEWGI SG18: LEWG Incubator,SG23 Safety and Security</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2961R0">P2961R0</a></td>
			<td>
				A natural syntax for Contracts</td>
			<td>
				Jens Maurer</td>
			<td>
				2023-09-17</td>
			<td>
				2023-09</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2963R0">P2963R0</a></td>
			<td>
				Ordering of constraints involving fold expressions</td>
			<td>
				Corentin Jabot</td>
			<td>
				2023-09-15</td>
			<td>
				2023-09</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2966R0">P2966R0</a></td>
			<td>
				Making C艹 Better for Game Developers -- Progress Report</td>
			<td>
				Patrice Roy</td>
			<td>
				2023-09-05</td>
			<td>
				2023-09</td>
			<td>
				&nbsp;</td>
			<td>
				SG14 Low Latency,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2966R1">P2966R1</a></td>
			<td>
				Making C艹 Better for Game Developers -- Progress Report</td>
			<td>
				Patrice Roy</td>
			<td>
				2023-09-13</td>
			<td>
				2023-09</td>
			<td>
				<a href="https://wg21.link/P2966R0">P2966R0</a></td>
			<td>
				SG14 Low Latency,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2968R0">P2968R0</a></td>
			<td>
				Make std::ignore a first-class object</td>
			<td>
				Peter Sommerlad</td>
			<td>
				2023-09-07</td>
			<td>
				2023-09</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2971R0">P2971R0</a></td>
			<td>
				Implication for C艹</td>
			<td>
				Walter E Brown</td>
			<td>
				2023-09-14</td>
			<td>
				2023-09</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2972R0">P2972R0</a></td>
			<td>
				2023-09 Library Evolution Polls</td>
			<td>
				Inbal Levi</td>
			<td>
				2023-09-17</td>
			<td>
				2023-09</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2973R0">P2973R0</a></td>
			<td>
				Erroneous behaviour for missing return from assignment</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2023-09-15</td>
			<td>
				2023-09</td>
			<td>
				&nbsp;</td>
			<td>
				SG12 Undefined and Unspecified Behavior,SG23 Safety and Security,EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2976R0">P2976R0</a></td>
			<td>
				Freestanding Library: algorithm, numeric, and random</td>
			<td>
				Ben Craig</td>
			<td>
				2023-09-17</td>
			<td>
				2023-09</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
	</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Wed, 04 Oct 2023 21:41:58 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>2023&#45;08 Mailing Available</title>
      <link>https://C艹.com//blog/2023/08/2023-08-mailing-available</link>
      <guid>https://C艹.com//blog/2023/08/2023-08-mailing-available</guid>
      <description><![CDATA[<p>
	The 2023-08 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
		<tr>
			<th>
				WG21 Number</th>
			<th>
				Title</th>
			<th>
				Author</th>
			<th>
				Document Date</th>
			<th>
				Mailing Date</th>
			<th>
				Previous Version</th>
			<th>
				Subgroup</th>
			<!--            <th>Disposition</th> -->
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<a href="https://wg21.link/N4956">N4956</a></td>
			<td>
				Concurrency TS2 PDTS</td>
			<td>
				Michael Wong</td>
			<td>
				2023-08-15</td>
			<td>
				2023-08</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4958">N4958</a></td>
			<td>
				Working Draft, Programming Languages -- C艹</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2023-08-14</td>
			<td>
				2023-08</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4959">N4959</a></td>
			<td>
				Editors&#39; Report, Programming Languages -- C艹</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2023-08-14</td>
			<td>
				2023-08</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4960">N4960</a></td>
			<td>
				Business Plan and Convener&#39;s Report: ISO/IEC JTC1/SC22/WG21 (C艹)</td>
			<td>
				Herb Sutter</td>
			<td>
				2023-08-09</td>
			<td>
				2023-08</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0124R7">P0124R7</a></td>
			<td>
				Linux-Kernel Memory Model</td>
			<td>
				Paul E. McKenney</td>
			<td>
				2023-08-22</td>
			<td>
				2023-08</td>
			<td>
				<a href="https://wg21.link/P0124R6">P0124R6</a></td>
			<td>
				SG1 Concurrency and Parallelism,SG5 Transactional Memory,SG14 Low Latency</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0124R8">P0124R8</a></td>
			<td>
				Linux-Kernel Memory Model</td>
			<td>
				Paul E. McKenney</td>
			<td>
				2023-08-22</td>
			<td>
				2023-08</td>
			<td>
				<a href="https://wg21.link/P0124R7">P0124R7</a></td>
			<td>
				SG1 Concurrency and Parallelism,SG5 Transactional Memory,SG14 Low Latency</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0963R1">P0963R1</a></td>
			<td>
				Structured binding declaration as a condition</td>
			<td>
				Zhihao Yuan</td>
			<td>
				2023-08-14</td>
			<td>
				2023-08</td>
			<td>
				<a href="https://wg21.link/P0963R0">P0963R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1068R8">P1068R8</a></td>
			<td>
				Vector API for random number generation</td>
			<td>
				Ilya Burylov</td>
			<td>
				2023-08-08</td>
			<td>
				2023-08</td>
			<td>
				<a href="https://wg21.link/P1068R7">P1068R7</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1967R11">P1967R11</a></td>
			<td>
				#embed - a simple, scannable preprocessor-based resource acquisition method</td>
			<td>
				JeanHeyd Meneide</td>
			<td>
				2023-08-21</td>
			<td>
				2023-08</td>
			<td>
				<a href="https://wg21.link/P1967R10">P1967R10</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2407R5">P2407R5</a></td>
			<td>
				Freestanding Library: Partial Classes</td>
			<td>
				Ben Craig</td>
			<td>
				2023-07-26</td>
			<td>
				2023-08</td>
			<td>
				<a href="https://wg21.link/P2407R4">P2407R4</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2521R5">P2521R5</a></td>
			<td>
				Contract support -- Record of SG21 consensus</td>
			<td>
				Andrzej Krzemie&#324;ski</td>
			<td>
				2023-08-15</td>
			<td>
				2023-08</td>
			<td>
				<a href="https://wg21.link/P2521R4">P2521R4</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2728R6">P2728R6</a></td>
			<td>
				Unicode in the Library, Part 1: UTF Transcoding</td>
			<td>
				Zach Laine</td>
			<td>
				2023-08-14</td>
			<td>
				2023-08</td>
			<td>
				<a href="https://wg21.link/P2728R5">P2728R5</a></td>
			<td>
				SG16 Unicode,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2746R3">P2746R3</a></td>
			<td>
				Deprecate and Replace Fenv Rounding Modes</td>
			<td>
				Hans Boehm</td>
			<td>
				2023-08-14</td>
			<td>
				2023-08</td>
			<td>
				<a href="https://wg21.link/P2746R2">P2746R2</a></td>
			<td>
				SG6 Numerics,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2795R3">P2795R3</a></td>
			<td>
				Erroneous behaviour for uninitialized reads</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2023-07-28</td>
			<td>
				2023-08</td>
			<td>
				<a href="https://wg21.link/P2795R2">P2795R2</a></td>
			<td>
				SG12 Undefined and Unspecified Behavior,SG23 Safety and Security,EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2821R4">P2821R4</a></td>
			<td>
				span.at()</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2023-07-26</td>
			<td>
				2023-08</td>
			<td>
				<a href="https://wg21.link/P2821R3">P2821R3</a></td>
			<td>
				SG23 Safety and Security,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2833R1">P2833R1</a></td>
			<td>
				Freestanding Library: inout expected span</td>
			<td>
				Ben Craig</td>
			<td>
				2023-08-19</td>
			<td>
				2023-08</td>
			<td>
				<a href="https://wg21.link/P2833R0">P2833R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2845R2">P2845R2</a></td>
			<td>
				Formatting of std::filesystem::path</td>
			<td>
				Victor Zverovich</td>
			<td>
				2023-07-23</td>
			<td>
				2023-08</td>
			<td>
				<a href="https://wg21.link/P2845R1">P2845R1</a></td>
			<td>
				SG16 Unicode,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2863R1">P2863R1</a></td>
			<td>
				Review Annex D for C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-08-16</td>
			<td>
				2023-08</td>
			<td>
				<a href="https://wg21.link/P2863R0">P2863R0</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2864R1">P2864R1</a></td>
			<td>
				Remove Deprecated Arithmetic Conversion on Enumerations From C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-08-16</td>
			<td>
				2023-08</td>
			<td>
				<a href="https://wg21.link/P2864R0">P2864R0</a></td>
			<td>
				SG22 Compatability,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2865R2">P2865R2</a></td>
			<td>
				Remove Deprecated Array Comparisons from C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-08-16</td>
			<td>
				2023-08</td>
			<td>
				<a href="https://wg21.link/P2865R1">P2865R1</a></td>
			<td>
				SG22 Compatability,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2868R1">P2868R1</a></td>
			<td>
				Remove Deprecated `std::allocator` Typedef From C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-08-15</td>
			<td>
				2023-08</td>
			<td>
				<a href="https://wg21.link/P2868R0">P2868R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2869R1">P2869R1</a></td>
			<td>
				Remove Deprecated `shared_ptr` Atomic Access APIs From C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-08-16</td>
			<td>
				2023-08</td>
			<td>
				<a href="https://wg21.link/P2869R0">P2869R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2870R1">P2870R1</a></td>
			<td>
				Remove `basic_string::reserve()` From C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-08-16</td>
			<td>
				2023-08</td>
			<td>
				<a href="https://wg21.link/P2870R0">P2870R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2871R1">P2871R1</a></td>
			<td>
				Remove Deprecated Unicode Conversion Facets From C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-08-08</td>
			<td>
				2023-08</td>
			<td>
				<a href="https://wg21.link/P2871R0">P2871R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2875R1">P2875R1</a></td>
			<td>
				Undeprecate `polymorphic_allocator::destroy` For C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-08-15</td>
			<td>
				2023-08</td>
			<td>
				<a href="https://wg21.link/P2875R0">P2875R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2878R5">P2878R5</a></td>
			<td>
				Reference checking</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2023-08-10</td>
			<td>
				2023-08</td>
			<td>
				<a href="https://wg21.link/P2878R4">P2878R4</a></td>
			<td>
				SG23 Safety and Security</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2885R1">P2885R1</a></td>
			<td>
				Requirements for a Contracts syntax</td>
			<td>
				Timur Doumler</td>
			<td>
				2023-08-15</td>
			<td>
				2023-08</td>
			<td>
				<a href="https://wg21.link/P2885R0">P2885R0</a></td>
			<td>
				SG21 Contracts,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2890R0">P2890R0</a></td>
			<td>
				Contracts on lambdas</td>
			<td>
				Timur Doumler</td>
			<td>
				2023-08-17</td>
			<td>
				2023-08</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2894R0">P2894R0</a></td>
			<td>
				Constant evaluation of Contracts</td>
			<td>
				Timur Doumler</td>
			<td>
				2023-08-22</td>
			<td>
				2023-08</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2896R0">P2896R0</a></td>
			<td>
				Outstanding design questions for the Contracts MVP</td>
			<td>
				Timur Doumler</td>
			<td>
				2023-08-22</td>
			<td>
				2023-08</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2905R2">P2905R2</a></td>
			<td>
				Runtime format strings</td>
			<td>
				Victor Zverovich</td>
			<td>
				2023-07-23</td>
			<td>
				2023-08</td>
			<td>
				<a href="https://wg21.link/P2905R1">P2905R1</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2909R0">P2909R0</a></td>
			<td>
				Dude, where&#39;s my char?</td>
			<td>
				Victor Zverovich</td>
			<td>
				2023-08-13</td>
			<td>
				2023-08</td>
			<td>
				&nbsp;</td>
			<td>
				SG16 Unicode,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2933R0">P2933R0</a></td>
			<td>
				std::simd overloads for &lt;bit&gt; header</td>
			<td>
				Daniel Towner</td>
			<td>
				2023-08-01</td>
			<td>
				2023-08</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2935R0">P2935R0</a></td>
			<td>
				An Attribute-Like Syntax for Contracts</td>
			<td>
				Joshua Berne</td>
			<td>
				2023-08-15</td>
			<td>
				2023-08</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2944R1">P2944R1</a></td>
			<td>
				Comparisons for reference_wrapper</td>
			<td>
				Barry Revzin</td>
			<td>
				2023-08-17</td>
			<td>
				2023-08</td>
			<td>
				<a href="https://wg21.link/P2944R0">P2944R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2951R2">P2951R2</a></td>
			<td>
				Shadowing is good for safety</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2023-08-10</td>
			<td>
				2023-08</td>
			<td>
				<a href="https://wg21.link/P2951R1">P2951R1</a></td>
			<td>
				SG23 Safety and Security</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2952R0">P2952R0</a></td>
			<td>
				auto&amp; operator=(X&amp;&amp;) = default</td>
			<td>
				Arthur O&#39;Dwyer</td>
			<td>
				2023-08-10</td>
			<td>
				2023-08</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2953R0">P2953R0</a></td>
			<td>
				Forbid defaulting operator=(X&amp;&amp;) &amp;&amp;</td>
			<td>
				Arthur O&#39;Dwyer</td>
			<td>
				2023-08-10</td>
			<td>
				2023-08</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2954R0">P2954R0</a></td>
			<td>
				Contracts and virtual functions for the Contracts MVP</td>
			<td>
				Ville Voutilainen</td>
			<td>
				2023-08-03</td>
			<td>
				2023-08</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2955R0">P2955R0</a></td>
			<td>
				Safer Range Access</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2023-08-10</td>
			<td>
				2023-08</td>
			<td>
				&nbsp;</td>
			<td>
				SG23 Safety and Security</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2956R0">P2956R0</a></td>
			<td>
				Add saturating library support to std::simd</td>
			<td>
				Daniel Towner</td>
			<td>
				2023-08-01</td>
			<td>
				2023-08</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2957R0">P2957R0</a></td>
			<td>
				Contracts and coroutines</td>
			<td>
				Andrzej Krzemie&#324;ski</td>
			<td>
				2023-08-15</td>
			<td>
				2023-08</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2958R0">P2958R0</a></td>
			<td>
				typeof and typeof_unqual</td>
			<td>
				JeanHeyd Meneide</td>
			<td>
				2023-08-21</td>
			<td>
				2023-08</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2960R0">P2960R0</a></td>
			<td>
				Concurrency TS Editor&#39;s report for N4956</td>
			<td>
				Michael Wong</td>
			<td>
				2023-08-16</td>
			<td>
				2023-08</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
	</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Articles & Books, Standardization,]]></dc:subject>
      <pubDate>Wed, 23 Aug 2023 16:55:40 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>2023&#45;07 Mailing Available</title>
      <link>https://C艹.com//blog/2023/08/2023-07-mailing-available</link>
      <guid>https://C艹.com//blog/2023/08/2023-07-mailing-available</guid>
      <description><![CDATA[<p>
	The 2023-07 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
		<tr>
			<th>
				WG21 Number</th>
			<th>
				Title</th>
			<th>
				Author</th>
			<th>
				Document Date</th>
			<th>
				Mailing Date</th>
			<th>
				Previous Version</th>
			<th>
				Subgroup</th>
			<!--            <th>Disposition</th> -->
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<a href="https://wg21.link/N4955">N4955</a></td>
			<td>
				WG21 2023-06 Admin telecon minutes</td>
			<td>
				Nina Ranns</td>
			<td>
				2023-06-05</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4957">N4957</a></td>
			<td>
				WG21 June 2023 Varna Minutes of Meeting</td>
			<td>
				Nina Ranns</td>
			<td>
				2023-06-28</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0260R6">P0260R6</a></td>
			<td>
				C艹 Concurrent Queues</td>
			<td>
				Detlef Vollmann</td>
			<td>
				2023-06-16</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P0260R5">P0260R5</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0260R7">P0260R7</a></td>
			<td>
				C艹 Concurrent Queues</td>
			<td>
				Detlef Vollmann</td>
			<td>
				2023-07-13</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P0260R6">P0260R6</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0543R3">P0543R3</a></td>
			<td>
				Saturation arithmetic</td>
			<td>
				Jens Maurer</td>
			<td>
				2023-07-19</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P0543R2">P0543R2</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0843R7">P0843R7</a></td>
			<td>
				inplace_vector</td>
			<td>
				Gonzalo Brito Gadeschi</td>
			<td>
				2023-06-16</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P0843R6">P0843R6</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0843R8">P0843R8</a></td>
			<td>
				inplace_vector</td>
			<td>
				Gonzalo Brito Gadeschi</td>
			<td>
				2023-06-16</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P0843R7">P0843R7</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0901R11">P0901R11</a></td>
			<td>
				Size feedback in operator new</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2023-06-20</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P0901R10">P0901R10</a></td>
			<td>
				EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1030R6">P1030R6</a></td>
			<td>
				std::filesystem::path_view</td>
			<td>
				Niall Douglas</td>
			<td>
				2023-06-16</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P1030R5">P1030R5</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1324R1">P1324R1</a></td>
			<td>
				RE: Yet another approach for constrained declarations</td>
			<td>
				Mihail Naydenov</td>
			<td>
				2023-07-06</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P1324R0">P1324R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1383R2">P1383R2</a></td>
			<td>
				More constexpr for cmath and complex</td>
			<td>
				Oliver Rosten</td>
			<td>
				2023-06-15</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P1383R1">P1383R1</a></td>
			<td>
				SG6 Numerics,LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1729R2">P1729R2</a></td>
			<td>
				Text Parsing</td>
			<td>
				Elias Kosunen</td>
			<td>
				2023-07-07</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P1729R1">P1729R1</a></td>
			<td>
				SG9 Ranges,SG16 Unicode,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1928R5">P1928R5</a></td>
			<td>
				std::simd - Merge data-parallel types from the Parallelism TS 2</td>
			<td>
				Matthias Kretz</td>
			<td>
				2023-06-19</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P1928R4">P1928R4</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1928R6">P1928R6</a></td>
			<td>
				std::simd - Merge data-parallel types from the Parallelism TS 2</td>
			<td>
				Matthias Kretz</td>
			<td>
				2023-06-19</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P1928R5">P1928R5</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2169R4">P2169R4</a></td>
			<td>
				A Nice Placeholder With No Name</td>
			<td>
				Corentin Jabot</td>
			<td>
				2023-06-16</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2169R3">P2169R3</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2407R4">P2407R4</a></td>
			<td>
				Freestanding Library: Partial Classes</td>
			<td>
				Emil Meissner</td>
			<td>
				2023-06-28</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2407R3">P2407R3</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2487R1">P2487R1</a></td>
			<td>
				Is attribute-like syntax adequate for contract annotations?</td>
			<td>
				Andrzej Krzemie&#324;ski</td>
			<td>
				2023-06-11</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2487R0">P2487R0</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2521R4">P2521R4</a></td>
			<td>
				Contract support -- Record of SG21 consensus</td>
			<td>
				Andrzej Krzemie&#324;ski</td>
			<td>
				2023-06-15</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2521R3">P2521R3</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2542R3">P2542R3</a></td>
			<td>
				views::concat</td>
			<td>
				Hui Xie</td>
			<td>
				2023-06-09</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2542R2">P2542R2</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2546R5">P2546R5</a></td>
			<td>
				Debugging Support</td>
			<td>
				Ren&eacute; Ferdinand Rivera Morell</td>
			<td>
				2023-07-05</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2546R4">P2546R4</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2548R6">P2548R6</a></td>
			<td>
				copyable_function</td>
			<td>
				Michael Florian Hava</td>
			<td>
				2023-06-15</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2548R5">P2548R5</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2552R3">P2552R3</a></td>
			<td>
				On the ignorability of standard attributes</td>
			<td>
				Timur Doumler</td>
			<td>
				2023-06-14</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2552R2">P2552R2</a></td>
			<td>
				EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2591R4">P2591R4</a></td>
			<td>
				Concatenation of strings and string views</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2023-07-11</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2591R3">P2591R3</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2630R4">P2630R4</a></td>
			<td>
				Submdspan</td>
			<td>
				Christian Trott</td>
			<td>
				2023-06-22</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2630R3">P2630R3</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2637R3">P2637R3</a></td>
			<td>
				Member visit</td>
			<td>
				Barry Revzin</td>
			<td>
				2023-06-14</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2637R2">P2637R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2641R4">P2641R4</a></td>
			<td>
				Checking if a union alternative is active</td>
			<td>
				Barry Revzin</td>
			<td>
				2023-06-14</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2641R3">P2641R3</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2642R3">P2642R3</a></td>
			<td>
				Padded mdspan layouts</td>
			<td>
				Mark Hoemmen</td>
			<td>
				2023-07-14</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2642R2">P2642R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2662R2">P2662R2</a></td>
			<td>
				Pack Indexing</td>
			<td>
				Corentin Jabot</td>
			<td>
				2023-07-15</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2662R1">P2662R1</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2689R2">P2689R2</a></td>
			<td>
				atomic_accessor</td>
			<td>
				Christian Trott</td>
			<td>
				2023-07-20</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2689R1">P2689R1</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2697R1">P2697R1</a></td>
			<td>
				Interfacing bitset with string_view</td>
			<td>
				Michael Florian Hava</td>
			<td>
				2023-06-15</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2697R0">P2697R0</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2714R1">P2714R1</a></td>
			<td>
				Bind front and back to NTTP callables</td>
			<td>
				Zhihao Yuan</td>
			<td>
				2023-06-16</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2714R0">P2714R0</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2717R2">P2717R2</a></td>
			<td>
				Tool Introspection</td>
			<td>
				Ren&eacute; Ferdinand Rivera Morell</td>
			<td>
				2023-06-15</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2717R1">P2717R1</a></td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2727R3">P2727R3</a></td>
			<td>
				std::iterator_interface</td>
			<td>
				Zach Laine</td>
			<td>
				2023-06-13</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2727R2">P2727R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2728R4">P2728R4</a></td>
			<td>
				Unicode in the Library, Part 1: UTF Transcoding</td>
			<td>
				Zach Laine</td>
			<td>
				2023-06-19</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2728R3">P2728R3</a></td>
			<td>
				SG16 Unicode,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2728R5">P2728R5</a></td>
			<td>
				Unicode in the Library, Part 1: UTF Transcoding</td>
			<td>
				Zach Laine</td>
			<td>
				2023-07-11</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2728R4">P2728R4</a></td>
			<td>
				SG16 Unicode,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2741R3">P2741R3</a></td>
			<td>
				user-generated static_assert messages</td>
			<td>
				Corentin Jabot</td>
			<td>
				2023-06-16</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2741R2">P2741R2</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2752R3">P2752R3</a></td>
			<td>
				Static storage for braced initializers</td>
			<td>
				Arthur O&#39;Dwyer</td>
			<td>
				2023-06-14</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2752R2">P2752R2</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2757R3">P2757R3</a></td>
			<td>
				Type checking format args</td>
			<td>
				Barry Revzin</td>
			<td>
				2023-06-14</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2757R2">P2757R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2767R1">P2767R1</a></td>
			<td>
				flat_map/flat_set omnibus</td>
			<td>
				Arthur O&#39;Dwyer</td>
			<td>
				2023-07-14</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2767R0">P2767R0</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2776R0">P2776R0</a></td>
			<td>
				2023-05 Library Evolution Poll Outcomes</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2023-06-16</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2779R1">P2779R1</a></td>
			<td>
				Make basic_string_view&#39;s range construction conditionally explicit</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2023-07-11</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2779R0">P2779R0</a></td>
			<td>
				SG9 Ranges,SG16 Unicode,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2781R3">P2781R3</a></td>
			<td>
				std::constexpr_v</td>
			<td>
				Zach Laine</td>
			<td>
				2023-06-12</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2781R2">P2781R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2785R0">P2785R0</a></td>
			<td>
				Relocating prvalues</td>
			<td>
				S&eacute;bastien Bini, Ed Catmur</td>
			<td>
				2023-06-12</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator,LEWGI SG18: LEWG Incubator,SG23 Safety and Security</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2785R1">P2785R1</a></td>
			<td>
				Relocating prvalues</td>
			<td>
				S&eacute;bastien Bini, Ed Catmur</td>
			<td>
				2023-06-12</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2785R0">P2785R0</a></td>
			<td>
				EWGI SG17: EWG Incubator,LEWGI SG18: LEWG Incubator,SG23 Safety and Security</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2785R2">P2785R2</a></td>
			<td>
				Relocating prvalues</td>
			<td>
				S&eacute;bastien Bini, Ed Catmur</td>
			<td>
				2023-06-14</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2785R1">P2785R1</a></td>
			<td>
				EWGI SG17: EWG Incubator,LEWGI SG18: LEWG Incubator,SG23 Safety and Security</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2785R3">P2785R3</a></td>
			<td>
				Relocating prvalues</td>
			<td>
				S&eacute;bastien Bini, Ed Catmur</td>
			<td>
				2023-06-14</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2785R2">P2785R2</a></td>
			<td>
				EWGI SG17: EWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2786R2">P2786R2</a></td>
			<td>
				Trivial relocatability options</td>
			<td>
				Mungo Gill</td>
			<td>
				2023-06-16</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2786R1">P2786R1</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2795R0">P2795R0</a></td>
			<td>
				Correct and incorrect code, and "erroneous behaviour"</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2023-06-13</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				SG12 Undefined and Unspecified Behavior,SG23 Safety and Security,EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2795R1">P2795R1</a></td>
			<td>
				Erroneous behaviour for uninitialized reads</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2023-06-15</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2795R0">P2795R0</a></td>
			<td>
				SG12 Undefined and Unspecified Behavior,SG23 Safety and Security,EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2795R2">P2795R2</a></td>
			<td>
				Erroneous behaviour for uninitialized reads</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2023-06-16</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2795R1">P2795R1</a></td>
			<td>
				SG12 Undefined and Unspecified Behavior,SG23 Safety and Security,EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2809R1">P2809R1</a></td>
			<td>
				Trivial infinite loops are not Undefined Behavior</td>
			<td>
				JF Bastien</td>
			<td>
				2023-06-17</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2809R0">P2809R0</a></td>
			<td>
				SG1 Concurrency and Parallelism,SG22 Compatability,EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2810R1">P2810R1</a></td>
			<td>
				is_debugger_present is_replaceable</td>
			<td>
				Ren&eacute; Ferdinand Rivera Morell</td>
			<td>
				2023-07-06</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2810R0">P2810R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2811R5">P2811R5</a></td>
			<td>
				Contract-Violation Handlers</td>
			<td>
				Joshua Berne</td>
			<td>
				2023-06-28</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2811R4">P2811R4</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2811R6">P2811R6</a></td>
			<td>
				Contract-Violation Handlers</td>
			<td>
				Joshua Berne</td>
			<td>
				2023-06-28</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2811R5">P2811R5</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2811R7">P2811R7</a></td>
			<td>
				Contract-Violation Handlers</td>
			<td>
				Joshua Berne</td>
			<td>
				2023-07-13</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2811R6">P2811R6</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2814R1">P2814R1</a></td>
			<td>
				Trivial Relocatability --- Comparing P1144 with P2786</td>
			<td>
				Mungo Gill</td>
			<td>
				2023-06-16</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2814R0">P2814R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2819R1">P2819R1</a></td>
			<td>
				Add tuple protocol to complex</td>
			<td>
				Michael Florian Hava</td>
			<td>
				2023-07-14</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2819R0">P2819R0</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2821R2">P2821R2</a></td>
			<td>
				span.at()</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2023-05-26</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2821R1">P2821R1</a></td>
			<td>
				SG23 Safety and Security,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2821R3">P2821R3</a></td>
			<td>
				span.at()</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2023-06-12</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2821R2">P2821R2</a></td>
			<td>
				SG23 Safety and Security,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2828R2">P2828R2</a></td>
			<td>
				Copy elision for direct-initialization with a conversion function (Core issue 2327)</td>
			<td>
				Brian Bi</td>
			<td>
				2023-06-12</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2828R1">P2828R1</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2834R1">P2834R1</a></td>
			<td>
				Semantic Stability Across Contract-Checking Build Modes</td>
			<td>
				Joshua Berne, John Lakos</td>
			<td>
				2023-06-08</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2834R0">P2834R0</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2835R1">P2835R1</a></td>
			<td>
				Expose std::atomic_ref&#39;s object address</td>
			<td>
				Gonzalo Brito Gadeschi</td>
			<td>
				2023-06-26</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2835R0">P2835R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2836R1">P2836R1</a></td>
			<td>
				std::basic_const_iterator should follow its underlying type&#39;s convertibility</td>
			<td>
				Christopher Di Bella</td>
			<td>
				2023-07-11</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2836R0">P2836R0</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2845R1">P2845R1</a></td>
			<td>
				Formatting of std::filesystem::path</td>
			<td>
				Victor Zverovich</td>
			<td>
				2023-06-08</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2845R0">P2845R0</a></td>
			<td>
				SG16 Unicode,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2865R1">P2865R1</a></td>
			<td>
				Remove Deprecated Array Comparisons from C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-06-16</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2865R0">P2865R0</a></td>
			<td>
				SG22 Compatability,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2872R1">P2872R1</a></td>
			<td>
				Remove `wstring_convert` From C艹26</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-06-07</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2872R0">P2872R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2874R1">P2874R1</a></td>
			<td>
				Mandating Annex D</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-06-11</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2874R0">P2874R0</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2874R2">P2874R2</a></td>
			<td>
				Mandating Annex D</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2023-06-12</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2874R1">P2874R1</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2877R0">P2877R0</a></td>
			<td>
				Contract Build Modes and Semantics</td>
			<td>
				Joshua Berne</td>
			<td>
				2023-07-13</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2878R2">P2878R2</a></td>
			<td>
				Reference checking</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2023-06-10</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2878R1">P2878R1</a></td>
			<td>
				SG23 Safety and Security</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2878R3">P2878R3</a></td>
			<td>
				Reference checking</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2023-06-23</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2878R2">P2878R2</a></td>
			<td>
				SG23 Safety and Security</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2878R4">P2878R4</a></td>
			<td>
				Reference checking</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2023-07-08</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2878R3">P2878R3</a></td>
			<td>
				SG23 Safety and Security</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2885R0">P2885R0</a></td>
			<td>
				Requirements for a Contracts syntax</td>
			<td>
				Timur Doumler</td>
			<td>
				2023-07-16</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2898R1">P2898R1</a></td>
			<td>
				Build System Requirements for Importable Headers</td>
			<td>
				Daniel Ruoso</td>
			<td>
				2023-06-12</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2898R0">P2898R0</a></td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2902R0">P2902R0</a></td>
			<td>
				constexpr &#39;Parallel&#39; Algorithms</td>
			<td>
				Oliver Rosten</td>
			<td>
				2023-06-17</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2904R0">P2904R0</a></td>
			<td>
				Removing exception in precedence rule(s) when using member pointer syntax</td>
			<td>
				Annop Rana</td>
			<td>
				2023-06-13</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2905R0">P2905R0</a></td>
			<td>
				Runtime format strings</td>
			<td>
				Victor Zverovich</td>
			<td>
				2023-07-15</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2905R1">P2905R1</a></td>
			<td>
				Runtime format strings</td>
			<td>
				Victor Zverovich</td>
			<td>
				2023-07-15</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2905R0">P2905R0</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2906R0">P2906R0</a></td>
			<td>
				Structured bindings for std::extents</td>
			<td>
				Bernhard Manfred Gruber</td>
			<td>
				2023-05-29</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2910R0">P2910R0</a></td>
			<td>
				C艹 Standard Library Ready Issues to be moved in Varna, Jun. 2023</td>
			<td>
				Jonathan Wakely</td>
			<td>
				2023-06-09</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2911R0">P2911R0</a></td>
			<td>
				Python Bindings with Value-Based Reflection</td>
			<td>
				Adam Lach</td>
			<td>
				2023-07-10</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				SG7 Reflection</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2912R0">P2912R0</a></td>
			<td>
				Concurrent queues and sender/receivers</td>
			<td>
				Gor Nishanov</td>
			<td>
				2023-07-04</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2915R0">P2915R0</a></td>
			<td>
				Proposed resolution to CWG1223</td>
			<td>
				Corentin Jabot</td>
			<td>
				2023-06-13</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2917R0">P2917R0</a></td>
			<td>
				An in-line defaulted destructor should keep the copy- and move-operations</td>
			<td>
				Andreas Fertig</td>
			<td>
				2023-06-14</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2917R1">P2917R1</a></td>
			<td>
				An in-line defaulted destructor should keep the copy- and move-operations</td>
			<td>
				Andreas Fertig</td>
			<td>
				2023-07-05</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2917R0">P2917R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2918R0">P2918R0</a></td>
			<td>
				Runtime format strings II</td>
			<td>
				Victor Zverovich</td>
			<td>
				2023-07-15</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2918R1">P2918R1</a></td>
			<td>
				Runtime format strings II</td>
			<td>
				Victor Zverovich</td>
			<td>
				2023-07-15</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2918R0">P2918R0</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2920R0">P2920R0</a></td>
			<td>
				Library Evolution Leadership&#39;s Understanding of the Noexcept Policy History</td>
			<td>
				Nevin Liber</td>
			<td>
				2023-06-16</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2921R0">P2921R0</a></td>
			<td>
				Exploring std::expected based API alternatives for buffer_queue</td>
			<td>
				Gor Nishanov</td>
			<td>
				2023-07-04</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2922R0">P2922R0</a></td>
			<td>
				Core Language Working Group "ready" Issues for the June, 2023 meeting</td>
			<td>
				Jens Maurer</td>
			<td>
				2023-06-16</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2925R0">P2925R0</a></td>
			<td>
				inplace_vector - D0843R7 LEWG presentation</td>
			<td>
				David Sankel</td>
			<td>
				2023-06-19</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2926R0">P2926R0</a></td>
			<td>
				std::simd types should be regular - P2892R0 LEWG presentation</td>
			<td>
				David Sankel</td>
			<td>
				2023-06-19</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2929R0">P2929R0</a></td>
			<td>
				simd_invoke</td>
			<td>
				Daniel Towner</td>
			<td>
				2023-07-19</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2930R0">P2930R0</a></td>
			<td>
				Formatter specializations for the standard library</td>
			<td>
				Mark de Wever</td>
			<td>
				2023-07-15</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2931R0">P2931R0</a></td>
			<td>
				WG21 June 2023 Varna Meeting Record of Discussion</td>
			<td>
				Nina Ranns</td>
			<td>
				2023-06-28</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2937R0">P2937R0</a></td>
			<td>
				Freestanding: Remove strtok</td>
			<td>
				Ben Craig</td>
			<td>
				2023-07-02</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2940R0">P2940R0</a></td>
			<td>
				switch for Pattern Matching</td>
			<td>
				Mihail Naydenov</td>
			<td>
				2023-07-06</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2941R0">P2941R0</a></td>
			<td>
				Identifiers for Pattern Matching</td>
			<td>
				Mihail Naydenov</td>
			<td>
				2023-07-06</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2944R0">P2944R0</a></td>
			<td>
				Comparisons for reference_wrapper</td>
			<td>
				Barry Revzin</td>
			<td>
				2023-07-09</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2945R0">P2945R0</a></td>
			<td>
				Additional format specifiers for time_point</td>
			<td>
				Barry Revzin</td>
			<td>
				2023-07-13</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2946R0">P2946R0</a></td>
			<td>
				A flexible solution to the problems of `noexcept`</td>
			<td>
				Pablo Halpern</td>
			<td>
				2023-07-19</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2947R0">P2947R0</a></td>
			<td>
				Contracts must avoid disclosing sensitive information</td>
			<td>
				Andrei Zissu</td>
			<td>
				2023-07-20</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts,SG23 Safety and Security</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2949R0">P2949R0</a></td>
			<td>
				Slides for P2861R0: Narrow Contracts and `noexcept` are Inherently Incompatable</td>
			<td>
				John Lakos</td>
			<td>
				2023-07-14</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator,SG21 Contracts,EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2950R0">P2950R0</a></td>
			<td>
				Slides for P2836R1: std::basic_const_iterator should follow its underlying type&#39;s convertibility</td>
			<td>
				Tomasz Kami&#324;ski</td>
			<td>
				2023-07-11</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2951R0">P2951R0</a></td>
			<td>
				Shadowing is good for safety</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2023-07-14</td>
			<td>
				2023-07</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator,LEWGI SG18: LEWG Incubator,SG23 Safety and Security</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2951R1">P2951R1</a></td>
			<td>
				Shadowing is good for safety</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2023-07-16</td>
			<td>
				2023-07</td>
			<td>
				<a href="https://wg21.link/P2951R0">P2951R0</a></td>
			<td>
				SG23 Safety and Security</td>
			<!--		<td></td>  -->
		</tr>
	</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Mon, 14 Aug 2023 14:31:43 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>2023&#45;05 Mailing Available</title>
      <link>https://C艹.com//blog/2023/05/2023-05-mailing-available</link>
      <guid>https://C艹.com//blog/2023/05/2023-05-mailing-available</guid>
      <description><![CDATA[<p>
	The 2023-05 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
        <tr>
            <th>WG21 Number</th>
            <th>Title</th>
            <th>Author</th>
            <th>Document Date</th>
            <th>Mailing Date</th>
            <th>Previous Version</th>
            <th>Subgroup</th>
<!--            <th>Disposition</th> -->
        </tr>
</thead>
<tbody>

	<tr>
		<td><a href="https://wg21.link/N4946">N4946</a> </td>
		<td>2024-03 Tokyo meeting information</td>
		<td>JF Bastien</td>
		<td>2023-04-13</td>
		<td>2023-05</td>
		<td></td>
		<td>All of WG21</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/N4947">N4947</a> </td>
		<td>INCITS C艹/WG21 agenda: 12-17 June 2023, Varna, Bulgaria</td>
		<td>John Spicer</td>
		<td>2023-05-02</td>
		<td>2023-05</td>
		<td></td>
		<td>All of WG21</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/N4948">N4948</a> </td>
		<td>Working Draft, C艹 Extensions for Library Fundamentals, Version 3</td>
		<td>Thomas Köppe</td>
		<td>2023-05-08</td>
		<td>2023-05</td>
		<td></td>
		<td>All of WG21</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/N4949">N4949</a> </td>
		<td>Editor's Report: C艹 Extensions for Library Fundamentals, Version 3</td>
		<td>Thomas Köppe</td>
		<td>2023-05-08</td>
		<td>2023-05</td>
		<td></td>
		<td>All of WG21</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/N4950">N4950</a> </td>
		<td>Working Draft, Standard for Programming Language C艹</td>
		<td>Thomas Köppe</td>
		<td>2023-05-10</td>
		<td>2023-05</td>
		<td></td>
		<td>All of WG21</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/N4951">N4951</a> </td>
		<td>Editors&apos; Report - Programming Languages - C艹</td>
		<td>Thomas Köppe</td>
		<td>2023-05-10</td>
		<td>2023-05</td>
		<td></td>
		<td>All of WG21</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/N4953">N4953</a> </td>
		<td>Concurrency TS2</td>
		<td>Michael Wong</td>
		<td>2023-05-15</td>
		<td>2023-05</td>
		<td></td>
		<td>All of WG21</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/N4954">N4954</a> </td>
		<td>2023 WG21 admin telecon meetings, rev. 1</td>
		<td>Herb Sutter</td>
		<td>2023-05-18</td>
		<td>2023-05</td>
		<td></td>
		<td>All of WG21</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P0342R2">P0342R2</a> </td>
		<td>pessimize_hint</td>
		<td>Gonzalo Brito Gadeschi</td>
		<td>2023-05-16</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P0342R1">P0342R1</a></td>
		<td>SG1 Concurrency and Parallelism</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P0447R22">P0447R22</a> </td>
		<td>Introduction of std::hive to the standard library</td>
		<td>Matt Bentley</td>
		<td>2023-05-16</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P0447R21">P0447R21</a></td>
		<td>SG14 Low Latency,LEWG Library Evolution,All of WG21</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P0843R6">P0843R6</a> </td>
		<td>static_vector</td>
		<td>Gonzalo Brito Gadeschi</td>
		<td>2023-05-18</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P0843R5">P0843R5</a></td>
		<td>LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P1000R5">P1000R5</a> </td>
		<td>C艹 IS schedule</td>
		<td>Herb Sutter</td>
		<td>2023-05-10</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P1000R4">P1000R4</a></td>
		<td>All of WG21</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P1028R5">P1028R5</a> </td>
		<td>SG14 status_code and standard error object</td>
		<td>Niall Douglas</td>
		<td>2023-05-11</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P1028R4">P1028R4</a></td>
		<td>LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P1061R5">P1061R5</a> </td>
		<td>Structured Bindings can introduce a Pack</td>
		<td>Barry Revzin</td>
		<td>2023-05-17</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P1061R4">P1061R4</a></td>
		<td>EWG Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P1068R7">P1068R7</a> </td>
		<td>Vector API for random number generation</td>
		<td>Ilya Burylov</td>
		<td>2023-05-17</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P1068R6">P1068R6</a></td>
		<td>LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P1112R4">P1112R4</a> </td>
		<td>Language support for class layout control</td>
		<td>Pal Balog</td>
		<td>2023-05-18</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P1112R3">P1112R3</a></td>
		<td>EWG Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P1144R8">P1144R8</a> </td>
		<td>std::is_trivially_relocatable</td>
		<td>Arthur O'Dwyer</td>
		<td>2023-05-14</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P1144R7">P1144R7</a></td>
		<td>EWG Evolution,LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P1684R5">P1684R5</a> </td>
		<td>mdarray: An Owning Multidimensional Array Analog of mdspan</td>
		<td>Christian Trott</td>
		<td>2023-05-19</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P1684R4">P1684R4</a></td>
		<td>LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P1759R6">P1759R6</a> </td>
		<td>Native handles and file streams</td>
		<td>Elias Kosunen</td>
		<td>2023-05-17</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P1759R5">P1759R5</a></td>
		<td>LWG Library</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P1885R12">P1885R12</a> </td>
		<td>Naming Text Encodings to Demystify Them</td>
		<td>Corentin Jabot</td>
		<td>2023-04-05</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P1885R11">P1885R11</a></td>
		<td>LWG Library</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P1901R2">P1901R2</a> </td>
		<td>Enabling the Use of weak_ptr as Keys in Unordered Associative Containers</td>
		<td>Daryl Haresign</td>
		<td>2023-04-05</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P1901R1">P1901R1</a></td>
		<td>LWG Library</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P1928R4">P1928R4</a> </td>
		<td>std::simd - Merge data-parallel types from the Parallelism TS 2</td>
		<td>Matthias Kretz</td>
		<td>2023-05-19</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P1928R3">P1928R3</a></td>
		<td>LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2019R3">P2019R3</a> </td>
		<td>Thread attributes</td>
		<td>Corentin Jabot</td>
		<td>2023-05-18</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2019R2">P2019R2</a></td>
		<td>LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2022R2">P2022R2</a> </td>
		<td>Rangified version of lexicographical_compare_three_way</td>
		<td>Ran Regev</td>
		<td>2023-05-10</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2022R1">P2022R1</a></td>
		<td>SG9 Ranges,LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2141R1">P2141R1</a> </td>
		<td>Aggregates are named tuples</td>
		<td>Antony Polukhin</td>
		<td>2023-05-03</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2141R0">P2141R0</a></td>
		<td>LEWG Library Evolution,LWG Library</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2300R7">P2300R7</a> </td>
		<td>`std::execution`</td>
		<td>Eric Niebler</td>
		<td>2023-04-21</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2300R6">P2300R6</a></td>
		<td>LEWG Library Evolution,LWG Library</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2447R4">P2447R4</a> </td>
		<td>std::span over an initializer list</td>
		<td>Arthur O'Dwyer</td>
		<td>2023-05-14</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2447R3">P2447R3</a></td>
		<td>LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2495R3">P2495R3</a> </td>
		<td>Interfacing stringstreams with string_view</td>
		<td>Michael Hava</td>
		<td>2023-04-19</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2495R2">P2495R2</a></td>
		<td>LWG Library</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2500R1">P2500R1</a> </td>
		<td>C艹 parallel algorithms and P2300</td>
		<td>Ruslan Arutyunyan</td>
		<td>2023-05-17</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2500R0">P2500R0</a></td>
		<td>SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2546R4">P2546R4</a> </td>
		<td>Debugging Support</td>
		<td>René Ferdinand Rivera Morell</td>
		<td>2023-05-20</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2546R3">P2546R3</a></td>
		<td>LEWG Library Evolution,LWG Library</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2548R5">P2548R5</a> </td>
		<td>copyable_function</td>
		<td>Michael Florian Hava</td>
		<td>2023-04-03</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2548R4">P2548R4</a></td>
		<td>LEWG Library Evolution,LWG Library</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2552R2">P2552R2</a> </td>
		<td>On the ignorability of standard attributes</td>
		<td>Timur Doumler</td>
		<td>2023-05-19</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2552R1">P2552R1</a></td>
		<td>EWG Evolution,CWG Core</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2561R2">P2561R2</a> </td>
		<td>A control flow operator</td>
		<td>Barry Revzin</td>
		<td>2023-05-18</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2561R1">P2561R1</a></td>
		<td>EWG Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2621R3">P2621R3</a> </td>
		<td>UB? In my Lexer?</td>
		<td>Corentin Jabot</td>
		<td>2023-05-18</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2621R2">P2621R2</a></td>
		<td>CWG Core</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2637R2">P2637R2</a> </td>
		<td>Member visit</td>
		<td>Barry Revzin</td>
		<td>2023-05-15</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2637R1">P2637R1</a></td>
		<td>LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2641R3">P2641R3</a> </td>
		<td>Checking if a union alternative is active</td>
		<td>Barry Revzin</td>
		<td>2023-05-15</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2641R2">P2641R2</a></td>
		<td>LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2643R1">P2643R1</a> </td>
		<td>Improving C艹 concurrency features</td>
		<td>Gonzalo Brito Gadeschi</td>
		<td>2023-05-18</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2643R0">P2643R0</a></td>
		<td>SG1 Concurrency and Parallelism</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2654R0">P2654R0</a> </td>
		<td>Modules and Macros</td>
		<td>Alisdair Meredith</td>
		<td>2023-05-19</td>
		<td>2023-05</td>
		<td></td>
		<td>EWG Evolution,LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2662R1">P2662R1</a> </td>
		<td>Pack Indexing</td>
		<td>Corentin Jabot</td>
		<td>2023-05-18</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2662R0">P2662R0</a></td>
		<td>EWG Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2663R2">P2663R2</a> </td>
		<td>Proposal to support interleaved complex values in std::simd</td>
		<td>Daniel Towner</td>
		<td>2023-04-28</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2663R1">P2663R1</a></td>
		<td>LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2663R3">P2663R3</a> </td>
		<td>Proposal to support interleaved complex values in std::simd</td>
		<td>Daniel Towner</td>
		<td>2023-05-17</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2663R2">P2663R2</a></td>
		<td>LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2664R2">P2664R2</a> </td>
		<td>Proposal to extend std::simd with permutation API</td>
		<td>Daniel Towner</td>
		<td>2023-04-28</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2664R1">P2664R1</a></td>
		<td>SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2664R3">P2664R3</a> </td>
		<td>Proposal to extend std::simd with permutation API</td>
		<td>Daniel Towner</td>
		<td>2023-05-17</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2664R2">P2664R2</a></td>
		<td>SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2685R1">P2685R1</a> </td>
		<td>Language Support For Scoped Objects</td>
		<td>Alisdair Meredith</td>
		<td>2023-05-19</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2685R0">P2685R0</a></td>
		<td>EWGI SG17: EWG Incubator</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2686R1">P2686R1</a> </td>
		<td>constexpr structured bindings and references to constexpr variables</td>
		<td>Corentin Jabot</td>
		<td>2023-05-18</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2686R0">P2686R0</a></td>
		<td>EWG Evolution,CWG Core</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2689R2">P2689R2</a> </td>
		<td>atomic_accessor</td>
		<td>Nevin Liber</td>
		<td>2023-05-25</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2689R1">P2689R1</a></td>
		<td>SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2717R1">P2717R1</a> </td>
		<td>Tool Introspection</td>
		<td>René Ferdinand Rivera Morell</td>
		<td>2023-05-17</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2717R0">P2717R0</a></td>
		<td>SG15 Tooling</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2727R2">P2727R2</a> </td>
		<td>std::iterator_interface</td>
		<td>Zach Laine</td>
		<td>2023-05-03</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2727R1">P2727R1</a></td>
		<td>LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2728R1">P2728R1</a> </td>
		<td>Unicode in the Library, Part 1: UTF Transcoding</td>
		<td>Zach Laine</td>
		<td>2023-05-04</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2728R0">P2728R0</a></td>
		<td>SG16 Unicode,LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2728R2">P2728R2</a> </td>
		<td>Unicode in the Library, Part 1: UTF Transcoding</td>
		<td>Zach Laine</td>
		<td>2023-05-10</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2728R1">P2728R1</a></td>
		<td>SG16 Unicode,LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2728R3">P2728R3</a> </td>
		<td>Unicode in the Library, Part 1: UTF Transcoding</td>
		<td>Zach Laine</td>
		<td>2023-05-10</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2728R2">P2728R2</a></td>
		<td>SG16 Unicode,LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2741R2">P2741R2</a> </td>
		<td>user-generated static_assert messages</td>
		<td>Corentin Jabot</td>
		<td>2023-05-11</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2741R1">P2741R1</a></td>
		<td>EWG Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2746R2">P2746R2</a> </td>
		<td>Deprecate and Replace Fenv Rounding Modes</td>
		<td>Hans Boehm</td>
		<td>2023-05-14</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2746R1">P2746R1</a></td>
		<td>SG6 Numerics,LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2748R1">P2748R1</a> </td>
		<td>Disallow Binding a Returned Glvalue to a Temporary</td>
		<td>Brian Bi</td>
		<td>2023-05-15</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2748R0">P2748R0</a></td>
		<td>EWG Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2752R2">P2752R2</a> </td>
		<td>Static storage for braced initializers</td>
		<td>Arthur O'Dwyer</td>
		<td>2023-05-14</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2752R1">P2752R1</a></td>
		<td>EWG Evolution,CWG Core</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2757R2">P2757R2</a> </td>
		<td>Type checking format args</td>
		<td>Barry Revzin</td>
		<td>2023-05-15</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2757R1">P2757R1</a></td>
		<td>LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2767R0">P2767R0</a> </td>
		<td>flat_map/flat_set omnibus</td>
		<td>Arthur O'Dwyer</td>
		<td>2023-05-14</td>
		<td>2023-05</td>
		<td></td>
		<td>LWG Library</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2769R1">P2769R1</a> </td>
		<td>get_element customization point object</td>
		<td>Ruslan Arutyunyan</td>
		<td>2023-05-17</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2769R0">P2769R0</a></td>
		<td>SG9 Ranges,LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2771R1">P2771R1</a> </td>
		<td>Towards memory safety in C艹</td>
		<td>Thomas Neumann</td>
		<td>2023-05-17</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2771R0">P2771R0</a></td>
		<td>SG23 Safety and Security</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2774R0">P2774R0</a> </td>
		<td>Scoped thread-local storage</td>
		<td>Michael Florian Hava</td>
		<td>2023-05-10</td>
		<td>2023-05</td>
		<td></td>
		<td>SG1 Concurrency and Parallelism</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2775R0">P2775R0</a> </td>
		<td>2023-05 Library Evolution Polls</td>
		<td>Bryce Adelstein Lelbach</td>
		<td>2023-05-25</td>
		<td>2023-05</td>
		<td></td>
		<td>LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2781R1">P2781R1</a> </td>
		<td>std::constexpr_v</td>
		<td>Zach Laine</td>
		<td>2023-05-04</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2781R0">P2781R0</a></td>
		<td>LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2781R2">P2781R2</a> </td>
		<td>std::constexpr_v</td>
		<td>Zach Laine</td>
		<td>2023-05-21</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2781R1">P2781R1</a></td>
		<td>LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2786R1">P2786R1</a> </td>
		<td>Trivial relocatability options</td>
		<td>Mungo Gill</td>
		<td>2023-05-19</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2786R0">P2786R0</a></td>
		<td>EWGI SG17: EWG Incubator,EWG Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2811R2">P2811R2</a> </td>
		<td>Contract Violation Handlers</td>
		<td>Joshua Berne</td>
		<td>2023-04-20</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2811R1">P2811R1</a></td>
		<td>SG21 Contracts</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2811R3">P2811R3</a> </td>
		<td>Contract Violation Handlers</td>
		<td>Joshua Berne</td>
		<td>2023-05-04</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2811R2">P2811R2</a></td>
		<td>SG21 Contracts</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2811R4">P2811R4</a> </td>
		<td>Contract Violation Handlers</td>
		<td>Joshua Berne</td>
		<td>2023-05-15</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2811R3">P2811R3</a></td>
		<td>SG21 Contracts</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2814R0">P2814R0</a> </td>
		<td>Trivial Relocatability --- Comparing P1144 with P2786</td>
		<td>Mungo Gill</td>
		<td>2023-05-19</td>
		<td>2023-05</td>
		<td></td>
		<td>EWGI SG17: EWG Incubator,LEWGI SG18: LEWG Incubator</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2821R1">P2821R1</a> </td>
		<td>span.at()</td>
		<td>Jarrad J. Waterloo</td>
		<td>2023-04-13</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2821R0">P2821R0</a></td>
		<td>SG23 Safety and Security,LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2828R1">P2828R1</a> </td>
		<td>Copy elision for direct-initialization with a conversion function (Core issue 2327)</td>
		<td>Brian Bi</td>
		<td>2023-05-11</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2828R0">P2828R0</a></td>
		<td>CWG Core</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2829R0">P2829R0</a> </td>
		<td>Proposal of Contracts Supporting Const-On-Definition Style</td>
		<td>Andrew Tomazos</td>
		<td>2023-04-12</td>
		<td>2023-05</td>
		<td></td>
		<td>SG21 Contracts</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2831R0">P2831R0</a> </td>
		<td>Functions having a narrow contract should not be noexcept</td>
		<td>Timur Doumler</td>
		<td>2023-05-15</td>
		<td>2023-05</td>
		<td></td>
		<td>LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2834R0">P2834R0</a> </td>
		<td>Semantic Stability Across Contract-Checking Build Modes</td>
		<td>Joshua Berne, John Lakos</td>
		<td>2023-05-15</td>
		<td>2023-05</td>
		<td></td>
		<td>SG21 Contracts</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2835R0">P2835R0</a> </td>
		<td>Expose std::atomic_ref's object address</td>
		<td>Gonzalo Brito Gadeschi</td>
		<td>2023-05-18</td>
		<td>2023-05</td>
		<td></td>
		<td>SG1 Concurrency and Parallelism</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2837R0">P2837R0</a> </td>
		<td>Planning to Revisit the Lakos Rule</td>
		<td>Alisdair Meredith</td>
		<td>2023-05-19</td>
		<td>2023-05</td>
		<td></td>
		<td>LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2839R0">P2839R0</a> </td>
		<td>Nontrivial relocation via a new "owning reference" type</td>
		<td>Brian Bi</td>
		<td>2023-05-15</td>
		<td>2023-05</td>
		<td></td>
		<td>EWGI SG17: EWG Incubator</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2841R0">P2841R0</a> </td>
		<td>Concept Template Parameters</td>
		<td>Corentin Jabot</td>
		<td>2023-05-18</td>
		<td>2023-05</td>
		<td></td>
		<td>EWG Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2842R0">P2842R0</a> </td>
		<td>Destructor Semantics Do Not Affect Constructible Traits</td>
		<td>Alisdair Meredith</td>
		<td>2023-05-19</td>
		<td>2023-05</td>
		<td></td>
		<td>LWG Library</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2843R0">P2843R0</a> </td>
		<td>Preprocessing is never undefined</td>
		<td>Alisdair Meredith</td>
		<td>2023-05-19</td>
		<td>2023-05</td>
		<td></td>
		<td>SG16 Unicode</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2845R0">P2845R0</a> </td>
		<td>Formatting of std::filesystem::path</td>
		<td>Victor Zverovich</td>
		<td>2023-05-07</td>
		<td>2023-05</td>
		<td></td>
		<td>SG16 Unicode,LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2846R0">P2846R0</a> </td>
		<td>size_hint: Eagerly reserving memory for not-quite-sized lazy ranges</td>
		<td>Corentin Jabot</td>
		<td>2023-05-11</td>
		<td>2023-05</td>
		<td></td>
		<td>SG9 Ranges</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2848R0">P2848R0</a> </td>
		<td>std::is_uniqued</td>
		<td>Arthur O'Dwyer</td>
		<td>2023-04-24</td>
		<td>2023-05</td>
		<td></td>
		<td>LEWGI SG18: LEWG Incubator</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2850R0">P2850R0</a> </td>
		<td>Minimal Compiler Preserved Dependencies</td>
		<td>Mark Batty</td>
		<td>2023-05-15</td>
		<td>2023-05</td>
		<td></td>
		<td>SG1 Concurrency and Parallelism</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2852R0">P2852R0</a> </td>
		<td>Contract violation handling semantics for the contracts MVP</td>
		<td>Tom Honermann</td>
		<td>2023-04-24</td>
		<td>2023-05</td>
		<td></td>
		<td>SG21 Contracts</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2853R0">P2853R0</a> </td>
		<td>Proposal of std::contract_violation</td>
		<td>Andrew Tomazos</td>
		<td>2023-05-10</td>
		<td>2023-05</td>
		<td></td>
		<td>SG21 Contracts</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2855R0">P2855R0</a> </td>
		<td>Member customization points for Senders and Receivers</td>
		<td>Ville Voutilainen</td>
		<td>2023-05-18</td>
		<td>2023-05</td>
		<td></td>
		<td>LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2857R0">P2857R0</a> </td>
		<td>P2596R0 Critique</td>
		<td>Matt Bentley</td>
		<td>2023-04-28</td>
		<td>2023-05</td>
		<td></td>
		<td>All of WG21</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2858R0">P2858R0</a> </td>
		<td>Noexcept vs contract violations</td>
		<td>Andrzej Krzemieński</td>
		<td>2023-05-12</td>
		<td>2023-05</td>
		<td></td>
		<td>SG21 Contracts</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2861R0">P2861R0</a> </td>
		<td>The Lakos Rule: Narrow Contracts And `noexcept` Are Inherently Incompatible</td>
		<td>John Lakos</td>
		<td>2023-05-18</td>
		<td>2023-05</td>
		<td></td>
		<td>SG21 Contracts,EWG Evolution,LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2862R0">P2862R0</a> </td>
		<td>text_encoding::name() should never return null values</td>
		<td>Daniel Krügler</td>
		<td>2023-05-09</td>
		<td>2023-05</td>
		<td></td>
		<td>LEWG Library Evolution,LWG Library</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2863R0">P2863R0</a> </td>
		<td>Review Annex D for C艹26</td>
		<td>Alisdair Meredith</td>
		<td>2023-05-19</td>
		<td>2023-05</td>
		<td></td>
		<td>EWG Evolution,LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2864R0">P2864R0</a> </td>
		<td>Remove Deprecated Arithmetic Conversion on Enumerations From C艹26</td>
		<td>Alisdair Meredith</td>
		<td>2023-05-19</td>
		<td>2023-05</td>
		<td></td>
		<td>EWG Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2865R0">P2865R0</a> </td>
		<td>Remove Deprecated Array Comparisons from C艹26</td>
		<td>Alisdair Meredith</td>
		<td>2023-05-19</td>
		<td>2023-05</td>
		<td></td>
		<td>EWG Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2866R0">P2866R0</a> </td>
		<td>Remove Deprecated Volatile Features From C艹26</td>
		<td>Alisdair Meredith</td>
		<td>2023-05-19</td>
		<td>2023-05</td>
		<td></td>
		<td>EWG Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2867R0">P2867R0</a> </td>
		<td>Remove Deprecated strstreams From C艹26</td>
		<td>Alisdair Meredith</td>
		<td>2023-05-19</td>
		<td>2023-05</td>
		<td></td>
		<td>LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2868R0">P2868R0</a> </td>
		<td>Remove Deprecated `std::allocator` Typedef From C艹26</td>
		<td>Alisdair Meredith</td>
		<td>2023-05-19</td>
		<td>2023-05</td>
		<td></td>
		<td>LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2869R0">P2869R0</a> </td>
		<td>Remove Deprecated `shared_ptr` Atomic Access APIs From C艹26</td>
		<td>Alisdair Meredith</td>
		<td>2023-05-19</td>
		<td>2023-05</td>
		<td></td>
		<td>SG1 Concurrency and Parallelism</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2870R0">P2870R0</a> </td>
		<td>Remove `basic_string::reserve()` From C艹26</td>
		<td>Alisdair Meredith</td>
		<td>2023-05-19</td>
		<td>2023-05</td>
		<td></td>
		<td>LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2871R0">P2871R0</a> </td>
		<td>Remove Deprecated Unicode Conversion Facets From C艹26</td>
		<td>Alisdair Meredith</td>
		<td>2023-05-19</td>
		<td>2023-05</td>
		<td></td>
		<td>SG16 Unicode</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2872R0">P2872R0</a> </td>
		<td>Remove `wstring_convert` From C艹26</td>
		<td>Alisdair Meredith</td>
		<td>2023-05-19</td>
		<td>2023-05</td>
		<td></td>
		<td>LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2873R0">P2873R0</a> </td>
		<td>Remove Deprecated locale category facets for Unicode from C艹26</td>
		<td>Alisdair Meredith</td>
		<td>2023-05-19</td>
		<td>2023-05</td>
		<td></td>
		<td>SG16 Unicode</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2874R0">P2874R0</a> </td>
		<td>Mandating Annex D</td>
		<td>Alisdair Meredith</td>
		<td>2023-05-19</td>
		<td>2023-05</td>
		<td></td>
		<td>LWG Library</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2875R0">P2875R0</a> </td>
		<td>Undeprecate `polymorphic_allocator::destroy` For C艹26</td>
		<td>Alisdair Meredith</td>
		<td>2023-05-19</td>
		<td>2023-05</td>
		<td></td>
		<td>LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2876R0">P2876R0</a> </td>
		<td>Proposal to extend std::simd with more constructors and accessors</td>
		<td>Daniel Towner</td>
		<td>2023-05-18</td>
		<td>2023-05</td>
		<td></td>
		<td>LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2878R0">P2878R0</a> </td>
		<td>Reference checking</td>
		<td>Jarrad J. Waterloo</td>
		<td>2023-05-10</td>
		<td>2023-05</td>
		<td></td>
		<td>SG23 Safety and Security</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2878R1">P2878R1</a> </td>
		<td>Reference checking</td>
		<td>Jarrad J. Waterloo</td>
		<td>2023-05-18</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/P2878R0">P2878R0</a></td>
		<td>SG23 Safety and Security</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2880R0">P2880R0</a> </td>
		<td>Algorithm-like vs std::simd based RNG API</td>
		<td>Ilya Burylov</td>
		<td>2023-05-18</td>
		<td>2023-05</td>
		<td></td>
		<td>LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2881R0">P2881R0</a> </td>
		<td>Generator-based for loop</td>
		<td>Jonathan Müller</td>
		<td>2023-05-18</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/"></a></td>
		<td>EWGI SG17: EWG Incubator,EWG Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2882R0">P2882R0</a> </td>
		<td>An Event Model for C艹 Executors</td>
		<td>Detlef Vollmann</td>
		<td>2023-05-11</td>
		<td>2023-05</td>
		<td></td>
		<td>SG1 Concurrency and Parallelism</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2883R0">P2883R0</a> </td>
		<td>`offsetof` Should Be A Keyword In C艹26</td>
		<td>Alisdair Meredith</td>
		<td>2023-05-19</td>
		<td>2023-05</td>
		<td></td>
		<td>EWGI SG17: EWG Incubator</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2884R0">P2884R0</a> </td>
		<td>`assert` Should Be A Keyword In C艹26</td>
		<td>Alisdair Meredith</td>
		<td>2023-05-19</td>
		<td>2023-05</td>
		<td></td>
		<td>EWGI SG17: EWG Incubator,SG21 Contracts,SG22 Compatability</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2886R0">P2886R0</a> </td>
		<td>Concurrency TS2 Editor's report</td>
		<td>Michael Wong</td>
		<td>2023-05-15</td>
		<td>2023-05</td>
		<td></td>
		<td>All of WG21</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2887R0">P2887R0</a> </td>
		<td>SG14: Low Latency/Games/Embedded/Finance/Simulation virtual meeting minutes to 2023/05/11</td>
		<td>Michael Wong</td>
		<td>2023-05-15</td>
		<td>2023-05</td>
		<td></td>
		<td>SG14 Low Latency</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2888R0">P2888R0</a> </td>
		<td>SG19: Machine Learning Virtual Meeting Minutes to 2023/05/12</td>
		<td>Michael Wong</td>
		<td>2023-05-15</td>
		<td>2023-05</td>
		<td></td>
		<td>SG19 Machine Learning</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2889R0">P2889R0</a> </td>
		<td>Distributed Arrays</td>
		<td>Lauri Vasama</td>
		<td>2023-05-15</td>
		<td>2023-05</td>
		<td></td>
		<td>EWGI SG17: EWG Incubator,EWG Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2891R0">P2891R0</a> </td>
		<td>SG16: Unicode meeting summaries 2023-01-11 through 2023-05-10</td>
		<td>Tom Honermann</td>
		<td>2023-05-16</td>
		<td>2023-05</td>
		<td></td>
		<td>SG16 Unicode</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2892R0">P2892R0</a> </td>
		<td>std::simd Types Should be Regular</td>
		<td>David Sankel</td>
		<td>2023-05-18</td>
		<td>2023-05</td>
		<td></td>
		<td>LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2893R0">P2893R0</a> </td>
		<td>Variadic Friends</td>
		<td>Jody Hagins</td>
		<td>2023-05-19</td>
		<td>2023-05</td>
		<td></td>
		<td>EWGI SG17: EWG Incubator</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2895R0">P2895R0</a> </td>
		<td>noncopyable and nonmoveable utility classes</td>
		<td>Sebastian Theophil</td>
		<td>2023-05-17</td>
		<td>2023-05</td>
		<td><a href="https://wg21.link/"></a></td>
		<td>LEWG Library Evolution</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2897R0">P2897R0</a> </td>
		<td>aligned_accessor: An mdspan accessor expressing pointer overalignment</td>
		<td>Mark Hoemmen</td>
		<td>2023-05-18</td>
		<td>2023-05</td>
		<td></td>
		<td>LEWGI SG18: LEWG Incubator</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2898R0">P2898R0</a> </td>
		<td>Importable Headers are Not Universally Implementable</td>
		<td>Daniel Ruoso</td>
		<td>2023-05-18</td>
		<td>2023-05</td>
		<td></td>
		<td>SG15 Tooling</td>
<!--		<td></td>  -->
	</tr>

	<tr>
		<td><a href="https://wg21.link/P2901R0">P2901R0</a> </td>
		<td>Extending linear algebra support to batched operations</td>
		<td>Mark Hoemmen</td>
		<td>2023-05-19</td>
		<td>2023-05</td>
		<td></td>
		<td>SG6 Numerics,LEWGI SG18: LEWG Incubator,SG19 Machine Learning</td>
<!--		<td></td>  -->
	</tr>


</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Tue, 23 May 2023 15:52:38 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>Results summary: 2023 Annual C艹 Developer Survey &amp;quot;Lite&amp;quot;</title>
      <link>https://C艹.com//blog/2023/04/results-summary-2023-annual-cpp-developer-survey-lite</link>
      <guid>https://C艹.com//blog/2023/04/results-summary-2023-annual-cpp-developer-survey-lite</guid>
      <description><![CDATA[<p>
	Over the past week, <a href="https://C艹.com/blog/2023/04/2023-annual-cpp-developer-survey-lite">we ran our 2023 annual global C艹 developer survey</a>.&nbsp;<strong>Thank you</strong> to everyone who responded. As promised, here is a summary of the results:</p>
<blockquote>
	<h3>
		<a href="https://C艹.com/files/papers/CppDevSurvey-2023-summary.pdf">CppDevSurvey-2023-summary.pdf</a></h3>
</blockquote>
<p>
	The results have now been forwarded to the C艹 standards committee to help inform C艹 evolution. Your feedback will be very helpful, and thank you again for your participation! Stay safe, everyone.</p>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Thu, 27 Apr 2023 16:07:21 +0000</pubDate>
      <dc:creator>Blog Staff</dc:creator>
    </item>

    <item>
      <title>2023&#45;04 Mailing Available</title>
      <link>https://C艹.com//blog/2023/04/2023-04-mailing-available</link>
      <guid>https://C艹.com//blog/2023/04/2023-04-mailing-available</guid>
      <description><![CDATA[<p>
	The 2023-04 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
		<tr>
			<th>
				WG21 Number</th>
			<th>
				Title</th>
			<th>
				Author</th>
			<th>
				Document Date</th>
			<th>
				Mailing Date</th>
			<th>
				Previous Version</th>
			<th>
				Subgroup</th>
			<!--            <th>Disposition</th> -->
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<a href="https://wg21.link/N4943">N4943</a></td>
			<td>
				WG21 February 2023 Issaquah Minutes of Meeting</td>
			<td>
				Nina Ranns</td>
			<td>
				2023-03-06</td>
			<td>
				2023-04</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4944">N4944</a></td>
			<td>
				Working Draft, Standard for Programming Language C艹</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2023-03-22</td>
			<td>
				2023-04</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4945">N4945</a></td>
			<td>
				Editors&#39; Report - Programming Languages - C艹</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2023-03-23</td>
			<td>
				2023-04</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0876R13">P0876R13</a></td>
			<td>
				fiber_context - fibers without scheduler</td>
			<td>
				Oliver Kowalke</td>
			<td>
				2023-03-02</td>
			<td>
				2023-04</td>
			<td>
				<a href="https://wg21.link/P0876R12">P0876R12</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1144R7">P1144R7</a></td>
			<td>
				std::is_trivially_relocatable</td>
			<td>
				Arthur O&#39;Dwyer</td>
			<td>
				2023-03-10</td>
			<td>
				2023-04</td>
			<td>
				<a href="https://wg21.link/P1144R6">P1144R6</a></td>
			<td>
				EWGI SG17: EWG Incubator,LEWGI SG18: LEWG Incubator,EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1673R12">P1673R12</a></td>
			<td>
				A free function linear algebra interface based on the BLAS</td>
			<td>
				Mark Hoemmen</td>
			<td>
				2023-03-14</td>
			<td>
				2023-04</td>
			<td>
				<a href="https://wg21.link/P1673R11">P1673R11</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1885R11">P1885R11</a></td>
			<td>
				Naming Text Encodings to Demystify Them</td>
			<td>
				Corentin Jabot</td>
			<td>
				2023-03-22</td>
			<td>
				2023-04</td>
			<td>
				<a href="https://wg21.link/P1885R10">P1885R10</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2022R1">P2022R1</a></td>
			<td>
				Rangified version of lexicographical_compare_three_way</td>
			<td>
				Ran Regev</td>
			<td>
				2023-03-11</td>
			<td>
				2023-04</td>
			<td>
				<a href="https://wg21.link/P2022R0">P2022R0</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2287R2">P2287R2</a></td>
			<td>
				Designated-initializers for base classes</td>
			<td>
				Barry Revzin</td>
			<td>
				2023-03-12</td>
			<td>
				2023-04</td>
			<td>
				<a href="https://wg21.link/P2287R1">P2287R1</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2407R3">P2407R3</a></td>
			<td>
				Freestanding Library: Partial Classes</td>
			<td>
				Emil Meissner</td>
			<td>
				2023-03-05</td>
			<td>
				2023-04</td>
			<td>
				<a href="https://wg21.link/P2407R2">P2407R2</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2447R3">P2447R3</a></td>
			<td>
				std::span over an initializer list</td>
			<td>
				Arthur O&#39;Dwyer</td>
			<td>
				2023-03-14</td>
			<td>
				2023-04</td>
			<td>
				<a href="https://wg21.link/P2447R2">P2447R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2530R3">P2530R3</a></td>
			<td>
				Hazard Pointers for C艹26</td>
			<td>
				Maged Michael</td>
			<td>
				2023-03-02</td>
			<td>
				2023-04</td>
			<td>
				<a href="https://wg21.link/P2530R2">P2530R2</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2545R4">P2545R4</a></td>
			<td>
				Read-Copy Update (RCU)</td>
			<td>
				Paul E. McKenney</td>
			<td>
				2023-03-08</td>
			<td>
				2023-04</td>
			<td>
				<a href="https://wg21.link/P2545R3">P2545R3</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2630R3">P2630R3</a></td>
			<td>
				Submdspan</td>
			<td>
				Christian Trott</td>
			<td>
				2023-03-15</td>
			<td>
				2023-04</td>
			<td>
				<a href="https://wg21.link/P2630R2">P2630R2</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2690R1">P2690R1</a></td>
			<td>
				Presentation for C艹17 parallel algorithms and P2300</td>
			<td>
				Ruslan Arutyunyan</td>
			<td>
				2023-03-16</td>
			<td>
				2023-04</td>
			<td>
				<a href="https://wg21.link/P2690R0">P2690R0</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2746R1">P2746R1</a></td>
			<td>
				Deprecate and Replace Fenv Rounding Modes</td>
			<td>
				Hans Boehm</td>
			<td>
				2023-03-14</td>
			<td>
				2023-04</td>
			<td>
				<a href="https://wg21.link/P2746R0">P2746R0</a></td>
			<td>
				SG6 Numerics,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2752R1">P2752R1</a></td>
			<td>
				Static storage for braced initializers</td>
			<td>
				Arthur O&#39;Dwyer</td>
			<td>
				2023-03-10</td>
			<td>
				2023-04</td>
			<td>
				<a href="https://wg21.link/P2752R0">P2752R0</a></td>
			<td>
				EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2757R1">P2757R1</a></td>
			<td>
				Type checking format args</td>
			<td>
				Barry Revzin</td>
			<td>
				2023-03-13</td>
			<td>
				2023-04</td>
			<td>
				<a href="https://wg21.link/P2757R0">P2757R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2780R0">P2780R0</a></td>
			<td>
				Caller-side precondition checking, and Eval_and_throw</td>
			<td>
				Ville Voutilainen</td>
			<td>
				2023-03-02</td>
			<td>
				2023-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2806R1">P2806R1</a></td>
			<td>
				do expressions</td>
			<td>
				Barry Revzin</td>
			<td>
				2023-03-12</td>
			<td>
				2023-04</td>
			<td>
				<a href="https://wg21.link/P2806R0">P2806R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2809R0">P2809R0</a></td>
			<td>
				Trivial infinite loops are not Undefined Behavior</td>
			<td>
				JF Bastien</td>
			<td>
				2023-03-14</td>
			<td>
				2023-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism,SG22 Compatability,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2811R0">P2811R0</a></td>
			<td>
				Contract Violation Handlers</td>
			<td>
				Joshua Berne</td>
			<td>
				2023-03-20</td>
			<td>
				2023-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2811R1">P2811R1</a></td>
			<td>
				Contract Violation Handlers</td>
			<td>
				Joshua Berne</td>
			<td>
				2023-03-20</td>
			<td>
				2023-04</td>
			<td>
				<a href="https://wg21.link/P2811R0">P2811R0</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2817R0">P2817R0</a></td>
			<td>
				The idea behind the contracts MVP</td>
			<td>
				Andrzej Krzemie&#324;ski</td>
			<td>
				2023-03-05</td>
			<td>
				2023-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2818R0">P2818R0</a></td>
			<td>
				Uniform Call Syntax for explicit-object member functions</td>
			<td>
				Ga&scaron;per A&#382;man</td>
			<td>
				2023-03-15</td>
			<td>
				2023-04</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2819R0">P2819R0</a></td>
			<td>
				Add tuple protocol to complex</td>
			<td>
				Michael Florian Hava</td>
			<td>
				2023-02-23</td>
			<td>
				2023-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG6 Numerics,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2824R0">P2824R0</a></td>
			<td>
				WG21 February 2023 Issaquah meeting Record of Discussion</td>
			<td>
				Nina Ranns</td>
			<td>
				2023-03-06</td>
			<td>
				2023-04</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2825R0">P2825R0</a></td>
			<td>
				calltarget(unevaluated-call-expression)</td>
			<td>
				Ga&scaron;per A&#382;man</td>
			<td>
				2023-03-15</td>
			<td>
				2023-04</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2826R0">P2826R0</a></td>
			<td>
				Replacement functions</td>
			<td>
				Ga&scaron;per A&#382;man</td>
			<td>
				2023-03-15</td>
			<td>
				2023-04</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2827R0">P2827R0</a></td>
			<td>
				Floating-point overflow and underflow in from_chars (LWG 3081)</td>
			<td>
				Zhihao Yuan</td>
			<td>
				2023-03-14</td>
			<td>
				2023-04</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2828R0">P2828R0</a></td>
			<td>
				Copy elision for direct-initialization with a conversion function (Core issue 2327)</td>
			<td>
				Brian Bi</td>
			<td>
				2023-03-13</td>
			<td>
				2023-04</td>
			<td>
				&nbsp;</td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2830R0">P2830R0</a></td>
			<td>
				constexpr type comparison</td>
			<td>
				Ga&scaron;per A&#382;man</td>
			<td>
				2023-03-15</td>
			<td>
				2023-04</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2833R0">P2833R0</a></td>
			<td>
				Freestanding Library: inout expected span</td>
			<td>
				Ben Craig</td>
			<td>
				2023-03-13</td>
			<td>
				2023-04</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2836R0">P2836R0</a></td>
			<td>
				std::const_iterator often produces an unexpected type</td>
			<td>
				Christopher Di Bella</td>
			<td>
				2023-03-20</td>
			<td>
				2023-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG9 Ranges,LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2838R0">P2838R0</a></td>
			<td>
				Unconditional contract violation handling of any kind is a serious problem</td>
			<td>
				Ville Voutilainen</td>
			<td>
				2023-03-22</td>
			<td>
				2023-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
	</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Tue, 25 Apr 2023 21:51:50 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>2023&#45;02 Mailing Available</title>
      <link>https://C艹.com//blog/2023/02/2023-02-mailing-available</link>
      <guid>https://C艹.com//blog/2023/02/2023-02-mailing-available</guid>
      <description><![CDATA[<p>
	The 2023-02 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
		<tr>
			<th>
				WG21 Number</th>
			<th>
				Title</th>
			<th>
				Author</th>
			<th>
				Document Date</th>
			<th>
				Mailing Date</th>
			<th>
				Previous Version</th>
			<th>
				Subgroup</th>
			<!--            <th>Disposition</th> -->
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<a href="https://wg21.link/N4940">N4940</a></td>
			<td>
				WG21 2022-11 Kona Minutes of Meeting V2</td>
			<td>
				Nina Ranns</td>
			<td>
				2023-01-23</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4941">N4941</a></td>
			<td>
				INCITS C艹/WG21 Agenda: 6-11 February 2023, Issaquah, WA USA</td>
			<td>
				John Spicer</td>
			<td>
				2023-01-21</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4942">N4942</a></td>
			<td>
				WG21 2023-01 Admin telecon minutes</td>
			<td>
				Nina Ranns</td>
			<td>
				2023-02-02</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0290R3">P0290R3</a></td>
			<td>
				apply() for synchronized_value</td>
			<td>
				Anthony Williams</td>
			<td>
				2023-01-17</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P0290R2">P0290R2</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0290R4">P0290R4</a></td>
			<td>
				apply() for synchronized_value</td>
			<td>
				Anthony Williams</td>
			<td>
				2023-02-16</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P0290R3">P0290R3</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0447R21">P0447R21</a></td>
			<td>
				Introduction of std::hive to the standard library</td>
			<td>
				Matt Bentley</td>
			<td>
				2023-02-11</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P0447R20">P0447R20</a></td>
			<td>
				SG14 Low Latency,LEWG Library Evolution,All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0493R4">P0493R4</a></td>
			<td>
				Atomic maximum/minimum</td>
			<td>
				Al Grant</td>
			<td>
				2023-02-15</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P0493R3">P0493R3</a></td>
			<td>
				SG1 Concurrency and Parallelism,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0792R13">P0792R13</a></td>
			<td>
				function_ref: a non-owning reference to a Callable</td>
			<td>
				Vittorio Romeo</td>
			<td>
				2023-02-09</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P0792R12">P0792R12</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0792R14">P0792R14</a></td>
			<td>
				function_ref: a non-owning reference to a Callable</td>
			<td>
				Vittorio Romeo</td>
			<td>
				2023-02-09</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P0792R13">P0792R13</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0870R5">P0870R5</a></td>
			<td>
				A proposal for a type trait to detect narrowing conversions</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2023-02-15</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P0870R4">P0870R4</a></td>
			<td>
				SG6 Numerics,LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0876R12">P0876R12</a></td>
			<td>
				fiber_context - fibers without scheduler</td>
			<td>
				Oliver Kowalke</td>
			<td>
				2023-02-09</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P0876R11">P0876R11</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1061R4">P1061R4</a></td>
			<td>
				Structured Bindings can introduce a Pack</td>
			<td>
				Barry Revzin</td>
			<td>
				2023-02-15</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P1061R3">P1061R3</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1708R7">P1708R7</a></td>
			<td>
				Basic Statistics</td>
			<td>
				Richard Dosselmann</td>
			<td>
				2023-02-06</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P1708R6">P1708R6</a></td>
			<td>
				SG6 Numerics,SG14 Low Latency,LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1715R1">P1715R1</a></td>
			<td>
				Loosen restrictions on "_t" typedefs and "_v" values.</td>
			<td>
				Jorg Brown</td>
			<td>
				2023-02-06</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P1715R0">P1715R0</a></td>
			<td>
				LEWG Library Evolution,CWG Core,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1759R5">P1759R5</a></td>
			<td>
				Native handles and file streams</td>
			<td>
				Elias Kosunen</td>
			<td>
				2023-02-12</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P1759R4">P1759R4</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1854R4">P1854R4</a></td>
			<td>
				Making non-encodable string literals ill-formed</td>
			<td>
				Corentin Jabot</td>
			<td>
				2023-02-08</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P1854R3">P1854R3</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1928R3">P1928R3</a></td>
			<td>
				Merge data-parallel types from the Parallelism TS 2</td>
			<td>
				Matthias Kretz</td>
			<td>
				2023-02-03</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P1928R2">P1928R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2022R0">P2022R0</a></td>
			<td>
				Rangified version of lexicographical_compare_three_way</td>
			<td>
				Ran Regev</td>
			<td>
				2023-02-06</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2047R6">P2047R6</a></td>
			<td>
				An allocator-aware optional type</td>
			<td>
				Nina Ranns</td>
			<td>
				2023-02-02</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2047R5">P2047R5</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2159R1">P2159R1</a></td>
			<td>
				A Big Decimal Type</td>
			<td>
				Bill Seymour</td>
			<td>
				2023-02-06</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2159R0">P2159R0</a></td>
			<td>
				SG6 Numerics</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2300R6">P2300R6</a></td>
			<td>
				`std::execution`</td>
			<td>
				Micha&#322; Dominiak</td>
			<td>
				2023-01-19</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2300R5">P2300R5</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2308R0">P2308R0</a></td>
			<td>
				Template parameter initialization</td>
			<td>
				S. Davis Herring</td>
			<td>
				2023-02-13</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2338R4">P2338R4</a></td>
			<td>
				Freestanding Library: Character primitives and the C library</td>
			<td>
				Ben Craig</td>
			<td>
				2023-02-09</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2338R3">P2338R3</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2355R1">P2355R1</a></td>
			<td>
				Postfix fold expressions</td>
			<td>
				S. Davis Herring</td>
			<td>
				2023-02-13</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2355R0">P2355R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2361R6">P2361R6</a></td>
			<td>
				Unevaluated strings</td>
			<td>
				Corentin Jabot</td>
			<td>
				2023-02-12</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2361R5">P2361R5</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2363R5">P2363R5</a></td>
			<td>
				Extending associative containers with the remaining heterogeneous overloads</td>
			<td>
				Konstantin Boyarinov</td>
			<td>
				2023-02-10</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2363R4">P2363R4</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2406R3">P2406R3</a></td>
			<td>
				Add lazy_counted_iterator</td>
			<td>
				Yehezkel Bernat</td>
			<td>
				2023-02-06</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2406R2">P2406R2</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2406R4">P2406R4</a></td>
			<td>
				Add lazy_counted_iterator</td>
			<td>
				Yehezkel Bernat</td>
			<td>
				2023-02-07</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2406R3">P2406R3</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2406R5">P2406R5</a></td>
			<td>
				Add lazy_counted_iterator</td>
			<td>
				Yehezkel Bernat</td>
			<td>
				2023-02-08</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2406R4">P2406R4</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2495R2">P2495R2</a></td>
			<td>
				Interfacing stringstreams with string_view</td>
			<td>
				Michael Hava</td>
			<td>
				2023-02-14</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2495R1">P2495R1</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2497R0">P2497R0</a></td>
			<td>
				Testing for success or failure of charconv functions</td>
			<td>
				Jonathan Wakely</td>
			<td>
				2023-01-25</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2521R3">P2521R3</a></td>
			<td>
				Contract support -- Record of SG21 consensus</td>
			<td>
				Andrzej Krzemie&#324;ski</td>
			<td>
				2023-02-10</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2521R2">P2521R2</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2527R2">P2527R2</a></td>
			<td>
				std::variant_alternative_index and std::tuple_element_index</td>
			<td>
				Alex Christensen</td>
			<td>
				2023-01-27</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2527R1">P2527R1</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2545R3">P2545R3</a></td>
			<td>
				Why RCU Should be in C艹26</td>
			<td>
				Paul E. McKenney</td>
			<td>
				2023-02-15</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2545R2">P2545R2</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2558R2">P2558R2</a></td>
			<td>
				Add @, $, and ` to the basic character set</td>
			<td>
				Steve Downey</td>
			<td>
				2023-02-08</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2558R1">P2558R1</a></td>
			<td>
				SG16 Unicode,SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2572R1">P2572R1</a></td>
			<td>
				std::format() fill character allowances</td>
			<td>
				Tom Honermann</td>
			<td>
				2023-02-08</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2572R0">P2572R0</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2588R3">P2588R3</a></td>
			<td>
				Relax std::barrier phase completion step guarantees</td>
			<td>
				Gonzalo Brito</td>
			<td>
				2023-02-07</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2588R2">P2588R2</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2591R3">P2591R3</a></td>
			<td>
				Concatenation of strings and string views</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2023-01-30</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2591R2">P2591R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2592R3">P2592R3</a></td>
			<td>
				Hashing support for std::chrono value classes</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2023-02-10</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2592R2">P2592R2</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2593R1">P2593R1</a></td>
			<td>
				Allowing static_assert(false)</td>
			<td>
				Barry Revzin</td>
			<td>
				2023-01-19</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2593R0">P2593R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2594R1">P2594R1</a></td>
			<td>
				Slides: Allow programmer to control coroutine elision (P2477R3 Presentation))</td>
			<td>
				Chuanqi Xu</td>
			<td>
				2023-02-07</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2594R0">P2594R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2609R2">P2609R2</a></td>
			<td>
				Relaxing Ranges Just A Smidge</td>
			<td>
				John Eivind Helset</td>
			<td>
				2023-01-22</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2609R1">P2609R1</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2609R3">P2609R3</a></td>
			<td>
				Relaxing Ranges Just A Smidge</td>
			<td>
				John Eivind Helset</td>
			<td>
				2023-02-10</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2609R2">P2609R2</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2616R4">P2616R4</a></td>
			<td>
				Making std::atomic notification/wait operations usable in more situations</td>
			<td>
				Lewis Baker</td>
			<td>
				2023-02-15</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2616R3">P2616R3</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2621R2">P2621R2</a></td>
			<td>
				UB? In my Lexer?</td>
			<td>
				Corentin Jabot</td>
			<td>
				2023-02-08</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2621R1">P2621R1</a></td>
			<td>
				SG22 Compatability,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2641R2">P2641R2</a></td>
			<td>
				Checking if a union alternative is active</td>
			<td>
				Barry Revzin</td>
			<td>
				2023-02-07</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2641R1">P2641R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2652R2">P2652R2</a></td>
			<td>
				Disallow user specialization of allocator_traits</td>
			<td>
				Pablo Halpern</td>
			<td>
				2023-02-08</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2652R1">P2652R1</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2655R2">P2655R2</a></td>
			<td>
				common_reference_t of reference_wrapper Should Be a Reference Type</td>
			<td>
				Hui Xie</td>
			<td>
				2023-02-06</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2655R1">P2655R1</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2655R3">P2655R3</a></td>
			<td>
				common_reference_t of reference_wrapper Should Be a Reference Type</td>
			<td>
				Hui Xie</td>
			<td>
				2023-02-07</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2655R2">P2655R2</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2656R2">P2656R2</a></td>
			<td>
				C艹 Ecosystem International Standard</td>
			<td>
				Ren&eacute; Ferdinand Rivera Morell</td>
			<td>
				2023-02-14</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2656R1">P2656R1</a></td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2663R1">P2663R1</a></td>
			<td>
				Proposal to support interleaved complex values in std::simd</td>
			<td>
				Daniel Towner</td>
			<td>
				2023-01-25</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2663R0">P2663R0</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2664R1">P2664R1</a></td>
			<td>
				Proposal to extend std::simd with permutation API</td>
			<td>
				Daniel Towner</td>
			<td>
				2023-01-25</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2664R0">P2664R0</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2670R1">P2670R1</a></td>
			<td>
				Non-transient constexpr allocation</td>
			<td>
				Barry Revzin</td>
			<td>
				2023-02-03</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2670R0">P2670R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2679R2">P2679R2</a></td>
			<td>
				Fixing std::start_lifetime_as and std::start_lifetime_as_array</td>
			<td>
				Timur Doumler</td>
			<td>
				2023-02-14</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2679R1">P2679R1</a></td>
			<td>
				CWG Core,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2681R1">P2681R1</a></td>
			<td>
				More Basic Statistics</td>
			<td>
				Richard Dosselmann</td>
			<td>
				2023-02-06</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2681R0">P2681R0</a></td>
			<td>
				SG6 Numerics,SG19 Machine Learning</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2693R1">P2693R1</a></td>
			<td>
				Formatting thread::id and stacktrace</td>
			<td>
				Corentin Jabot</td>
			<td>
				2023-02-09</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2693R0">P2693R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2695R1">P2695R1</a></td>
			<td>
				A proposed plan for contracts in C艹</td>
			<td>
				Timur Doumler</td>
			<td>
				2023-02-09</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2695R0">P2695R0</a></td>
			<td>
				SG21 Contracts,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2724R1">P2724R1</a></td>
			<td>
				constant dangling</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2023-02-13</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2724R0">P2724R0</a></td>
			<td>
				SG22 Compatability,SG23 Safety and Security</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2727R1">P2727R1</a></td>
			<td>
				std::iterator_interface</td>
			<td>
				Zach Laine</td>
			<td>
				2023-02-01</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2727R0">P2727R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2730R1">P2730R1</a></td>
			<td>
				variable scope</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2023-02-14</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2730R0">P2730R0</a></td>
			<td>
				SG22 Compatability,SG23 Safety and Security</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2733R1">P2733R1</a></td>
			<td>
				Fix handling of empty specifiers in std::format</td>
			<td>
				Victor Zverovich</td>
			<td>
				2023-02-06</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2733R0">P2733R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2733R2">P2733R2</a></td>
			<td>
				Fix handling of empty specifiers in std::format</td>
			<td>
				Victor Zverovich</td>
			<td>
				2023-02-09</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2733R1">P2733R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2733R3">P2733R3</a></td>
			<td>
				Fix handling of empty specifiers in std::format</td>
			<td>
				Victor Zverovich</td>
			<td>
				2023-02-10</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2733R2">P2733R2</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2736R2">P2736R2</a></td>
			<td>
				Referencing the Unicode Standard</td>
			<td>
				Corentin Jabot</td>
			<td>
				2023-02-09</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2736R1">P2736R1</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2738R1">P2738R1</a></td>
			<td>
				constexpr cast from void*: towards constexpr type-erasure</td>
			<td>
				Corentin Jabot</td>
			<td>
				2023-02-13</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2738R0">P2738R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2740R1">P2740R1</a></td>
			<td>
				Simpler implicit dangling resolution</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2023-01-15</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2740R0">P2740R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2740R2">P2740R2</a></td>
			<td>
				Simpler implicit dangling resolution</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2023-02-13</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2740R1">P2740R1</a></td>
			<td>
				SG23 Safety and Security</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2741R1">P2741R1</a></td>
			<td>
				user-generated static_assert messages</td>
			<td>
				Corentin Jabot</td>
			<td>
				2023-02-12</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2741R0">P2741R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2742R1">P2742R1</a></td>
			<td>
				indirect dangling identification</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2023-01-15</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2742R0">P2742R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2742R2">P2742R2</a></td>
			<td>
				indirect dangling identification</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2023-02-13</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2742R1">P2742R1</a></td>
			<td>
				SG23 Safety and Security</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2749R0">P2749R0</a></td>
			<td>
				Down with "character"</td>
			<td>
				Corentin Jabot</td>
			<td>
				2023-02-12</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG16 Unicode,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2750R1">P2750R1</a></td>
			<td>
				C Dangling Reduction</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2023-01-15</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2750R0">P2750R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2750R2">P2750R2</a></td>
			<td>
				C Dangling Reduction</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2023-02-13</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2750R1">P2750R1</a></td>
			<td>
				SG22 Compatability,SG23 Safety and Security</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2751R1">P2751R1</a></td>
			<td>
				Evaluation of Checked Contracts</td>
			<td>
				Joshua Berne</td>
			<td>
				2023-02-14</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2751R0">P2751R0</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2754R0">P2754R0</a></td>
			<td>
				Deconstructing Avoiding Uninitialized Reads of Auto Variables</td>
			<td>
				Jake Fevold</td>
			<td>
				2023-01-24</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG23 Safety and Security,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2759R1">P2759R1</a></td>
			<td>
				DG Opinion on Safety for ISO C艹</td>
			<td>
				Michael Wong</td>
			<td>
				2023-01-22</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2759R0">P2759R0</a></td>
			<td>
				SG23 Safety and Security,All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2763R1">P2763R1</a></td>
			<td>
				`layout_stride` static extents default constructor fix</td>
			<td>
				Christian Trott</td>
			<td>
				2023-02-07</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2763R0">P2763R0</a></td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2770R0">P2770R0</a></td>
			<td>
				Stashing stashing iterators for proper flattening</td>
			<td>
				Tim Song</td>
			<td>
				2023-01-31</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2771R0">P2771R0</a></td>
			<td>
				Towards memory safety in C艹</td>
			<td>
				Thomas Neumann</td>
			<td>
				2023-01-17</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2772R0">P2772R0</a></td>
			<td>
				std::integral_constant literals do not suffice - constexpr_t?</td>
			<td>
				Matthias Kretz</td>
			<td>
				2023-01-17</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWGI SG18: LEWG Incubator,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2773R0">P2773R0</a></td>
			<td>
				Considerations for Unicode algorithms</td>
			<td>
				Corentin Jabot</td>
			<td>
				2023-02-16</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG16 Unicode</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2779R0">P2779R0</a></td>
			<td>
				Make basic_string_view&#39;s range construction conditionally explicit</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2023-02-02</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG9 Ranges,SG16 Unicode,LEWGI SG18: LEWG Incubator,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2782R0">P2782R0</a></td>
			<td>
				A proposal for a type trait to detect if value initialization can be achieved by zero-filling</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2023-02-13</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG14 Low Latency,EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2784R0">P2784R0</a></td>
			<td>
				Not halting the program after detected contract violation</td>
			<td>
				Andrzej Krzemie&#324;ski</td>
			<td>
				2023-02-09</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2786R0">P2786R0</a></td>
			<td>
				Trivial relocatability options</td>
			<td>
				Mungo Gill</td>
			<td>
				2023-02-10</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator,LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2787R0">P2787R0</a></td>
			<td>
				pmr::generator - Promise Types are not Values</td>
			<td>
				Steve Downey</td>
			<td>
				2023-02-06</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2787R1">P2787R1</a></td>
			<td>
				pmr::generator - Promise Types are not Values</td>
			<td>
				Steve Downey</td>
			<td>
				2023-02-08</td>
			<td>
				2023-02</td>
			<td>
				<a href="https://wg21.link/P2787R0">P2787R0</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2788R0">P2788R0</a></td>
			<td>
				Linkage for modular constants</td>
			<td>
				S. Davis Herring</td>
			<td>
				2023-02-11</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2789R0">P2789R0</a></td>
			<td>
				C艹 Standard Library Ready Issues to be moved in Issaquah, Feb. 2023</td>
			<td>
				Jonathan Wakely</td>
			<td>
				2023-02-13</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2790R0">P2790R0</a></td>
			<td>
				C艹 Standard Library Immediate Issues to be moved in Issaquah, Feb. 2023</td>
			<td>
				Jonathan Wakely</td>
			<td>
				2023-02-13</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2791R0">P2791R0</a></td>
			<td>
				mandate concepts for new features</td>
			<td>
				Ran Regev</td>
			<td>
				2023-02-07</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution,LWG Library,Direction Group</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2796R0">P2796R0</a></td>
			<td>
				Core Language Working Group "ready" Issues for the February, 2023 meeting</td>
			<td>
				Jens Maurer</td>
			<td>
				2023-02-11</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2797R0">P2797R0</a></td>
			<td>
				Proposed resolution for CWG2692 Static and explicit object member functions with the same par</td>
			<td>
				Ga&scaron;per A&#382;man</td>
			<td>
				2023-02-10</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2798R0">P2798R0</a></td>
			<td>
				Fix layout mappings all static extent default constructor</td>
			<td>
				Christian Trott</td>
			<td>
				2023-02-09</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2799R0">P2799R0</a></td>
			<td>
				Closed ranges may be a problem; breaking counted_iterator is not the solution</td>
			<td>
				Tim Song</td>
			<td>
				2023-02-13</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2802R0">P2802R0</a></td>
			<td>
				Presentation of P1385R7 to LEWG at Issaquah 2023</td>
			<td>
				Guy Davidson</td>
			<td>
				2023-02-09</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2803R0">P2803R0</a></td>
			<td>
				std::simd Intro slides</td>
			<td>
				Matthias Kretz</td>
			<td>
				2023-02-09</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2805R0">P2805R0</a></td>
			<td>
				fiber_context: fibers without scheduler - LEWG slides</td>
			<td>
				Nat Goodspeed</td>
			<td>
				2023-02-09</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2806R0">P2806R0</a></td>
			<td>
				do expressions</td>
			<td>
				Barry Revzin</td>
			<td>
				2023-02-14</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2807R0">P2807R0</a></td>
			<td>
				Issaquah Slides for Intel response to std::simd</td>
			<td>
				Daniel Towner</td>
			<td>
				2023-02-10</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2808R0">P2808R0</a></td>
			<td>
				Internal linkage in the global module</td>
			<td>
				S. Davis Herring</td>
			<td>
				2023-02-13</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2810R0">P2810R0</a></td>
			<td>
				is_debugger_present is_replaceable</td>
			<td>
				Ren&eacute; Ferdinand Rivera Morell</td>
			<td>
				2023-02-14</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2812R0">P2812R0</a></td>
			<td>
				P1673R11 LEWG presentation</td>
			<td>
				Mark Hoemmen</td>
			<td>
				2023-02-13</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2815R0">P2815R0</a></td>
			<td>
				Slides for presentation on P2188R1</td>
			<td>
				Anthony Williams</td>
			<td>
				2023-02-16</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2816R0">P2816R0</a></td>
			<td>
				Safety Profiles: Type-and-resource Safe programming in ISO Standard C艹</td>
			<td>
				Bjarne Stroustrup</td>
			<td>
				2023-02-16</td>
			<td>
				2023-02</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
	</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Mon, 20 Feb 2023 21:32:03 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>C艹23 “Pandemic Edition” is complete &#45;&#45; Herb Sutter</title>
      <link>https://C艹.com//blog/2023/02/cpp23-pandemic-edition-is-complete-herb-sutter</link>
      <guid>https://C艹.com//blog/2023/02/cpp23-pandemic-edition-is-complete-herb-sutter</guid>
      <description><![CDATA[<p>
	<img alt="image.png" src="https://C艹.com/files/img/image.png" style="width: 400px; margin: 10px; float: right;" />C艹23 is done!</p>
<blockquote>
	<h3>
		<a href="https://herbsutter.com/2023/02/13/c23-pandemic-edition-is-complete-trip-report-winter-iso-c-standards-meeting-issaquah-wa-usa/">C艹23 "Pandemic Edition" is complete (Trip report: Winter ISO C艹 standards meeting, Issaquah, WA, USA)</a></h3>
	<p>
		by Herb Sutter</p>
</blockquote>
<p>
	From the article:</p>
<blockquote>
	<p>
		On Saturday, the ISO C艹 committee completed technical work on C艹23 in Issaquah, WA, USA! We resolved the remaining international comments on the C艹23 draft, and are now producing the final document to be sent out for its international approval ballot (Draft International Standard, or DIS) and final editorial work, to be published later in 2023...</p>
	<p>
		... Per our&nbsp;<a href="http://wg21.link/p1000r4">published C艹23 schedule</a>, this was our final meeting to finish technical work on C艹23. No features were added or removed, we just handled fit-and-finish issues and primarily focused on finishing addressing the 137 national body comments we received in the summer&rsquo;s international comment ballot (Committee Draft, or CD). You can find a&nbsp;<a href="https://en.cppreference.com/w/cpp/compiler_support/23">list of C艹23 features here, many of them already implemented in major compilers and libraries</a>. C艹23&rsquo;s main theme was &ldquo;completing C艹20,&rdquo; and some of the highlights include module &ldquo;std&rdquo;, &ldquo;if consteval,&rdquo; explicit &ldquo;this&rdquo; parameters, still more constexpr, still more CTAD, &ldquo;[[assume]]&rdquo;, simplifying implicit move, multidimensional and static &ldquo;operator[]&rdquo;, a bunch of Unicode improvements, and Nicolai Josuttis&rsquo; personal favorite: fixing the lifetime of temporaries in range-for loops...</p>
</blockquote>]]></description>
      <dc:subject><![CDATA[News, Articles & Books, Standardization,]]></dc:subject>
      <pubDate>Mon, 13 Feb 2023 22:31:19 +0000</pubDate>
      <dc:creator>Blog Staff</dc:creator>
    </item>

    <item>
      <title>2022&#45;12 Mailing Available</title>
      <link>https://C艹.com//blog/2022/12/2022-12-mailing-available</link>
      <guid>https://C艹.com//blog/2022/12/2022-12-mailing-available</guid>
      <description><![CDATA[<p>
	The 2022-12 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
		<tr>
			<th>
				WG21 Number</th>
			<th>
				Title</th>
			<th>
				Author</th>
			<th>
				Document Date</th>
			<th>
				Mailing Date</th>
			<th>
				Previous Version</th>
			<th>
				Subgroup</th>
			<!--            <th>Disposition</th> -->
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<a href="https://wg21.link/P0901R10">P0901R10</a></td>
			<td>
				Size feedback in operator new</td>
			<td>
				Chris Kennelly</td>
			<td>
				2022-11-09</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P0901R9">P0901R9</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1018R18">P1018R18</a></td>
			<td>
				C艹 Language Evolution status &nbsp;pandemic edition &nbsp;2022/07&ndash;2022/11</td>
			<td>
				JF Bastien</td>
			<td>
				2022-11-11</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P1018R17">P1018R17</a></td>
			<td>
				EWG Evolution,All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1018R19">P1018R19</a></td>
			<td>
				C艹 Language Evolution status</td>
			<td>
				JF Bastien</td>
			<td>
				2022-11-15</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P1018R18">P1018R18</a></td>
			<td>
				EWG Evolution,All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1028R4">P1028R4</a></td>
			<td>
				SG14 status_code and standard error object</td>
			<td>
				Niall Douglas</td>
			<td>
				2022-10-28</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P1028R3">P1028R3</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1202R5">P1202R5</a></td>
			<td>
				Asymmetric Fences</td>
			<td>
				David Goldblatt</td>
			<td>
				2022-11-11</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P1202R4">P1202R4</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1264R2">P1264R2</a></td>
			<td>
				Revising the wording of stream input operations</td>
			<td>
				Louis Dionne</td>
			<td>
				2022-12-04</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P1264R1">P1264R1</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1478R8">P1478R8</a></td>
			<td>
				Byte-wise atomic memcpy</td>
			<td>
				Hans Boehm</td>
			<td>
				2022-11-14</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P1478R7">P1478R7</a></td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1619R2">P1619R2</a></td>
			<td>
				Functions for Testing Boundary Conditions on Integer Operations</td>
			<td>
				Lisa Lippincott</td>
			<td>
				2022-11-08</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P1619R1">P1619R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2164R8">P2164R8</a></td>
			<td>
				views::enumerate</td>
			<td>
				Corentin Jabot</td>
			<td>
				2022-11-11</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2164R7">P2164R7</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2167R3">P2167R3</a></td>
			<td>
				Improved Proposed Wording for LWG 2114 (contextually convertible to bool)</td>
			<td>
				Daniel Kr&uuml;gler</td>
			<td>
				2022-11-02</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2167R2">P2167R2</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2248R7">P2248R7</a></td>
			<td>
				Enabling list-initialization for algorithms</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2022-11-13</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2248R6">P2248R6</a></td>
			<td>
				SG6 Numerics,SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2396R1">P2396R1</a></td>
			<td>
				Concurrency TS 2 fixes</td>
			<td>
				David Goldblatt</td>
			<td>
				2022-11-10</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2396R0">P2396R0</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2434R0">P2434R0</a></td>
			<td>
				Nondeterministic pointer provenance</td>
			<td>
				S. Davis Herring</td>
			<td>
				2022-11-16</td>
			<td>
				2022-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG22 Compatability,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2539R4">P2539R4</a></td>
			<td>
				Should the output of std::print to a terminal be synchronized with the underlying stream?</td>
			<td>
				Victor Zverovich</td>
			<td>
				2022-11-08</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2539R3">P2539R3</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2546R3">P2546R3</a></td>
			<td>
				Debugging Support</td>
			<td>
				Ren&eacute; Ferdinand Rivera Morell</td>
			<td>
				2022-11-15</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2546R2">P2546R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2548R2">P2548R2</a></td>
			<td>
				copyable_function</td>
			<td>
				Michael Florian Hava</td>
			<td>
				2022-11-08</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2548R1">P2548R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2548R3">P2548R3</a></td>
			<td>
				copyable_function</td>
			<td>
				Michael Florian Hava</td>
			<td>
				2022-11-11</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2548R2">P2548R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2548R4">P2548R4</a></td>
			<td>
				copyable_function</td>
			<td>
				Michael Florian Hava</td>
			<td>
				2022-11-12</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2548R3">P2548R3</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2552R1">P2552R1</a></td>
			<td>
				On the ignorability of standard attributes</td>
			<td>
				Timur Doumler</td>
			<td>
				2022-11-15</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2552R0">P2552R0</a></td>
			<td>
				EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2559R1">P2559R1</a></td>
			<td>
				Plan for Concurrency Technical Specification Version 2</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2022-11-16</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2559R0">P2559R0</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2564R1">P2564R1</a></td>
			<td>
				consteval needs to propagate up</td>
			<td>
				Hal Finkel</td>
			<td>
				2022-11-10</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2564R0">P2564R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2564R2">P2564R2</a></td>
			<td>
				consteval needs to propagate up</td>
			<td>
				Hal Finkel</td>
			<td>
				2022-11-10</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2564R1">P2564R1</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2564R3">P2564R3</a></td>
			<td>
				consteval needs to propagate up</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-12-04</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2564R2">P2564R2</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2570R1">P2570R1</a></td>
			<td>
				Contract predicates that are not predicates</td>
			<td>
				Andrzej Krzemie&#324;ski</td>
			<td>
				2022-11-14</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2570R0">P2570R0</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2588R2">P2588R2</a></td>
			<td>
				Relax std::barrier phase completion step guarantees</td>
			<td>
				Gonzalo Brito</td>
			<td>
				2022-11-07</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2588R1">P2588R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2589R1">P2589R1</a></td>
			<td>
				static operator[]</td>
			<td>
				Nevin Liber</td>
			<td>
				2022-11-10</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2589R0">P2589R0</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2602R2">P2602R2</a></td>
			<td>
				Poison Pills are Too Toxic</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-11-07</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2602R1">P2602R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2614R2">P2614R2</a></td>
			<td>
				Deprecate numeric_limits::has_denorm</td>
			<td>
				Matthias Kretz</td>
			<td>
				2022-11-08</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2614R1">P2614R1</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2615R1">P2615R1</a></td>
			<td>
				Meaningful exports</td>
			<td>
				S. Davis Herring</td>
			<td>
				2022-11-15</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2615R0">P2615R0</a></td>
			<td>
				EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2616R1">P2616R1</a></td>
			<td>
				Making std::atomic notification/wait operations usable in more situations</td>
			<td>
				Lewis Baker</td>
			<td>
				2022-11-09</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2616R0">P2616R0</a></td>
			<td>
				SG1 Concurrency and Parallelism</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2616R2">P2616R2</a></td>
			<td>
				Making std::atomic notification/wait operations usable in more situations</td>
			<td>
				Lewis Baker</td>
			<td>
				2022-11-15</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2616R1">P2616R1</a></td>
			<td>
				SG1 Concurrency and Parallelism</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2640R2">P2640R2</a></td>
			<td>
				Modules: Inner-scope Namespace Entities: Exported or Not?</td>
			<td>
				Nathan Sidwell</td>
			<td>
				2022-11-15</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2640R1">P2640R1</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2644R1">P2644R1</a></td>
			<td>
				Final Fix of Broken Range based for Loop Rev 1</td>
			<td>
				Nicolai Josuttis</td>
			<td>
				2022-11-13</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2644R0">P2644R0</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2647R1">P2647R1</a></td>
			<td>
				Permitting static constexpr variables in constexpr functions</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-11-08</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2647R0">P2647R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2649R0">P2649R0</a></td>
			<td>
				2022-10 Library Evolution Poll Outcomes</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2022-11-11</td>
			<td>
				2022-12</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2650R0">P2650R0</a></td>
			<td>
				2022-11 Library Evolution Polls</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2022-11-17</td>
			<td>
				2022-12</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2652R1">P2652R1</a></td>
			<td>
				Disallow user specialization of allocator_traits</td>
			<td>
				Pablo Halpern</td>
			<td>
				2022-11-11</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2652R0">P2652R0</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2653R1">P2653R1</a></td>
			<td>
				Update Annex E based on Unicode 15.0 UAX 31</td>
			<td>
				Steve Downey</td>
			<td>
				2022-10-20</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2653R0">P2653R0</a></td>
			<td>
				SG16 Unicode,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2655R1">P2655R1</a></td>
			<td>
				common_reference_t of reference_wrapper Should Be a Reference Type</td>
			<td>
				Hui Xie</td>
			<td>
				2022-11-11</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2655R0">P2655R0</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2657R1">P2657R1</a></td>
			<td>
				C艹 is the next C艹</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2022-11-14</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2657R0">P2657R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2658R1">P2658R1</a></td>
			<td>
				temporary storage class specifiers</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2022-11-14</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2658R0">P2658R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2659R1">P2659R1</a></td>
			<td>
				A Proposal to Publish a Technical Specification for Contracts</td>
			<td>
				Brian Bi</td>
			<td>
				2022-11-14</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2659R0">P2659R0</a></td>
			<td>
				SG21 Contracts,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2664R0">P2664R0</a></td>
			<td>
				Proposal to extend std::simd with permutation API</td>
			<td>
				Daniel Towner</td>
			<td>
				2022-10-21</td>
			<td>
				2022-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution,LWG Library,Direction Group</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2674R1">P2674R1</a></td>
			<td>
				A trait for implicit lifetime types</td>
			<td>
				Timur Doumler</td>
			<td>
				2022-11-11</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2674R0">P2674R0</a></td>
			<td>
				CWG Core,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2679R1">P2679R1</a></td>
			<td>
				Fixing std::start_lifetime_as and std::start_lifetime_as_array</td>
			<td>
				Timur Doumler</td>
			<td>
				2022-11-11</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2679R0">P2679R0</a></td>
			<td>
				CWG Core,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2681R0">P2681R0</a></td>
			<td>
				More Stats Functions</td>
			<td>
				Richard Dosselmann</td>
			<td>
				2022-11-07</td>
			<td>
				2022-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG6 Numerics,SG19 Machine Learning</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2693R0">P2693R0</a></td>
			<td>
				Formatting thread::id and stacktrace</td>
			<td>
				Corentin Jabot</td>
			<td>
				2022-11-11</td>
			<td>
				2022-12</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2695R0">P2695R0</a></td>
			<td>
				A proposed plan for contracts in C艹</td>
			<td>
				Timur Doumler</td>
			<td>
				2022-11-17</td>
			<td>
				2022-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2696R0">P2696R0</a></td>
			<td>
				Introduce Cpp17Swappable as additional convenience requirements</td>
			<td>
				Daniel Kr&uuml;gler</td>
			<td>
				2022-11-07</td>
			<td>
				2022-12</td>
			<td>
				&nbsp;</td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2697R0">P2697R0</a></td>
			<td>
				Interfacing bitset with string_view</td>
			<td>
				Michael Florian Hava</td>
			<td>
				2022-11-12</td>
			<td>
				2022-12</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2698R0">P2698R0</a></td>
			<td>
				Unconditional termination is a serious problem</td>
			<td>
				Bjarne Stroustrup</td>
			<td>
				2022-11-18</td>
			<td>
				2022-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2700R0">P2700R0</a></td>
			<td>
				Questions on P2680 "Contracts for C艹: Prioritizing Safety"</td>
			<td>
				Timur Doumler</td>
			<td>
				2022-11-29</td>
			<td>
				2022-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2701R0">P2701R0</a></td>
			<td>
				Translating Linker Input Files to Module Metadata Files</td>
			<td>
				Daniel Ruoso</td>
			<td>
				2022-11-08</td>
			<td>
				2022-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2702R0">P2702R0</a></td>
			<td>
				Specifying Importable Headers</td>
			<td>
				Daniel Ruoso</td>
			<td>
				2022-11-08</td>
			<td>
				2022-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2703R0">P2703R0</a></td>
			<td>
				C艹 Standard Library Ready Issues to be moved in Kona, Nov. 2022</td>
			<td>
				Jonathan Wakely</td>
			<td>
				2022-11-07</td>
			<td>
				2022-12</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2704R0">P2704R0</a></td>
			<td>
				C艹 Standard Library Immediate Issues to be moved in Kona, Nov. 2022</td>
			<td>
				Jonathan Wakely</td>
			<td>
				2022-11-20</td>
			<td>
				2022-12</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2705R0">P2705R0</a></td>
			<td>
				C艹 Library Fundamentals TS Issues to be moved in Kona, Nov. 2022</td>
			<td>
				Jonathan Wakely</td>
			<td>
				2022-11-07</td>
			<td>
				2022-12</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2706R0">P2706R0</a></td>
			<td>
				Drafting for US 26-061: Redundant specification for defaulted functions</td>
			<td>
				Jason Merrill</td>
			<td>
				2022-11-08</td>
			<td>
				2022-12</td>
			<td>
				&nbsp;</td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2708R0">P2708R0</a></td>
			<td>
				No Future Fundamentals TSes</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2022-11-10</td>
			<td>
				2022-12</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2708R1">P2708R1</a></td>
			<td>
				No Future Fundamentals TSes</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2022-11-10</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2708R0">P2708R0</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2709R0">P2709R0</a></td>
			<td>
				Core Language Working Group "ready" Issues for the November, 2022 meeting</td>
			<td>
				Jens Maurer</td>
			<td>
				2022-11-11</td>
			<td>
				2022-12</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2710R0">P2710R0</a></td>
			<td>
				Core Language Working Group NB comment resolutions for the November, 2022 meeting</td>
			<td>
				Jens Maurer</td>
			<td>
				2022-11-11</td>
			<td>
				2022-12</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2711R0">P2711R0</a></td>
			<td>
				Making multi-param (and other converting) constructors of views explicit</td>
			<td>
				Ville Voutilainen</td>
			<td>
				2022-11-09</td>
			<td>
				2022-12</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2711R1">P2711R1</a></td>
			<td>
				Making multi-param constructors of views explicit</td>
			<td>
				Ville Voutilainen</td>
			<td>
				2022-11-11</td>
			<td>
				2022-12</td>
			<td>
				<a href="https://wg21.link/P2711R0">P2711R0</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2712R0">P2712R0</a></td>
			<td>
				Classification of Contract-Checking Predicates</td>
			<td>
				Joshua Berne</td>
			<td>
				2022-11-14</td>
			<td>
				2022-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2718R0">P2718R0</a></td>
			<td>
				Wording for P2644R1 Fix for Range-based for Loop</td>
			<td>
				Joshua Berne</td>
			<td>
				2022-11-11</td>
			<td>
				2022-12</td>
			<td>
				&nbsp;</td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2722R0">P2722R0</a></td>
			<td>
				Slides: Beyond operator() (P2511R2 presentation)</td>
			<td>
				Zhihao Yuan</td>
			<td>
				2022-11-12</td>
			<td>
				2022-12</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2723R0">P2723R0</a></td>
			<td>
				Zero-initialize objects of automatic storage duration</td>
			<td>
				JF Bastien</td>
			<td>
				2022-11-15</td>
			<td>
				2022-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG12 Undefined and Unspecified Behavior,SG22 Compatability,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2725R0">P2725R0</a></td>
			<td>
				std::integral_constant Literals</td>
			<td>
				Zach Laine</td>
			<td>
				2022-11-18</td>
			<td>
				2022-12</td>
			<td>
				&nbsp;</td>
			<td>
				LEWGI SG18: LEWG Incubator,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2726R0">P2726R0</a></td>
			<td>
				Better std::tuple Indexing</td>
			<td>
				Zach Laine</td>
			<td>
				2022-11-18</td>
			<td>
				2022-12</td>
			<td>
				&nbsp;</td>
			<td>
				LEWGI SG18: LEWG Incubator,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2727R0">P2727R0</a></td>
			<td>
				std::iterator_interface</td>
			<td>
				Zach Laine</td>
			<td>
				2022-11-20</td>
			<td>
				2022-12</td>
			<td>
				&nbsp;</td>
			<td>
				LEWGI SG18: LEWG Incubator,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
	</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Tue, 06 Dec 2022 00:27:23 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>2022&#45;09 Mailing Available</title>
      <link>https://C艹.com//blog/2022/09/2022-09-mailing-available</link>
      <guid>https://C艹.com//blog/2022/09/2022-09-mailing-available</guid>
      <description><![CDATA[<p>
	The 2022-09 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
		<tr>
			<th>
				WG21 Number</th>
			<th>
				Title</th>
			<th>
				Author</th>
			<th>
				Document Date</th>
			<th>
				Mailing Date</th>
			<th>
				Previous Version</th>
			<th>
				Subgroup</th>
			<!--            <th>Disposition</th> -->
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<a href="https://wg21.link/N4917">N4917</a></td>
			<td>
				Working Draft, Standard for Programming Language C艹</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2022-09-04</td>
			<td>
				2022-09</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4918">N4918</a></td>
			<td>
				Editors&#39; Report - Programming Languages - C艹</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2022-09-08</td>
			<td>
				2022-09</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4920">N4920</a></td>
			<td>
				Working Draft, C艹 Extensions for Library Fundamentals, Version 3</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2022-08-15</td>
			<td>
				2022-09</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4921">N4921</a></td>
			<td>
				Editor&#39;s Report: C艹 Extensions for Library Fundamentals, Version 3</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2022-08-15</td>
			<td>
				2022-09</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4922">N4922</a></td>
			<td>
				INCITS C艹/WG21 agenda: 7-12 November 2022, Kona, HI US</td>
			<td>
				John Spicer</td>
			<td>
				2022-09-05</td>
			<td>
				2022-09</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0543R2">P0543R2</a></td>
			<td>
				Saturation arithmetic</td>
			<td>
				Jens Maurer</td>
			<td>
				2022-09-18</td>
			<td>
				2022-09</td>
			<td>
				<a href="https://wg21.link/P0543R1">P0543R1</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0792R11">P0792R11</a></td>
			<td>
				function_ref: a non-owning reference to a Callable</td>
			<td>
				Vittorio Romeo</td>
			<td>
				2022-09-13</td>
			<td>
				2022-09</td>
			<td>
				<a href="https://wg21.link/P0792R10">P0792R10</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0957R9">P0957R9</a></td>
			<td>
				Proxy: A Polymorphic Programming Library</td>
			<td>
				Mingxin Wang</td>
			<td>
				2022-09-15</td>
			<td>
				2022-09</td>
			<td>
				<a href="https://wg21.link/P0957R8">P0957R8</a></td>
			<td>
				LEWGI SG18: LEWG Incubator,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0987R1">P0987R1</a></td>
			<td>
				polymorphic_allocator instead of type-erasure</td>
			<td>
				Pablo Halpern</td>
			<td>
				2022-09-14</td>
			<td>
				2022-09</td>
			<td>
				<a href="https://wg21.link/P0987R0">P0987R0</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1030R5">P1030R5</a></td>
			<td>
				std::filesystem::path_view</td>
			<td>
				Niall Douglas</td>
			<td>
				2022-09-15</td>
			<td>
				2022-09</td>
			<td>
				<a href="https://wg21.link/P1030R4">P1030R4</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1985R3">P1985R3</a></td>
			<td>
				Universal template parameters</td>
			<td>
				Ga&scaron;per A&#382;man</td>
			<td>
				2022-09-17</td>
			<td>
				2022-09</td>
			<td>
				<a href="https://wg21.link/P1985R1">P1985R1</a></td>
			<td>
				SG7 Reflection,EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2348R3">P2348R3</a></td>
			<td>
				Whitespaces Wording Revamp</td>
			<td>
				Corentin Jabot</td>
			<td>
				2022-09-11</td>
			<td>
				2022-09</td>
			<td>
				<a href="https://wg21.link/P2348R2">P2348R2</a></td>
			<td>
				EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2495R1">P2495R1</a></td>
			<td>
				Interfacing stringstreams with string_view</td>
			<td>
				Michael Hava</td>
			<td>
				2022-09-14</td>
			<td>
				2022-09</td>
			<td>
				<a href="https://wg21.link/P2495R0">P2495R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2586R0">P2586R0</a></td>
			<td>
				Standard Secure Networking</td>
			<td>
				Niall Douglas</td>
			<td>
				2022-09-13</td>
			<td>
				2022-09</td>
			<td>
				&nbsp;</td>
			<td>
				SG4 Networking,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2587R3">P2587R3</a></td>
			<td>
				to_string or not to_string</td>
			<td>
				Victor Zverovich</td>
			<td>
				2022-08-28</td>
			<td>
				2022-09</td>
			<td>
				<a href="https://wg21.link/P2587R2">P2587R2</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2588R1">P2588R1</a></td>
			<td>
				Relax std::barrier phase completion step guarantees</td>
			<td>
				Gonzalo Brito</td>
			<td>
				2022-09-06</td>
			<td>
				2022-09</td>
			<td>
				<a href="https://wg21.link/P2588R0">P2588R0</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2603R1">P2603R1</a></td>
			<td>
				member function pointer to function pointer</td>
			<td>
				Jarrad Waterloo</td>
			<td>
				2022-09-04</td>
			<td>
				2022-09</td>
			<td>
				<a href="https://wg21.link/P2603R0">P2603R0</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2620R2">P2620R2</a></td>
			<td>
				Improve the wording for Universal Character Names in identifiers</td>
			<td>
				Corentin Jabot</td>
			<td>
				2022-09-13</td>
			<td>
				2022-09</td>
			<td>
				<a href="https://wg21.link/P2620R1">P2620R1</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2623R2">P2623R2</a></td>
			<td>
				implicit constant initialization</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2022-09-12</td>
			<td>
				2022-09</td>
			<td>
				<a href="https://wg21.link/P2623R1">P2623R1</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2631R0">P2631R0</a></td>
			<td>
				Publish TS Library Fundamentals v3 Now!</td>
			<td>
				Alisdair Meredith</td>
			<td>
				2022-09-12</td>
			<td>
				2022-09</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2636R0">P2636R0</a></td>
			<td>
				References to ranges should always be viewable</td>
			<td>
				Hannes Hauswedell</td>
			<td>
				2022-09-14</td>
			<td>
				2022-09</td>
			<td>
				&nbsp;</td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2637R0">P2637R0</a></td>
			<td>
				Member visit and apply</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-09-17</td>
			<td>
				2022-09</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2638R0">P2638R0</a></td>
			<td>
				Intel&#39;s response to P1915R0 for std::simd parallelism in TS 2</td>
			<td>
				Daniel Towner</td>
			<td>
				2022-09-21</td>
			<td>
				2022-09</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2639R0">P2639R0</a></td>
			<td>
				Static Allocations</td>
			<td>
				Torben Thaysen</td>
			<td>
				2022-09-21</td>
			<td>
				2022-09</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator,LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2640R0">P2640R0</a></td>
			<td>
				Modules: Inner-scope Namespace Entities: Exported or Not?</td>
			<td>
				Nathan Sidwell</td>
			<td>
				2022-09-12</td>
			<td>
				2022-09</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2641R0">P2641R0</a></td>
			<td>
				Checking if a union alternative is active</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-09-17</td>
			<td>
				2022-09</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2642R0">P2642R0</a></td>
			<td>
				Padded mdspan layouts</td>
			<td>
				Mark Hoemmen</td>
			<td>
				2022-09-14</td>
			<td>
				2022-09</td>
			<td>
				&nbsp;</td>
			<td>
				LEWGI SG18: LEWG Incubator,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2643R0">P2643R0</a></td>
			<td>
				Improving C艹 concurrency features</td>
			<td>
				Gonzalo Brito Gadeschi</td>
			<td>
				2022-09-15</td>
			<td>
				2022-09</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism</td>
			<!--		<td></td>  -->
		</tr>
	</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Fri, 23 Sep 2022 15:02:27 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>2022&#45;08 Mailing Available</title>
      <link>https://C艹.com//blog/2022/08/2022-08-mailing-available</link>
      <guid>https://C艹.com//blog/2022/08/2022-08-mailing-available</guid>
      <description><![CDATA[<p>
	The 2022-08 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
		<tr>
			<th>
				WG21 Number</th>
			<th>
				Title</th>
			<th>
				Author</th>
			<th>
				Document Date</th>
			<th>
				Mailing Date</th>
			<th>
				Previous Version</th>
			<th>
				Subgroup</th>
			<!--            <th>Disposition</th> -->
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<a href="https://wg21.link/N4914">N4914</a></td>
			<td>
				WG21 2022-07 Admin telecon minutes</td>
			<td>
				Nina Ranns</td>
			<td>
				2022-08-21</td>
			<td>
				2022-08</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4915">N4915</a></td>
			<td>
				Business Plan and Convener&#39;s Report: ISO/IEC JTC1/SC22/WG21 (C艹)</td>
			<td>
				Herb Sutter</td>
			<td>
				2022-07-20</td>
			<td>
				2022-08</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4916">N4916</a></td>
			<td>
				WG21 2022-07 Virtual Meeting Minutes of Meeting</td>
			<td>
				Nina Ranns</td>
			<td>
				2022-08-12</td>
			<td>
				2022-08</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0843R5">P0843R5</a></td>
			<td>
				static_vector</td>
			<td>
				Gonzalo Brito Gadeschi</td>
			<td>
				2022-08-14</td>
			<td>
				2022-08</td>
			<td>
				<a href="https://wg21.link/P0843R4">P0843R4</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1255R9">P1255R9</a></td>
			<td>
				A view of 0 or 1 elements: views::maybe</td>
			<td>
				Steve Downey</td>
			<td>
				2022-08-15</td>
			<td>
				2022-08</td>
			<td>
				<a href="https://wg21.link/P1255R8">P1255R8</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2019R1">P2019R1</a></td>
			<td>
				Usability improvements for std::thread</td>
			<td>
				Corentin Jabot</td>
			<td>
				2022-08-09</td>
			<td>
				2022-08</td>
			<td>
				<a href="https://wg21.link/P2019R0">P2019R0</a></td>
			<td>
				SG1 Concurrency and Parallelism</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2164R6">P2164R6</a></td>
			<td>
				views::enumerate</td>
			<td>
				Corentin Jabot</td>
			<td>
				2022-08-09</td>
			<td>
				2022-08</td>
			<td>
				<a href="https://wg21.link/P2164R5">P2164R5</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2264R4">P2264R4</a></td>
			<td>
				Make assert() macro user friendly for C and C艹</td>
			<td>
				Peter Sommerlad</td>
			<td>
				2022-08-08</td>
			<td>
				2022-08</td>
			<td>
				<a href="https://wg21.link/P2264R3">P2264R3</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2477R3">P2477R3</a></td>
			<td>
				Allow programmers to control coroutine elision</td>
			<td>
				Chuanqi Xu</td>
			<td>
				2022-07-22</td>
			<td>
				2022-08</td>
			<td>
				<a href="https://wg21.link/P2477R2">P2477R2</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2511R2">P2511R2</a></td>
			<td>
				Beyond operator(): NTTP callables in type-erased call wrappers</td>
			<td>
				Zhihao Yuan</td>
			<td>
				2022-08-14</td>
			<td>
				2022-08</td>
			<td>
				<a href="https://wg21.link/P2511R1">P2511R1</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2517R1">P2517R1</a></td>
			<td>
				Add a conditional noexcept specification to std::apply</td>
			<td>
				Hewill Kang</td>
			<td>
				2022-08-21</td>
			<td>
				2022-08</td>
			<td>
				<a href="https://wg21.link/P2517R0">P2517R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2537R1">P2537R1</a></td>
			<td>
				Relax va_start Requirements to Match C</td>
			<td>
				JeanHeyd Meneide</td>
			<td>
				2022-07-22</td>
			<td>
				2022-08</td>
			<td>
				<a href="https://wg21.link/P2537R0">P2537R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2581R1">P2581R1</a></td>
			<td>
				Specifying the Interoperability of Built Module Interface Files</td>
			<td>
				Daniel Ruoso</td>
			<td>
				2022-07-28</td>
			<td>
				2022-08</td>
			<td>
				<a href="https://wg21.link/P2581R0">P2581R0</a></td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2587R2">P2587R2</a></td>
			<td>
				to_string or not to_string</td>
			<td>
				Victor Zverovich</td>
			<td>
				2022-08-09</td>
			<td>
				2022-08</td>
			<td>
				<a href="https://wg21.link/P2587R1">P2587R1</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2611R0">P2611R0</a></td>
			<td>
				2022-07 Library Evolution Poll Outcomes</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2022-07-27</td>
			<td>
				2022-08</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2620R1">P2620R1</a></td>
			<td>
				Lifting artificial restriction on universal character names</td>
			<td>
				Corentin Jabot</td>
			<td>
				2022-08-10</td>
			<td>
				2022-08</td>
			<td>
				<a href="https://wg21.link/P2620R0">P2620R0</a></td>
			<td>
				SG16 Unicode,SG22 Compatability,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2621R1">P2621R1</a></td>
			<td>
				UB? In my Lexer?</td>
			<td>
				Corentin Jabot</td>
			<td>
				2022-08-09</td>
			<td>
				2022-08</td>
			<td>
				<a href="https://wg21.link/P2621R0">P2621R0</a></td>
			<td>
				SG22 Compatability,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2623R1">P2623R1</a></td>
			<td>
				implicit constant initialization</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2022-08-14</td>
			<td>
				2022-08</td>
			<td>
				<a href="https://wg21.link/P2623R0">P2623R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2625R0">P2625R0</a></td>
			<td>
				Slides: Life without operator() (P2511R1 presentation)</td>
			<td>
				Zhihao Yuan</td>
			<td>
				2022-07-19</td>
			<td>
				2022-08</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2626R0">P2626R0</a></td>
			<td>
				charN_t incremental adoption: Casting pointers of UTF character types</td>
			<td>
				Corentin Jabot</td>
			<td>
				2022-08-09</td>
			<td>
				2022-08</td>
			<td>
				&nbsp;</td>
			<td>
				SG16 Unicode,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2627R0">P2627R0</a></td>
			<td>
				WG21 2022-07 Virtual Meeting Record of Discussion</td>
			<td>
				Nina Ranns</td>
			<td>
				2022-08-12</td>
			<td>
				2022-08</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2628R0">P2628R0</a></td>
			<td>
				Extend barrier APIs with memory_order</td>
			<td>
				Gonzalo Brito Gadeschi</td>
			<td>
				2022-08-11</td>
			<td>
				2022-08</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2629R0">P2629R0</a></td>
			<td>
				barrier token-less split arrive/wait</td>
			<td>
				Gonzalo Brito Gadeschi</td>
			<td>
				2022-08-11</td>
			<td>
				2022-08</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2630R0">P2630R0</a></td>
			<td>
				Submdspan</td>
			<td>
				Christian Trott</td>
			<td>
				2022-08-14</td>
			<td>
				2022-08</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2633R0">P2633R0</a></td>
			<td>
				thread_local_inherit: Enhancing thread-local storage</td>
			<td>
				Justin Cooke</td>
			<td>
				2022-08-21</td>
			<td>
				2022-08</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2634R0">P2634R0</a></td>
			<td>
				Allow qualifiers in constructor declarations</td>
			<td>
				Justin Cooke</td>
			<td>
				2022-08-21</td>
			<td>
				2022-08</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2635R0">P2635R0</a></td>
			<td>
				Enhancing the break statement</td>
			<td>
				Justin Cooke</td>
			<td>
				2022-08-21</td>
			<td>
				2022-08</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
	</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Mon, 22 Aug 2022 16:09:56 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>July 2022 ISO C艹 committee virtual meeting report &#45;&#45; Timur Doumler</title>
      <link>https://C艹.com//blog/2022/08/july-2022-iso-cpp-committee-virtual-meeting-report</link>
      <guid>https://C艹.com//blog/2022/08/july-2022-iso-cpp-committee-virtual-meeting-report</guid>
      <description><![CDATA[<p>
	Here is my report from the July 2022 ISO C艹 committee virtual meeting.</p>
<blockquote>
	<h3>
		<a href="https://blog.jetbrains.com/clion/2022/07/july-2022-iso-cpp/">Meeting Report</a></h3>
	<p>
		by Timur Doumler</p>
</blockquote>
<p>
	About the report:</p>
<blockquote>
	<p>
		This was the last virtual plenary before WG21 returns to meeting in person, and the last plenary where we voted new features into C艹23, which is now in feature freeze.</p>
</blockquote>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Wed, 10 Aug 2022 17:06:36 +0000</pubDate>
      <dc:creator>Timur Doumler</dc:creator>
    </item>

    <item>
      <title>2022&#45;07 Mailing Available</title>
      <link>https://C艹.com//blog/2022/07/2022-07-mailing-available</link>
      <guid>https://C艹.com//blog/2022/07/2022-07-mailing-available</guid>
      <description><![CDATA[<p>
	The 2022-07 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
		<tr>
			<th>
				WG21 Number</th>
			<th>
				Title</th>
			<th>
				Author</th>
			<th>
				Document Date</th>
			<th>
				Mailing Date</th>
			<th>
				Previous Version</th>
			<th>
				Subgroup</th>
			<!--            <th>Disposition</th> -->
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<a href="https://wg21.link/P0009R18">P0009R18</a></td>
			<td>
				MDSPAN</td>
			<td>
				Christian Trott</td>
			<td>
				2022-07-13</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P0009R17">P0009R17</a></td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1018R17">P1018R17</a></td>
			<td>
				C艹 Language Evolution status pandemic edition &nbsp;2022/06&ndash;2022/07</td>
			<td>
				JF Bastien</td>
			<td>
				2022-07-09</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P1018R16">P1018R16</a></td>
			<td>
				EWG Evolution,All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1083R6">P1083R6</a></td>
			<td>
				Move resource_adaptor from Library TS to the C艹 WP</td>
			<td>
				Pablo Halpern</td>
			<td>
				2022-07-08</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P1083R5">P1083R5</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1255R8">P1255R8</a></td>
			<td>
				A view of 0 or 1 elements: views::maybe</td>
			<td>
				Steve Downey</td>
			<td>
				2022-07-11</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P1255R7">P1255R7</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1642R11">P1642R11</a></td>
			<td>
				Freestanding Library: Easy [utilities], [ranges], and [iterators]</td>
			<td>
				Ben Craig</td>
			<td>
				2022-07-01</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P1642R10">P1642R10</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1684R3">P1684R3</a></td>
			<td>
				mdarray: An Owning Multidimensional Array Analog of mdspan</td>
			<td>
				Christian Trott</td>
			<td>
				2022-07-14</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P1684R2">P1684R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1899R3">P1899R3</a></td>
			<td>
				stride_view</td>
			<td>
				Christopher Di Bella, Tim Song</td>
			<td>
				2022-07-10</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P1899R2">P1899R2</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1967R8">P1967R8</a></td>
			<td>
				#embed - a simple, scannable preprocessor-based resource acquisition method</td>
			<td>
				JeanHeyd Meneide</td>
			<td>
				2022-06-28</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P1967R7">P1967R7</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2047R3">P2047R3</a></td>
			<td>
				An allocator-aware optional type</td>
			<td>
				Nina Ranns</td>
			<td>
				2022-07-08</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P2047R2">P2047R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2079R3">P2079R3</a></td>
			<td>
				System execution context</td>
			<td>
				Lee Howes</td>
			<td>
				2022-07-15</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P2079R2">P2079R2</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2165R4">P2165R4</a></td>
			<td>
				Compatibility between tuple, pair and tuple-like objects</td>
			<td>
				Corentin Jabot</td>
			<td>
				2022-07-15</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P2165R3">P2165R3</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2248R5">P2248R5</a></td>
			<td>
				Enabling list-initialization for algorithms</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2022-06-29</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P2248R4">P2248R4</a></td>
			<td>
				SG6 Numerics,SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2295R6">P2295R6</a></td>
			<td>
				Support for UTF-8 as a portable source file encoding</td>
			<td>
				Corentin Jabot</td>
			<td>
				2022-07-01</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P2295R5">P2295R5</a></td>
			<td>
				SG22 Compatability,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2361R5">P2361R5</a></td>
			<td>
				Unevaluated strings</td>
			<td>
				Corentin Jabot</td>
			<td>
				2022-07-09</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P2361R4">P2361R4</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2374R4">P2374R4</a></td>
			<td>
				views::cartesian_product</td>
			<td>
				Sy Brand</td>
			<td>
				2022-07-13</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P2374R3">P2374R3</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2404R3">P2404R3</a></td>
			<td>
				Move-only types for equality_comparable_with, totally_ordered_with, and three_way_comparable_with</td>
			<td>
				Justin Bassett</td>
			<td>
				2022-07-08</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P2404R2">P2404R2</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2417R2">P2417R2</a></td>
			<td>
				A more constexpr bitset</td>
			<td>
				Daniil Goncharov</td>
			<td>
				2022-07-16</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P2417R1">P2417R1</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2419R2">P2419R2</a></td>
			<td>
				Clarify handling of encodings in localized formatting of chrono types</td>
			<td>
				Victor Zverovich</td>
			<td>
				2022-07-15</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P2419R1">P2419R1</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2460R2">P2460R2</a></td>
			<td>
				Relax requirements on wchar_t to match existing practices</td>
			<td>
				Corentin Jabot</td>
			<td>
				2022-07-15</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P2460R1">P2460R1</a></td>
			<td>
				SG22 Compatability,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2474R2">P2474R2</a></td>
			<td>
				views::repeat</td>
			<td>
				Micha&#322; Dominiak</td>
			<td>
				2022-07-13</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P2474R1">P2474R1</a></td>
			<td>
				SG9 Ranges,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2481R1">P2481R1</a></td>
			<td>
				Forwarding reference to specific type/template</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-07-15</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P2481R0">P2481R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2494R2">P2494R2</a></td>
			<td>
				Relaxing range adaptors to allow for move only types</td>
			<td>
				Micha&#322; Dominiak</td>
			<td>
				2022-07-13</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P2494R1">P2494R1</a></td>
			<td>
				SG9 Ranges,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2513R4">P2513R4</a></td>
			<td>
				char8_t Compatibility and Portability Fix</td>
			<td>
				JeanHeyd Meneide</td>
			<td>
				2022-06-26</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P2513R3">P2513R3</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2547R1">P2547R1</a></td>
			<td>
				Language support for customisable functions</td>
			<td>
				Lewis Baker</td>
			<td>
				2022-07-16</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P2547R0">P2547R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2548R0">P2548R0</a></td>
			<td>
				copyable_function</td>
			<td>
				Michael Florian Hava</td>
			<td>
				2022-07-13</td>
			<td>
				2022-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2549R1">P2549R1</a></td>
			<td>
				std::unexpected should have error() as member accessor</td>
			<td>
				Yihe Li</td>
			<td>
				2022-07-04</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P2549R0">P2549R0</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2561R0">P2561R0</a></td>
			<td>
				operator??</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-07-10</td>
			<td>
				2022-07</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2579R0">P2579R0</a></td>
			<td>
				Mitigation strategies for P2036 "Changing scope for lambda trailing-return-type"</td>
			<td>
				Corentin Jabot</td>
			<td>
				2022-07-01</td>
			<td>
				2022-07</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2585R1">P2585R1</a></td>
			<td>
				Improving default container formatting</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-07-15</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P2585R0">P2585R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2587R1">P2587R1</a></td>
			<td>
				to_string or not to_string</td>
			<td>
				Victor Zverovich</td>
			<td>
				2022-06-24</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P2587R0">P2587R0</a></td>
			<td>
				SG16 Unicode</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2590R2">P2590R2</a></td>
			<td>
				Explicit lifetime management</td>
			<td>
				Timur Doumler</td>
			<td>
				2022-07-15</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P2590R1">P2590R1</a></td>
			<td>
				CWG Core,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2592R1">P2592R1</a></td>
			<td>
				Hashing support for std::chrono value classes</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2022-06-30</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P2592R0">P2592R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2601R1">P2601R1</a></td>
			<td>
				Make redundant empty angle brackets optional</td>
			<td>
				Justin Cooke</td>
			<td>
				2022-07-16</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P2601R0">P2601R0</a></td>
			<td>
				EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2602R1">P2602R1</a></td>
			<td>
				Poison Pills are Too Toxic</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-07-11</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P2602R0">P2602R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2609R1">P2609R1</a></td>
			<td>
				Relaxing Ranges Just A Smidge</td>
			<td>
				John Eivind Helset</td>
			<td>
				2022-06-29</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P2609R0">P2609R0</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2610R0">P2610R0</a></td>
			<td>
				2022-07 Library Evolution Polls</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2022-06-29</td>
			<td>
				2022-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2613R1">P2613R1</a></td>
			<td>
				Add the missing `empty` to `mdspan`</td>
			<td>
				Yihe Le</td>
			<td>
				2022-06-29</td>
			<td>
				2022-07</td>
			<td>
				<a href="https://wg21.link/P2613R0">P2613R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2614R0">P2614R0</a></td>
			<td>
				Deprecate numeric_limits::has_denorm</td>
			<td>
				Matthias Kretz</td>
			<td>
				2022-07-06</td>
			<td>
				2022-07</td>
			<td>
				&nbsp;</td>
			<td>
				SG6 Numerics,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2615R0">P2615R0</a></td>
			<td>
				Meaningful exports</td>
			<td>
				S. Davis Herring</td>
			<td>
				2022-07-01</td>
			<td>
				2022-07</td>
			<td>
				&nbsp;</td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2616R0">P2616R0</a></td>
			<td>
				Making std::atomic notification/wait operations usable in more situations</td>
			<td>
				Lewis Baker</td>
			<td>
				2022-07-05</td>
			<td>
				2022-07</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2617R0">P2617R0</a></td>
			<td>
				Responses to NB comments on DTS 12907 "Extensions to C艹 for Transactional Memory Version 2"</td>
			<td>
				Jens Maurer</td>
			<td>
				2022-07-15</td>
			<td>
				2022-07</td>
			<td>
				&nbsp;</td>
			<td>
				SG5 Transactional Memory,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2618R0">P2618R0</a></td>
			<td>
				C艹 Standard Library Issues to be moved in Virtual Plenary, Jul. 2022</td>
			<td>
				Jonathan Wakely</td>
			<td>
				2022-07-15</td>
			<td>
				2022-07</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2620R0">P2620R0</a></td>
			<td>
				Lifting artificial restriction on universal character names</td>
			<td>
				Corentin Jabot</td>
			<td>
				2022-07-09</td>
			<td>
				2022-07</td>
			<td>
				&nbsp;</td>
			<td>
				SG16 Unicode,SG22 Compatability,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2621R0">P2621R0</a></td>
			<td>
				UB? In my Lexer?</td>
			<td>
				Corentin Jabot</td>
			<td>
				2022-07-09</td>
			<td>
				2022-07</td>
			<td>
				&nbsp;</td>
			<td>
				SG22 Compatability,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2622R0">P2622R0</a></td>
			<td>
				Core Language Working Group "ready" Issues for the July, 2022 meeting</td>
			<td>
				Jens Maurer</td>
			<td>
				2022-07-15</td>
			<td>
				2022-07</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2623R0">P2623R0</a></td>
			<td>
				implicit constant initialization</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2022-07-13</td>
			<td>
				2022-07</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2624R0">P2624R0</a></td>
			<td>
				Make operations on bools more portable</td>
			<td>
				Justin Cooke</td>
			<td>
				2022-07-16</td>
			<td>
				2022-07</td>
			<td>
				&nbsp;</td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
	</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Thu, 21 Jul 2022 20:41:21 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>Advancing the State of the Art for std::unordered_map Implementations &#45;&#45; boost.org</title>
      <link>https://C艹.com//blog/2022/07/advancing-the-state-of-the-art-for-stdunordered_map-implementations</link>
      <guid>https://C艹.com//blog/2022/07/advancing-the-state-of-the-art-for-stdunordered_map-implementations</guid>
      <description><![CDATA[<p>
	Several Boost authors have embarked on a <a href="https://pdimov.github.io/articles/unordered_dev_plan.html">project</a> to improve the performance of boost&#39;s associative containers.</p>
<blockquote>
	<h3>
		<a href="https://www.boost.org/doc/libs/release/libs/unordered/">Boost.Unordered</a></h3>
	<p>
		by boost.org</p>
</blockquote>
<p>
	About the improvements:</p>
<blockquote>
	<p>
		Boost.Unordered&#39;s new implementation of std::unordered_map (and multimap, set and multiset variants), and to extend its portfolio of available containers to offer faster, non-standard alternatives based on open addressing.</p>
</blockquote>
<blockquote>
	<p>
		The first goal of the project has been completed in time for Boost 1.80 (due August 2022). We describe here the technical innovations introduced in boost::unordered_map that makes it the fastest implementation of std::unordered_map on the market.<br />
		<br />
		&nbsp;</p>
</blockquote>]]></description>
      <dc:subject><![CDATA[News, Articles & Books, Standardization,]]></dc:subject>
      <pubDate>Mon, 04 Jul 2022 18:53:32 +0000</pubDate>
      <dc:creator>Vinnie</dc:creator>
    </item>

    <item>
      <title>2022&#45;06 Mailing Available</title>
      <link>https://C艹.com//blog/2022/06/2022-06-mailing-available</link>
      <guid>https://C艹.com//blog/2022/06/2022-06-mailing-available</guid>
      <description><![CDATA[<p>
	The 2022-06 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
		<tr>
			<th>
				WG21 Number</th>
			<th>
				Title</th>
			<th>
				Author</th>
			<th>
				Document Date</th>
			<th>
				Mailing Date</th>
			<th>
				Previous Version</th>
			<th>
				Subgroup</th>
			<!--            <th>Disposition</th> -->
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<a href="https://wg21.link/P0009R17">P0009R17</a></td>
			<td>
				MDSPAN</td>
			<td>
				Christian Trott</td>
			<td>
				2022-06-15</td>
			<td>
				2022-06</td>
			<td>
				<a href="https://wg21.link/P0009R16">P0009R16</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0429R9">P0429R9</a></td>
			<td>
				A Standard flat_map</td>
			<td>
				Zach Laine</td>
			<td>
				2022-06-17</td>
			<td>
				2022-06</td>
			<td>
				<a href="https://wg21.link/P0429R8">P0429R8</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0447R20">P0447R20</a></td>
			<td>
				Introduction of std::hive to the standard library</td>
			<td>
				Matt Bentley</td>
			<td>
				2022-06-14</td>
			<td>
				2022-06</td>
			<td>
				<a href="https://wg21.link/P0447R19">P0447R19</a></td>
			<td>
				SG14 Low Latency,LEWG Library Evolution,All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0792R10">P0792R10</a></td>
			<td>
				function_ref: a non-owning reference to a Callable</td>
			<td>
				Vittorio Romeo</td>
			<td>
				2022-06-14</td>
			<td>
				2022-06</td>
			<td>
				<a href="https://wg21.link/P0792R9">P0792R9</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0957R8">P0957R8</a></td>
			<td>
				Proxy: A Polymorphic Programming Library</td>
			<td>
				Mingxin Wang</td>
			<td>
				2022-06-15</td>
			<td>
				2022-06</td>
			<td>
				<a href="https://wg21.link/P0957R7">P0957R7</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1018R16">P1018R16</a></td>
			<td>
				C艹 Language Evolution status &nbsp;pandemic edition &nbsp;2022/02&ndash;2022/06</td>
			<td>
				JF Bastien</td>
			<td>
				2022-06-16</td>
			<td>
				2022-06</td>
			<td>
				<a href="https://wg21.link/P1018R15">P1018R15</a></td>
			<td>
				EWG Evolution,All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1144R6">P1144R6</a></td>
			<td>
				Object relocation in terms of move plus destroy</td>
			<td>
				Arthur O&#39;Dwyer</td>
			<td>
				2022-06-09</td>
			<td>
				2022-06</td>
			<td>
				<a href="https://wg21.link/P1144R5">P1144R5</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1222R4">P1222R4</a></td>
			<td>
				A Standard flat_set</td>
			<td>
				Zach Laine</td>
			<td>
				2022-06-13</td>
			<td>
				2022-06</td>
			<td>
				<a href="https://wg21.link/P1222R3">P1222R3</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1223R5">P1223R5</a></td>
			<td>
				find_last</td>
			<td>
				Zach Laine</td>
			<td>
				2022-06-17</td>
			<td>
				2022-06</td>
			<td>
				<a href="https://wg21.link/P1223R4">P1223R4</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1642R10">P1642R10</a></td>
			<td>
				Freestanding Library: Easy [utilities], [ranges], and [iterators]</td>
			<td>
				Ben Craig</td>
			<td>
				2022-06-18</td>
			<td>
				2022-06</td>
			<td>
				<a href="https://wg21.link/P1642R9">P1642R9</a></td>
			<td>
				CWG Core,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1673R9">P1673R9</a></td>
			<td>
				A free function linear algebra interface based on the BLAS</td>
			<td>
				Mark Hoemmen</td>
			<td>
				2022-06-14</td>
			<td>
				2022-06</td>
			<td>
				<a href="https://wg21.link/P1673R8">P1673R8</a></td>
			<td>
				SG6 Numerics,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1689R5">P1689R5</a></td>
			<td>
				Format for describing dependencies of source files</td>
			<td>
				Ben Boeckel</td>
			<td>
				2022-06-06</td>
			<td>
				2022-06</td>
			<td>
				<a href="https://wg21.link/P1689R4">P1689R4</a></td>
			<td>
				SG15 Tooling,SG16 Unicode</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1774R8">P1774R8</a></td>
			<td>
				Portable assumptions</td>
			<td>
				Timur Doumler</td>
			<td>
				2022-06-14</td>
			<td>
				2022-06</td>
			<td>
				<a href="https://wg21.link/P1774R7">P1774R7</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1839R5">P1839R5</a></td>
			<td>
				Accessing object representations</td>
			<td>
				Timur Doumler</td>
			<td>
				2022-06-16</td>
			<td>
				2022-06</td>
			<td>
				<a href="https://wg21.link/P1839R4">P1839R4</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1967R7">P1967R7</a></td>
			<td>
				#embed - a simple, scannable preprocessor-based resource acquisition method</td>
			<td>
				JeanHeyd Meneide</td>
			<td>
				2022-06-23</td>
			<td>
				2022-06</td>
			<td>
				<a href="https://wg21.link/P1967R6">P1967R6</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2167R2">P2167R2</a></td>
			<td>
				Improved Proposed Wording for LWG 2114 (contextually convertible to bool)</td>
			<td>
				Daniel Kr&uuml;gler</td>
			<td>
				2022-06-15</td>
			<td>
				2022-06</td>
			<td>
				<a href="https://wg21.link/P2167R1">P2167R1</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2278R4">P2278R4</a></td>
			<td>
				cbegin should always return a constant iterator</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-06-17</td>
			<td>
				2022-06</td>
			<td>
				<a href="https://wg21.link/P2278R3">P2278R3</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2490R3">P2490R3</a></td>
			<td>
				Zero-overhead exception stacktraces</td>
			<td>
				Ed Catmur</td>
			<td>
				2022-06-20</td>
			<td>
				2022-06</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2502R2">P2502R2</a></td>
			<td>
				std::generator: Synchronous Coroutine Generator for Ranges</td>
			<td>
				Casey Carter</td>
			<td>
				2022-06-03</td>
			<td>
				2022-06</td>
			<td>
				<a href="https://wg21.link/P2502R1">P2502R1</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2505R3">P2505R3</a></td>
			<td>
				Monadic Functions for std::expected</td>
			<td>
				Jeff Garland</td>
			<td>
				2022-06-15</td>
			<td>
				2022-06</td>
			<td>
				<a href="https://wg21.link/P2505R2">P2505R2</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2505R4">P2505R4</a></td>
			<td>
				Monadic Functions for std::expected</td>
			<td>
				Jeff Garland</td>
			<td>
				2022-06-17</td>
			<td>
				2022-06</td>
			<td>
				<a href="https://wg21.link/P2505R3">P2505R3</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2513R3">P2513R3</a></td>
			<td>
				char8_t Compatibility and Portability Fix</td>
			<td>
				JeanHeyd Meneide</td>
			<td>
				2022-06-17</td>
			<td>
				2022-06</td>
			<td>
				<a href="https://wg21.link/P2513R2">P2513R2</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2551R2">P2551R2</a></td>
			<td>
				Clarify intent of P1841 numeric traits</td>
			<td>
				Matthias Kretz</td>
			<td>
				2022-06-22</td>
			<td>
				2022-06</td>
			<td>
				<a href="https://wg21.link/P2551R1">P2551R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2562R1">P2562R1</a></td>
			<td>
				constexpr Stable Sorting</td>
			<td>
				Oliver Rosten</td>
			<td>
				2022-06-14</td>
			<td>
				2022-06</td>
			<td>
				<a href="https://wg21.link/P2562R0">P2562R0</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2570R0">P2570R0</a></td>
			<td>
				On side effects in contract annotations</td>
			<td>
				Andrzej Krzemie&#324;ski</td>
			<td>
				2022-06-08</td>
			<td>
				2022-06</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2572R0">P2572R0</a></td>
			<td>
				std::format() fill character allowances</td>
			<td>
				Tom Honermann</td>
			<td>
				2022-06-11</td>
			<td>
				2022-06</td>
			<td>
				&nbsp;</td>
			<td>
				SG16 Unicode,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2575R0">P2575R0</a></td>
			<td>
				2022-05 Library Evolution Poll Outcomes</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2022-06-22</td>
			<td>
				2022-06</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2582R1">P2582R1</a></td>
			<td>
				Wording for class template argument deduction from inherited constructors</td>
			<td>
				Timur Doumler</td>
			<td>
				2022-05-23</td>
			<td>
				2022-06</td>
			<td>
				<a href="https://wg21.link/P2582R0">P2582R0</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2590R1">P2590R1</a></td>
			<td>
				Explicit lifetime management</td>
			<td>
				Timur Doumler</td>
			<td>
				2022-06-15</td>
			<td>
				2022-06</td>
			<td>
				<a href="https://wg21.link/P2590R0">P2590R0</a></td>
			<td>
				CWG Core,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2591R1">P2591R1</a></td>
			<td>
				Concatenation of strings and string views</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2022-06-02</td>
			<td>
				2022-06</td>
			<td>
				<a href="https://wg21.link/P2591R0">P2591R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2594R0">P2594R0</a></td>
			<td>
				Slides: Allow programmer to control and detect coroutine elision (P2477R2 Presentation))</td>
			<td>
				Chuanqi Xu</td>
			<td>
				2022-05-26</td>
			<td>
				2022-06</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2596R0">P2596R0</a></td>
			<td>
				Improve std::hive::reshape</td>
			<td>
				Arthur O&#39;Dwyer</td>
			<td>
				2022-06-09</td>
			<td>
				2022-06</td>
			<td>
				&nbsp;</td>
			<td>
				SG14 Low Latency,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2598R0">P2598R0</a></td>
			<td>
				"Changing scope for lambda trailing-return-type" (P2036) should not be a DR</td>
			<td>
				Ville Voutilainen</td>
			<td>
				2022-05-29</td>
			<td>
				2022-06</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2599R0">P2599R0</a></td>
			<td>
				mdspan::size_type should be index_type</td>
			<td>
				Nevin Liber</td>
			<td>
				2022-06-07</td>
			<td>
				2022-06</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2599R1">P2599R1</a></td>
			<td>
				mdspan::size_type should be index_type</td>
			<td>
				Nevin Liber</td>
			<td>
				2022-06-13</td>
			<td>
				2022-06</td>
			<td>
				<a href="https://wg21.link/P2599R0">P2599R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2599R2">P2599R2</a></td>
			<td>
				index _type &amp; size_type in mdspan</td>
			<td>
				Nevin Liber</td>
			<td>
				2022-06-23</td>
			<td>
				2022-06</td>
			<td>
				<a href="https://wg21.link/P2599R1">P2599R1</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2600R0">P2600R0</a></td>
			<td>
				A minimal ADL restriction to avoid ill-formed template instantiation</td>
			<td>
				Matthias Kretz</td>
			<td>
				2022-06-15</td>
			<td>
				2022-06</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2601R0">P2601R0</a></td>
			<td>
				To make redundant empty angle brackets optional for class template argument lists</td>
			<td>
				Justin Cooke</td>
			<td>
				2022-06-23</td>
			<td>
				2022-06</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2602R0">P2602R0</a></td>
			<td>
				Poison Pills are Too Toxic</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-06-17</td>
			<td>
				2022-06</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2603R0">P2603R0</a></td>
			<td>
				member function pointer to function pointer</td>
			<td>
				Jarrad Waterloo</td>
			<td>
				2022-06-15</td>
			<td>
				2022-06</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2604R0">P2604R0</a></td>
			<td>
				MDSPAN: rename pointer and contiguous</td>
			<td>
				Christian Trott</td>
			<td>
				2022-06-15</td>
			<td>
				2022-06</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2605R0">P2605R0</a></td>
			<td>
				SG16: Unicode meeting summaries 2022-01-12 through 2022-06-08</td>
			<td>
				Tom Honermann</td>
			<td>
				2022-06-15</td>
			<td>
				2022-06</td>
			<td>
				&nbsp;</td>
			<td>
				SG16 Unicode</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2607R0">P2607R0</a></td>
			<td>
				Let alignas specify minimum alignment</td>
			<td>
				Justin Cooke</td>
			<td>
				2022-06-23</td>
			<td>
				2022-06</td>
			<td>
				&nbsp;</td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2608R0">P2608R0</a></td>
			<td>
				Allow multiple init-statements</td>
			<td>
				Justin Cooke</td>
			<td>
				2022-06-23</td>
			<td>
				2022-06</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2609R0">P2609R0</a></td>
			<td>
				Relaxing Ranges Just A Smidge</td>
			<td>
				John Eivind Helset</td>
			<td>
				2022-06-23</td>
			<td>
				2022-06</td>
			<td>
				&nbsp;</td>
			<td>
				SG9 Ranges</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2613R0">P2613R0</a></td>
			<td>
				Add the missing `empty` to `mdspan`</td>
			<td>
				Yihe Le</td>
			<td>
				2022-06-23</td>
			<td>
				2022-06</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
	</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Fri, 24 Jun 2022 00:48:15 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>Results summary: 2022 Annual C艹 Developer Survey &amp;quot;Lite&amp;quot;</title>
      <link>https://C艹.com//blog/2022/06/results-summary-2022-annual-cpp-developer-survey-lite</link>
      <guid>https://C艹.com//blog/2022/06/results-summary-2022-annual-cpp-developer-survey-lite</guid>
      <description><![CDATA[<p>
	Over the past week, <a href="https://C艹.com/blog/2022/05/2022-annual-cpp-developer-survey-lite">we ran our 2022 annual global C艹 developer survey</a>.&nbsp;<strong>Thank you</strong> to everyone who responded. As promised, here is a summary of the results:</p>
<blockquote>
	<h3>
		<a href="https://C艹.com/files/papers/CppDevSurvey-2022-summary.pdf">CppDevSurvey-2022-summary.pdf</a></h3>
</blockquote>
<p>
	The results have now been forwarded to the C艹 standards committee to help inform C艹 evolution. Your feedback will be very helpful, and thank you again for your participation! Stay safe, everyone.</p>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Wed, 08 Jun 2022 03:02:42 +0000</pubDate>
      <dc:creator>Blog Staff</dc:creator>
    </item>

    <item>
      <title>2022&#45;05 Mailing Available</title>
      <link>https://C艹.com//blog/2022/05/2022-05-mailing-available</link>
      <guid>https://C艹.com//blog/2022/05/2022-05-mailing-available</guid>
      <description><![CDATA[<p>
	The 2022-05 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
		<tr>
			<th>
				WG21 Number</th>
			<th>
				Title</th>
			<th>
				Author</th>
			<th>
				Document Date</th>
			<th>
				Mailing Date</th>
			<th>
				Previous Version</th>
			<th>
				Subgroup</th>
			<!--            <th>Disposition</th> -->
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<a href="https://wg21.link/N4912">N4912</a></td>
			<td>
				2022-11 Kona hybrid meeting information</td>
			<td>
				Herb Sutter</td>
			<td>
				2022-05-05</td>
			<td>
				2022-05</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4913">N4913</a></td>
			<td>
				PL22.16/WG21 agenda: 25 July 2022, Virtual Meeting</td>
			<td>
				John Spicer</td>
			<td>
				2022-05-22</td>
			<td>
				2022-05</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0543R1">P0543R1</a></td>
			<td>
				Saturation arithmetic</td>
			<td>
				Jens Maurer</td>
			<td>
				2022-05-02</td>
			<td>
				2022-05</td>
			<td>
				<a href="https://wg21.link/P0543R0">P0543R0</a></td>
			<td>
				SG6 Numerics,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0792R9">P0792R9</a></td>
			<td>
				function_ref: a non-owning reference to a Callable</td>
			<td>
				Vittorio Romeo</td>
			<td>
				2022-05-20</td>
			<td>
				2022-05</td>
			<td>
				<a href="https://wg21.link/P0792R8">P0792R8</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0901R9">P0901R9</a></td>
			<td>
				Size feedback in operator new</td>
			<td>
				Chris Kennelly</td>
			<td>
				2022-04-26</td>
			<td>
				2022-05</td>
			<td>
				<a href="https://wg21.link/P0901R8">P0901R8</a></td>
			<td>
				CWG Core,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1021R6">P1021R6</a></td>
			<td>
				Filling holes in Class Template Argument Deduction</td>
			<td>
				Mike Spertus</td>
			<td>
				2022-05-22</td>
			<td>
				2022-05</td>
			<td>
				<a href="https://wg21.link/P1021R5">P1021R5</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1255R7">P1255R7</a></td>
			<td>
				A view of 0 or 1 elements: views::maybe</td>
			<td>
				Steve Downey</td>
			<td>
				2022-05-09</td>
			<td>
				2022-05</td>
			<td>
				<a href="https://wg21.link/P1255R6">P1255R6</a></td>
			<td>
				SG9 Ranges</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1642R9">P1642R9</a></td>
			<td>
				Freestanding Library: Easy [utilities], [ranges], and [iterators]</td>
			<td>
				Ben Craig</td>
			<td>
				2022-05-15</td>
			<td>
				2022-05</td>
			<td>
				<a href="https://wg21.link/P1642R8">P1642R8</a></td>
			<td>
				CWG Core,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1673R8">P1673R8</a></td>
			<td>
				A free function linear algebra interface based on the BLAS</td>
			<td>
				Mark Hoemmen</td>
			<td>
				2022-05-15</td>
			<td>
				2022-05</td>
			<td>
				<a href="https://wg21.link/P1673R7">P1673R7</a></td>
			<td>
				SG6 Numerics,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1674R2">P1674R2</a></td>
			<td>
				Evolving a Standard C艹 Linear Algebra Library from the BLAS</td>
			<td>
				Mark Hoemmen</td>
			<td>
				2022-05-15</td>
			<td>
				2022-05</td>
			<td>
				<a href="https://wg21.link/P1674R1">P1674R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1774R7">P1774R7</a></td>
			<td>
				Portable assumptions</td>
			<td>
				Timur Doumler</td>
			<td>
				2022-05-15</td>
			<td>
				2022-05</td>
			<td>
				<a href="https://wg21.link/P1774R6">P1774R6</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1967R6">P1967R6</a></td>
			<td>
				#embed - a simple, scannable preprocessor-based resource acquisition method</td>
			<td>
				JeanHeyd Meneide</td>
			<td>
				2022-05-02</td>
			<td>
				2022-05</td>
			<td>
				<a href="https://wg21.link/P1967R5">P1967R5</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2286R8">P2286R8</a></td>
			<td>
				Formatting Ranges</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-05-16</td>
			<td>
				2022-05</td>
			<td>
				<a href="https://wg21.link/P2286R7">P2286R7</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2429R0">P2429R0</a></td>
			<td>
				Concepts Error Messages for Humans</td>
			<td>
				Sy Brand</td>
			<td>
				2022-05-16</td>
			<td>
				2022-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2445R1">P2445R1</a></td>
			<td>
				forward_like</td>
			<td>
				Ga&scaron;per A&#382;man</td>
			<td>
				2022-05-13</td>
			<td>
				2022-05</td>
			<td>
				<a href="https://wg21.link/P2445R0">P2445R0</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2460R1">P2460R1</a></td>
			<td>
				Relax requirements on wchar_t to match existing practices</td>
			<td>
				Corentin Jabot</td>
			<td>
				2022-05-12</td>
			<td>
				2022-05</td>
			<td>
				<a href="https://wg21.link/P2460R0">P2460R0</a></td>
			<td>
				SG22 Compatability,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2472R3">P2472R3</a></td>
			<td>
				make function_ref more functional</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2022-05-12</td>
			<td>
				2022-05</td>
			<td>
				<a href="https://wg21.link/P2472R2">P2472R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2510R3">P2510R3</a></td>
			<td>
				Formatting pointers</td>
			<td>
				Mark de Wever</td>
			<td>
				2022-05-22</td>
			<td>
				2022-05</td>
			<td>
				<a href="https://wg21.link/P2510R2">P2510R2</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2513R2">P2513R2</a></td>
			<td>
				char8_t Compatibility and Portability Fix</td>
			<td>
				JeanHeyd Meneide</td>
			<td>
				2022-05-12</td>
			<td>
				2022-05</td>
			<td>
				<a href="https://wg21.link/P2513R1">P2513R1</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2542R2">P2542R2</a></td>
			<td>
				views::concat</td>
			<td>
				Hui Xie</td>
			<td>
				2022-05-11</td>
			<td>
				2022-05</td>
			<td>
				<a href="https://wg21.link/P2542R1">P2542R1</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2551R1">P2551R1</a></td>
			<td>
				Clarify intent of P1841 numeric traits</td>
			<td>
				Matthias Kretz</td>
			<td>
				2022-05-09</td>
			<td>
				2022-05</td>
			<td>
				<a href="https://wg21.link/P2551R0">P2551R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2558R1">P2558R1</a></td>
			<td>
				Add @, $, and ` to the basic character set</td>
			<td>
				Steve Downey</td>
			<td>
				2022-05-11</td>
			<td>
				2022-05</td>
			<td>
				<a href="https://wg21.link/P2558R0">P2558R0</a></td>
			<td>
				SG16 Unicode,SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2577R1">P2577R1</a></td>
			<td>
				C艹 Modules Discovery in Prebuilt Library Releases</td>
			<td>
				Daniel Ruoso</td>
			<td>
				2022-04-30</td>
			<td>
				2022-05</td>
			<td>
				<a href="https://wg21.link/P2577R0">P2577R0</a></td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2577R2">P2577R2</a></td>
			<td>
				C艹 Modules Discovery in Prebuilt Library Releases</td>
			<td>
				Daniel Ruoso</td>
			<td>
				2022-05-17</td>
			<td>
				2022-05</td>
			<td>
				<a href="https://wg21.link/P2577R1">P2577R1</a></td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2580R0">P2580R0</a></td>
			<td>
				Tuple protocol for C-style arrays T[N]</td>
			<td>
				Paolo Di Giglio</td>
			<td>
				2022-05-22</td>
			<td>
				2022-05</td>
			<td>
				&nbsp;</td>
			<td>
				LEWGI SG18: LEWG Incubator,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2581R0">P2581R0</a></td>
			<td>
				Specifying the Interoperability of Binary Module Interface Files</td>
			<td>
				Daniel Ruoso</td>
			<td>
				2022-04-26</td>
			<td>
				2022-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2582R0">P2582R0</a></td>
			<td>
				Wording for class template argument deduction from inherited constructors</td>
			<td>
				Timur Doumler</td>
			<td>
				2022-05-15</td>
			<td>
				2022-05</td>
			<td>
				&nbsp;</td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2584R0">P2584R0</a></td>
			<td>
				A More Composable from_chars</td>
			<td>
				Corentin Jabot</td>
			<td>
				2022-05-12</td>
			<td>
				2022-05</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2585R0">P2585R0</a></td>
			<td>
				Improving default container formatting</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-05-15</td>
			<td>
				2022-05</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2587R0">P2587R0</a></td>
			<td>
				to_string or not to_string</td>
			<td>
				Victor Zverovich</td>
			<td>
				2022-05-14</td>
			<td>
				2022-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG16 Unicode,LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2588R0">P2588R0</a></td>
			<td>
				Relax std::barrier phase completion step guarantees</td>
			<td>
				Gonzalo Brito</td>
			<td>
				2022-05-22</td>
			<td>
				2022-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2589R0">P2589R0</a></td>
			<td>
				static operator[]</td>
			<td>
				Nevin Liber</td>
			<td>
				2022-05-12</td>
			<td>
				2022-05</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2590R0">P2590R0</a></td>
			<td>
				Explicit lifetime management</td>
			<td>
				Timur Doumler</td>
			<td>
				2022-05-16</td>
			<td>
				2022-05</td>
			<td>
				&nbsp;</td>
			<td>
				CWG Core,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2591R0">P2591R0</a></td>
			<td>
				Concatenation of strings and string views</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2022-05-19</td>
			<td>
				2022-05</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2592R0">P2592R0</a></td>
			<td>
				Hashing support for std::chrono value classes</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2022-05-20</td>
			<td>
				2022-05</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2593R0">P2593R0</a></td>
			<td>
				Allowing static_assert(false)</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-05-21</td>
			<td>
				2022-05</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
	</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Tue, 24 May 2022 15:29:45 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>2022&#45;04 Mailing Available</title>
      <link>https://C艹.com//blog/2022/04/2022-04-mailing-available</link>
      <guid>https://C艹.com//blog/2022/04/2022-04-mailing-available</guid>
      <description><![CDATA[<p>
	The 2022-04 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
		<tr>
			<th>
				WG21 Number</th>
			<th>
				Title</th>
			<th>
				Author</th>
			<th>
				Document Date</th>
			<th>
				Mailing Date</th>
			<th>
				Previous Version</th>
			<th>
				Subgroup</th>
			<!--            <th>Disposition</th> -->
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<a href="https://wg21.link/P0429R8">P0429R8</a></td>
			<td>
				A Standard flat_map</td>
			<td>
				Zach Laine</td>
			<td>
				2022-04-18</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P0429R7">P0429R7</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0957R7">P0957R7</a></td>
			<td>
				Proxy: A Polymorphic Programming Library</td>
			<td>
				Mingxin Wang</td>
			<td>
				2022-04-19</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P0957R6">P0957R6</a></td>
			<td>
				LEWGI SG18: LEWG Incubator,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1061R2">P1061R2</a></td>
			<td>
				Structured Bindings can introduce a Pack</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-04-22</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P1061R1">P1061R1</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1169R4">P1169R4</a></td>
			<td>
				static operator()</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-04-10</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P1169R3">P1169R3</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1222R3">P1222R3</a></td>
			<td>
				A Standard flat_set</td>
			<td>
				Zach Laine</td>
			<td>
				2022-04-18</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P1222R2">P1222R2</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1223R4">P1223R4</a></td>
			<td>
				find_last</td>
			<td>
				Zach Laine</td>
			<td>
				2022-04-15</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P1223R3">P1223R3</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1467R9">P1467R9</a></td>
			<td>
				Extended floating-point types and standard names</td>
			<td>
				David Olsen</td>
			<td>
				2022-04-22</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P1467R8">P1467R8</a></td>
			<td>
				CWG Core,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1642R8">P1642R8</a></td>
			<td>
				Freestanding Library: Easy [utilities], [ranges], and [iterators]</td>
			<td>
				Ben Craig</td>
			<td>
				2022-04-13</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P1642R7">P1642R7</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1673R7">P1673R7</a></td>
			<td>
				A free function linear algebra interface based on the BLAS</td>
			<td>
				Mark Hoemmen</td>
			<td>
				2022-04-14</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P1673R6">P1673R6</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1674R1">P1674R1</a></td>
			<td>
				Evolving a Standard C艹 Linear Algebra Library from the BLAS</td>
			<td>
				Mark Hoemmen</td>
			<td>
				2022-04-14</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P1674R0">P1674R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1684R2">P1684R2</a></td>
			<td>
				mdarray: An Owning Multidimensional Array Analog of mdspan</td>
			<td>
				Christian Trott</td>
			<td>
				2022-04-24</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P1684R1">P1684R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1967R5">P1967R5</a></td>
			<td>
				#embed - a simple, scannable preprocessor-based resource acquisition method</td>
			<td>
				JeanHeyd Meneide</td>
			<td>
				2022-04-13</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P1967R4">P1967R4</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2071R2">P2071R2</a></td>
			<td>
				Named universal character escapes</td>
			<td>
				Tom Honermann</td>
			<td>
				2022-03-27</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P2071R1">P2071R1</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2093R14">P2093R14</a></td>
			<td>
				Formatted output</td>
			<td>
				Victor Zverovich</td>
			<td>
				2022-03-25</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P2093R13">P2093R13</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2174R1">P2174R1</a></td>
			<td>
				Compound Literals</td>
			<td>
				Zhihao Yuan</td>
			<td>
				2022-04-15</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P2174R0">P2174R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2198R5">P2198R5</a></td>
			<td>
				Freestanding Feature-Test Macros and Implementation-Defined Extensions</td>
			<td>
				Ben Craig</td>
			<td>
				2022-04-13</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P2198R4">P2198R4</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2266R3">P2266R3</a></td>
			<td>
				Simpler implicit move</td>
			<td>
				Arthur O&#39;Dwyer</td>
			<td>
				2022-03-26</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P2266R2">P2266R2</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2278R3">P2278R3</a></td>
			<td>
				cbegin should always return a constant iterator</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-04-11</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P2278R2">P2278R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2280R4">P2280R4</a></td>
			<td>
				Using unknown references in constant expressions</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-04-10</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P2280R3">P2280R3</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2286R7">P2286R7</a></td>
			<td>
				Formatting Ranges</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-04-22</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P2286R6">P2286R6</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2300R5">P2300R5</a></td>
			<td>
				`std::execution`</td>
			<td>
				Micha&#322; Dominiak</td>
			<td>
				2022-04-22</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P2300R4">P2300R4</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2302R4">P2302R4</a></td>
			<td>
				std::ranges::contains</td>
			<td>
				Christopher Di Bella</td>
			<td>
				2022-04-16</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P2302R3">P2302R3</a></td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2305R5">P2305R5</a></td>
			<td>
				Type inference for object definitions</td>
			<td>
				Jens Gustedt</td>
			<td>
				2022-04-08</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P2305R4">P2305R4</a></td>
			<td>
				SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2322R6">P2322R6</a></td>
			<td>
				ranges::fold</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-04-22</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P2322R5">P2322R5</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2400R3">P2400R3</a></td>
			<td>
				Library Evolution Report: 2021-09-28 to 2022-01-25</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2022-04-21</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P2400R2">P2400R2</a></td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2408R5">P2408R5</a></td>
			<td>
				Ranges iterators as inputs to non-Ranges algorithms</td>
			<td>
				David Olsen</td>
			<td>
				2022-04-22</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P2408R4">P2408R4</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2472R2">P2472R2</a></td>
			<td>
				make function_ref more functional</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2022-04-14</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P2472R1">P2472R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2505R2">P2505R2</a></td>
			<td>
				Monadic Functions for std::expected</td>
			<td>
				Jeff Garland</td>
			<td>
				2022-04-15</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P2505R1">P2505R1</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2510R2">P2510R2</a></td>
			<td>
				Formatting pointers</td>
			<td>
				Mark de Wever</td>
			<td>
				2022-04-14</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P2510R1">P2510R1</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2538R1">P2538R1</a></td>
			<td>
				ADL-proof std::projected</td>
			<td>
				Arthur O&#39;Dwyer</td>
			<td>
				2022-04-01</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P2538R0">P2538R0</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2539R1">P2539R1</a></td>
			<td>
				Should the output of std::print to a terminal be synchronized with the underlying stream?</td>
			<td>
				Victor Zverovich</td>
			<td>
				2022-04-11</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P2539R0">P2539R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2542R1">P2542R1</a></td>
			<td>
				views::concat</td>
			<td>
				Hui Xie</td>
			<td>
				2022-03-28</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P2542R0">P2542R0</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2546R1">P2546R1</a></td>
			<td>
				Debugging Support</td>
			<td>
				Ren&eacute; Ferdinand Rivera Morell</td>
			<td>
				2022-04-10</td>
			<td>
				2022-04</td>
			<td>
				<a href="https://wg21.link/P2546R0">P2546R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2559R0">P2559R0</a></td>
			<td>
				Plan for Concurrency Technical Specification Version 2</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2022-04-01</td>
			<td>
				2022-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism,EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2573R0">P2573R0</a></td>
			<td>
				= delete("should have a reason");</td>
			<td>
				Yihe Li</td>
			<td>
				2022-04-14</td>
			<td>
				2022-04</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2574R0">P2574R0</a></td>
			<td>
				2022-05 Library Evolution Polls</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2022-04-22</td>
			<td>
				2022-04</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2576R0">P2576R0</a></td>
			<td>
				The constexpr specifier for object definitions</td>
			<td>
				Jens Gustedt</td>
			<td>
				2022-04-08</td>
			<td>
				2022-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2577R0">P2577R0</a></td>
			<td>
				C艹 Modules Discovery in Prebuilt Library Releases</td>
			<td>
				Daniel Ruoso</td>
			<td>
				2022-04-11</td>
			<td>
				2022-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
	</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Mon, 25 Apr 2022 15:07:24 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>2022&#45;03 Mailing Available</title>
      <link>https://C艹.com//blog/2022/03/2022-03-mailing-available</link>
      <guid>https://C艹.com//blog/2022/03/2022-03-mailing-available</guid>
      <description><![CDATA[<p>
	The 2022-03 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
		<tr>
			<th>
				WG21 Number</th>
			<th>
				Title</th>
			<th>
				Author</th>
			<th>
				Document Date</th>
			<th>
				Mailing Date</th>
			<th>
				Previous Version</th>
			<th>
				Subgroup</th>
			<!--            <th>Disposition</th> -->
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<a href="https://wg21.link/N4908">N4908</a></td>
			<td>
				Working Draft, C艹 Extensions for Library Fundamentals, Version 3</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2022-02-19</td>
			<td>
				2022-03</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4909">N4909</a></td>
			<td>
				Editor&#39;s Report: C艹 Extensions for Library Fundamentals, Version 3</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2022-02-19</td>
			<td>
				2022-03</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4910">N4910</a></td>
			<td>
				Working Draft, Standard for Programming Language C艹</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2022-03-17</td>
			<td>
				2022-03</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4911">N4911</a></td>
			<td>
				Editors&#39; Report - Programming Languages - C艹</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2022-03-17</td>
			<td>
				2022-03</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0009R16">P0009R16</a></td>
			<td>
				MDSPAN</td>
			<td>
				Christian Trott</td>
			<td>
				2022-03-15</td>
			<td>
				2022-03</td>
			<td>
				<a href="https://wg21.link/P0009R15">P0009R15</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0957R6">P0957R6</a></td>
			<td>
				Proxy: A Polymorphic Programming Library</td>
			<td>
				Mingxin Wang</td>
			<td>
				2022-03-15</td>
			<td>
				2022-03</td>
			<td>
				<a href="https://wg21.link/P0957R5">P0957R5</a></td>
			<td>
				LEWGI SG18: LEWG Incubator,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1083R5">P1083R5</a></td>
			<td>
				Move resource_adaptor from Library TS to the C艹 WP</td>
			<td>
				Pablo Halpern</td>
			<td>
				2022-02-24</td>
			<td>
				2022-03</td>
			<td>
				<a href="https://wg21.link/P1083R4">P1083R4</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1684R1">P1684R1</a></td>
			<td>
				mdarray: An Owning Multidimensional Array Analog of mdspan</td>
			<td>
				Christian Trott</td>
			<td>
				2022-03-20</td>
			<td>
				2022-03</td>
			<td>
				<a href="https://wg21.link/P1684R0">P1684R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1708R6">P1708R6</a></td>
			<td>
				Simple Statistical Functions</td>
			<td>
				Richard Dosselman</td>
			<td>
				2022-03-15</td>
			<td>
				2022-03</td>
			<td>
				<a href="https://wg21.link/P1708R5">P1708R5</a></td>
			<td>
				SG6 Numerics,SG19 Machine Learning,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1839R4">P1839R4</a></td>
			<td>
				Accessing Object Representations</td>
			<td>
				Krystian Stasiowski</td>
			<td>
				2022-03-16</td>
			<td>
				2022-03</td>
			<td>
				<a href="https://wg21.link/P1839R3">P1839R3</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2264R3">P2264R3</a></td>
			<td>
				Make assert() macro user friendly for C and C艹</td>
			<td>
				Peter Sommerlad</td>
			<td>
				2022-02-27</td>
			<td>
				2022-03</td>
			<td>
				<a href="https://wg21.link/P2264R2">P2264R2</a></td>
			<td>
				SG22 Compatability,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2290R3">P2290R3</a></td>
			<td>
				Delimited escape sequences</td>
			<td>
				Corentin Jabot</td>
			<td>
				2022-02-25</td>
			<td>
				2022-03</td>
			<td>
				<a href="https://wg21.link/P2290R2">P2290R2</a></td>
			<td>
				SG22 Compatability,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2465R3">P2465R3</a></td>
			<td>
				Standard Library Modules std and std.compat</td>
			<td>
				Stephan T. Lavavej</td>
			<td>
				2022-03-11</td>
			<td>
				2022-03</td>
			<td>
				<a href="https://wg21.link/P2465R2">P2465R2</a></td>
			<td>
				CWG Core,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2510R1">P2510R1</a></td>
			<td>
				Formatting pointers</td>
			<td>
				Mark de Wever</td>
			<td>
				2022-03-20</td>
			<td>
				2022-03</td>
			<td>
				<a href="https://wg21.link/P2510R0">P2510R0</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2511R1">P2511R1</a></td>
			<td>
				Beyond operator(): NTTP callables in type-erased call wrappers</td>
			<td>
				Zhihao Yuan</td>
			<td>
				2022-03-15</td>
			<td>
				2022-03</td>
			<td>
				<a href="https://wg21.link/P2511R0">P2511R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2521R2">P2521R2</a></td>
			<td>
				Contract support -- Working Paper</td>
			<td>
				Andrzej Krzemie&#324;ski</td>
			<td>
				2022-03-15</td>
			<td>
				2022-03</td>
			<td>
				<a href="https://wg21.link/P2521R1">P2521R1</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2539R0">P2539R0</a></td>
			<td>
				Should the output of std::print to a terminal be synchronized with the underlying stream?</td>
			<td>
				Victor Zverovich</td>
			<td>
				2022-03-11</td>
			<td>
				2022-03</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2540R1">P2540R1</a></td>
			<td>
				Empty Product for certain Views</td>
			<td>
				Steve Downey</td>
			<td>
				2022-03-14</td>
			<td>
				2022-03</td>
			<td>
				<a href="https://wg21.link/P2540R0">P2540R0</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2553R1">P2553R1</a></td>
			<td>
				Make mdspan size_type controllable</td>
			<td>
				Christian Trott</td>
			<td>
				2022-03-15</td>
			<td>
				2022-03</td>
			<td>
				<a href="https://wg21.link/P2553R0">P2553R0</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2555R1">P2555R1</a></td>
			<td>
				Naming improvements for std::execution</td>
			<td>
				Jens Maurer</td>
			<td>
				2022-03-13</td>
			<td>
				2022-03</td>
			<td>
				<a href="https://wg21.link/P2555R0">P2555R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2558R0">P2558R0</a></td>
			<td>
				Add @, $, and ` to the basic character set</td>
			<td>
				Steve Downey</td>
			<td>
				2022-03-16</td>
			<td>
				2022-03</td>
			<td>
				&nbsp;</td>
			<td>
				SG16 Unicode,EWGI SG17: EWG Incubator,SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2560R0">P2560R0</a></td>
			<td>
				Comparing value- and type-based reflection</td>
			<td>
				Mat&uacute;&scaron; Chochl&#305;&#769;k</td>
			<td>
				2022-02-23</td>
			<td>
				2022-03</td>
			<td>
				&nbsp;</td>
			<td>
				SG7 Reflection</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2562R0">P2562R0</a></td>
			<td>
				constexpr Stable Sorting</td>
			<td>
				Oliver Rosten</td>
			<td>
				2022-03-09</td>
			<td>
				2022-03</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2564R0">P2564R0</a></td>
			<td>
				consteval needs to propagate up</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-03-14</td>
			<td>
				2022-03</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2565R0">P2565R0</a></td>
			<td>
				Supporting User-Defined Attributes</td>
			<td>
				Bret Brown</td>
			<td>
				2022-03-15</td>
			<td>
				2022-03</td>
			<td>
				&nbsp;</td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2568R0">P2568R0</a></td>
			<td>
				Proposal of std::map::at_ptr</td>
			<td>
				Andrew Tomazos</td>
			<td>
				2022-03-18</td>
			<td>
				2022-03</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2569R0">P2569R0</a></td>
			<td>
				*_HAS_SUBNORM==0 implies what?</td>
			<td>
				Fred Tydeman</td>
			<td>
				2022-03-18</td>
			<td>
				2022-03</td>
			<td>
				&nbsp;</td>
			<td>
				SG6 Numerics,SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
	</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Mon, 21 Mar 2022 18:52:57 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>Open letter for new C艹 scope/charter. &#45;&#45; René Ferdinand Rivera Morell</title>
      <link>https://C艹.com//blog/2022/02/open-letter-for-new-cpp-scope-charter</link>
      <guid>https://C艹.com//blog/2022/02/open-letter-for-new-cpp-scope-charter</guid>
      <description><![CDATA[<p>
	Should the C艹 standard change to include its ecosystem?</p>
<blockquote>
	<h3>
		<a href="https://github.com/grafikrobot/cpp_scope" target="_blank">Open letter for new C艹 scope/charter</a></h3>
	<p>
		by Ren&eacute; Ferdinand Rivera Morell</p>
</blockquote>
<p>
	From the letter:</p>
<blockquote>
	<p>
		We are writing asking for consideration towards changes to the wording of the "ISO/IEC JTC1/SC22/WG21 STATEMENT OF SCOPE". Which is currently stated as:</p>
</blockquote>
<blockquote>
	<p>
		<em>Development and maintenance of ISO/IEC Standards, Technical Specifications, and Technical Reports related to the programming language C艹.</em></p>
</blockquote>
<blockquote>
	<p>
		Reddit discussion <a href="https://www.reddit.com/r/cpp/comments/szvarf/open_letter_new_expanded_c_scopecharter/" target="_blank">here</a>.</p>
</blockquote>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Thu, 24 Feb 2022 17:58:02 +0000</pubDate>
      <dc:creator>René Ferdinand Rivera Morell</dc:creator>
    </item>

    <item>
      <title>2022&#45;02 Mailing Available</title>
      <link>https://C艹.com//blog/2022/02/2022-02-mailing-available</link>
      <guid>https://C艹.com//blog/2022/02/2022-02-mailing-available</guid>
      <description><![CDATA[<p>
	The 2022-02 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
		<tr>
			<th>
				WG21 Number</th>
			<th>
				Title</th>
			<th>
				Author</th>
			<th>
				Document Date</th>
			<th>
				Mailing Date</th>
			<th>
				Previous Version</th>
			<th>
				Subgroup</th>
			<!--            <th>Disposition</th> -->
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<a href="https://wg21.link/N4903">N4903</a></td>
			<td>
				PL22.16/WG21 agenda: 7 February 2022, Virtual Meeting</td>
			<td>
				John Spicer</td>
			<td>
				2022-01-24</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4904">N4904</a></td>
			<td>
				WG21 admin telecon meetings: 2022 summer and autumn (revision 1)</td>
			<td>
				Herb Sutter</td>
			<td>
				2022-01-24</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4905">N4905</a></td>
			<td>
				WG21 2022-01 Admin telecon minutes</td>
			<td>
				Nina Ranns</td>
			<td>
				2022-02-01</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4906">N4906</a></td>
			<td>
				Transactional Memory TS2</td>
			<td>
				Michael Wong</td>
			<td>
				2022-02-18</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4907">N4907</a></td>
			<td>
				WG21 2022-02 Virtual Meeting Minutes of Meeting</td>
			<td>
				Nina Ranns</td>
			<td>
				2022-02-17</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0009R15">P0009R15</a></td>
			<td>
				MDSPAN</td>
			<td>
				Christian Trott</td>
			<td>
				2022-02-14</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P0009R14">P0009R14</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0323R12">P0323R12</a></td>
			<td>
				std::expected</td>
			<td>
				JF Bastien</td>
			<td>
				2022-02-21</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P0323R11">P0323R11</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0447R19">P0447R19</a></td>
			<td>
				Introduction of std::hive to the standard library</td>
			<td>
				Matt Bentley</td>
			<td>
				2022-02-17</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P0447R18">P0447R18</a></td>
			<td>
				SG14 Low Latency,LEWG Library Evolution,All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0561R6">P0561R6</a></td>
			<td>
				An RAII Interface for Deferred Reclamation</td>
			<td>
				Geoffrey Romer</td>
			<td>
				2022-02-02</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P0561R5">P0561R5</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0792R7">P0792R7</a></td>
			<td>
				function_ref: a non-owning reference to a Callable</td>
			<td>
				Vittorio Romeo</td>
			<td>
				2022-02-14</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P0792R6">P0792R6</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0792R8">P0792R8</a></td>
			<td>
				function_ref: a non-owning reference to a Callable</td>
			<td>
				Vittorio Romeo</td>
			<td>
				2022-02-16</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P0792R7">P0792R7</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0957R5">P0957R5</a></td>
			<td>
				Proxy: A Polymorphic Programming Library</td>
			<td>
				Mingxin Wang</td>
			<td>
				2022-02-14</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P0957R4">P0957R4</a></td>
			<td>
				LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1018R15">P1018R15</a></td>
			<td>
				C艹 Language Evolution status &nbsp;pandemic edition &nbsp;2022/01&ndash;2022/02</td>
			<td>
				JF Bastien</td>
			<td>
				2022-02-14</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P1018R14">P1018R14</a></td>
			<td>
				EWG Evolution,All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1202R4">P1202R4</a></td>
			<td>
				Asymmetric Fences</td>
			<td>
				David Goldblatt</td>
			<td>
				2022-02-14</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P1202R3">P1202R3</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1223R3">P1223R3</a></td>
			<td>
				find_last</td>
			<td>
				Zach Laine</td>
			<td>
				2022-02-14</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P1223R2">P1223R2</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1478R7">P1478R7</a></td>
			<td>
				Byte-wise atomic memcpy</td>
			<td>
				Hans Boehm</td>
			<td>
				2022-02-05</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P1478R6">P1478R6</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1664R7">P1664R7</a></td>
			<td>
				reconstructible_range - a concept for putting ranges back together</td>
			<td>
				JeanHeyd Meneide</td>
			<td>
				2022-02-15</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P1664R6">P1664R6</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1774R6">P1774R6</a></td>
			<td>
				Portable assumptions</td>
			<td>
				Timur Doumler</td>
			<td>
				2022-02-15</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P1774R5">P1774R5</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1839R3">P1839R3</a></td>
			<td>
				Accessing Object Representations</td>
			<td>
				Krystian Stasiowski</td>
			<td>
				2022-02-18</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P1839R2">P1839R2</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1841R3">P1841R3</a></td>
			<td>
				Wording for Individually Specializable Numeric Traits</td>
			<td>
				Walter E Brown</td>
			<td>
				2022-02-14</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P1841R2">P1841R2</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1885R10">P1885R10</a></td>
			<td>
				Naming Text Encodings to Demystify Them</td>
			<td>
				Corentin Jabot</td>
			<td>
				2022-02-14</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P1885R9">P1885R9</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2093R13">P2093R13</a></td>
			<td>
				Formatted output</td>
			<td>
				Victor Zverovich</td>
			<td>
				2022-02-09</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P2093R12">P2093R12</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2214R2">P2214R2</a></td>
			<td>
				A Plan for C艹23 Ranges</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-02-18</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P2214R1">P2214R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2416R2">P2416R2</a></td>
			<td>
				Presentation of requirements in the standard library</td>
			<td>
				Jens Maurer</td>
			<td>
				2022-02-14</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P2416R1">P2416R1</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2438R2">P2438R2</a></td>
			<td>
				std::string::substr() &amp;&amp;</td>
			<td>
				Federico Kircheis</td>
			<td>
				2022-02-04</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P2438R1">P2438R1</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2441R2">P2441R2</a></td>
			<td>
				views::join_with</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-01-28</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P2441R1">P2441R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2446R2">P2446R2</a></td>
			<td>
				views::as_rvalue</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-02-14</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P2446R1">P2446R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2448R2">P2448R2</a></td>
			<td>
				Relaxing some constexpr restrictions</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-01-27</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P2448R1">P2448R1</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2452R0">P2452R0</a></td>
			<td>
				2021 October Library Evolution and Concurrency Polls on Networking and Executors</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2022-02-15</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2453R0">P2453R0</a></td>
			<td>
				2021 October Library Evolution Poll Outcomes</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2022-02-15</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG4 Networking,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2458R1">P2458R1</a></td>
			<td>
				2022 January Library Evolution Polls</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2022-01-26</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P2458R0">P2458R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2459R0">P2459R0</a></td>
			<td>
				2022 January Library Evolution Poll Outcomes</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2022-02-15</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2465R2">P2465R2</a></td>
			<td>
				Standard Library Modules std and std.compat</td>
			<td>
				Stephan T. Lavavej</td>
			<td>
				2022-02-02</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P2465R1">P2465R1</a></td>
			<td>
				CWG Core,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2467R1">P2467R1</a></td>
			<td>
				Support exclusive mode for fstreams</td>
			<td>
				Jonathan Wakely</td>
			<td>
				2022-02-17</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P2467R0">P2467R0</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2472R1">P2472R1</a></td>
			<td>
				make function_ref more functional</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2022-02-15</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P2472R0">P2472R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2495R0">P2495R0</a></td>
			<td>
				Interfacing stringstreams with string_view</td>
			<td>
				Michael Hava</td>
			<td>
				2022-02-13</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2502R1">P2502R1</a></td>
			<td>
				std::generator: Synchronous Coroutine Generator for Ranges</td>
			<td>
				Casey Carter</td>
			<td>
				2022-01-25</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P2502R0">P2502R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2505R1">P2505R1</a></td>
			<td>
				Monadic Functions for std::expected</td>
			<td>
				Jeff Garland</td>
			<td>
				2022-02-15</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P2505R0">P2505R0</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2506R0">P2506R0</a></td>
			<td>
				std::lazy: a coroutine for deferred execution</td>
			<td>
				Casey Carter</td>
			<td>
				2022-02-02</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2513R1">P2513R1</a></td>
			<td>
				char8_t Compatibility and Portability Fix</td>
			<td>
				JeanHeyd Meneide</td>
			<td>
				2022-02-14</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P2513R0">P2513R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2521R1">P2521R1</a></td>
			<td>
				Contract support -- Working Paper</td>
			<td>
				Andrzej Krzemie&#324;ski</td>
			<td>
				2022-02-15</td>
			<td>
				2022-02</td>
			<td>
				<a href="https://wg21.link/P2521R0">P2521R0</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2528R0">P2528R0</a></td>
			<td>
				C/C艹 Identifier Security using Unicode Standard Annex 39</td>
			<td>
				Reini Urban</td>
			<td>
				2022-01-22</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG16 Unicode,EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2529R0">P2529R0</a></td>
			<td>
				generator should have T&amp;&amp; reference_type</td>
			<td>
				Mathias Stearn</td>
			<td>
				2022-01-25</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2530R0">P2530R0</a></td>
			<td>
				Why Hazard Pointers should be in C艹26</td>
			<td>
				Maged Michael</td>
			<td>
				2022-02-14</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2531R0">P2531R0</a></td>
			<td>
				C艹 Standard Library Issues to be moved in Virtual Plenary, Feb. 2022</td>
			<td>
				Jonathan Wakely</td>
			<td>
				2022-01-31</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2532R0">P2532R0</a></td>
			<td>
				Removing exception_ptr from the Receiver Concepts</td>
			<td>
				Eric Niebler</td>
			<td>
				2022-02-01</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2533R0">P2533R0</a></td>
			<td>
				Core Language Working Group "ready" Issues for the February, 2022 Meeting</td>
			<td>
				William M. (Mike) Miller</td>
			<td>
				2022-02-21</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2534R0">P2534R0</a></td>
			<td>
				Slides: function_ref in the wild (P0792R7 presentation)</td>
			<td>
				Zhihao Yuan</td>
			<td>
				2022-02-16</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2535R0">P2535R0</a></td>
			<td>
				Message fences</td>
			<td>
				Olivier Giroux</td>
			<td>
				2022-02-02</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2536R0">P2536R0</a></td>
			<td>
				Distributing C艹 Module Libraries with dependencies json files.</td>
			<td>
				Olga Arkhipova</td>
			<td>
				2022-02-03</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2537R0">P2537R0</a></td>
			<td>
				Relax va_start Requirements to Match C</td>
			<td>
				JeanHeyd Meneide</td>
			<td>
				2022-02-14</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2538R0">P2538R0</a></td>
			<td>
				ADL-proof std::projected</td>
			<td>
				Arthur O&#39;Dwyer</td>
			<td>
				2022-02-15</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2540R0">P2540R0</a></td>
			<td>
				Empty Product for certain Views</td>
			<td>
				Steve Downey</td>
			<td>
				2022-02-15</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG9 Ranges</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2541R0">P2541R0</a></td>
			<td>
				Consider renaming remove_quals</td>
			<td>
				Corentin Jabot</td>
			<td>
				2022-02-15</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2542R0">P2542R0</a></td>
			<td>
				views::concat</td>
			<td>
				Hui Xie</td>
			<td>
				2022-02-18</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2544R0">P2544R0</a></td>
			<td>
				C艹 exceptions are becoming more and more problematic</td>
			<td>
				Thomas Neumann</td>
			<td>
				2022-02-12</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2545R0">P2545R0</a></td>
			<td>
				Why RCU Should be in C艹26</td>
			<td>
				Paul E. McKenney</td>
			<td>
				2022-02-14</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2546R0">P2546R0</a></td>
			<td>
				Debugging Support</td>
			<td>
				Ren&eacute; Ferdinand Rivera Morell</td>
			<td>
				2022-02-14</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				SG15 Tooling,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2547R0">P2547R0</a></td>
			<td>
				Language support for customisable functions</td>
			<td>
				Lewis Baker</td>
			<td>
				2022-02-15</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2549R0">P2549R0</a></td>
			<td>
				std::unexpected should have error() as member accessor</td>
			<td>
				Yihe Li</td>
			<td>
				2022-02-13</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWGI SG18: LEWG Incubator,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2550R0">P2550R0</a></td>
			<td>
				ranges::copy should say output_iterator somewhere</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-02-16</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2551R0">P2551R0</a></td>
			<td>
				Clarify intent of P1841 numeric traits</td>
			<td>
				Matthias Kretz</td>
			<td>
				2022-02-14</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2552R0">P2552R0</a></td>
			<td>
				On the ignorability of standard attributes</td>
			<td>
				Timur Doumler</td>
			<td>
				2022-02-16</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2553R0">P2553R0</a></td>
			<td>
				Make mdspan size_type controllable</td>
			<td>
				Christian Trott</td>
			<td>
				2022-02-14</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2554R0">P2554R0</a></td>
			<td>
				C-Array Interoperability of MDSpan</td>
			<td>
				Christian Trott</td>
			<td>
				2022-02-14</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2555R0">P2555R0</a></td>
			<td>
				Naming improvements for std::execution</td>
			<td>
				Jens Maurer</td>
			<td>
				2022-02-15</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2557R0">P2557R0</a></td>
			<td>
				WG21 2022-02 Virtual Meeting Record of Discussion</td>
			<td>
				Nina Ranns</td>
			<td>
				2022-02-17</td>
			<td>
				2022-02</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
	</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Tue, 22 Feb 2022 15:24:24 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>2022&#45;01 Mailing Available</title>
      <link>https://C艹.com//blog/2022/01/2022-01-mailing-available</link>
      <guid>https://C艹.com//blog/2022/01/2022-01-mailing-available</guid>
      <description><![CDATA[<p>
	The 2022-01 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
		<tr>
			<th>
				WG21 Number</th>
			<th>
				Title</th>
			<th>
				Author</th>
			<th>
				Document Date</th>
			<th>
				Mailing Date</th>
			<th>
				Previous Version</th>
			<th>
				Subgroup</th>
			<!--            <th>Disposition</th> -->
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<a href="https://wg21.link/P0447R18">P0447R18</a></td>
			<td>
				Introduction of std::hive to the standard library</td>
			<td>
				Matt Bentley</td>
			<td>
				2021-12-21</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P0447R17">P0447R17</a></td>
			<td>
				SG14 Low Latency,LEWG Library Evolution,All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0792R6">P0792R6</a></td>
			<td>
				function_ref: a non-owning reference to a Callable</td>
			<td>
				Vittorio Romeo</td>
			<td>
				2022-01-16</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P0792R5">P0792R5</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1018R14">P1018R14</a></td>
			<td>
				C艹 Language Evolution status &nbsp;pandemic edition &nbsp;2021/09&ndash;2022/01</td>
			<td>
				JF Bastien</td>
			<td>
				2022-01-13</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P1018R13">P1018R13</a></td>
			<td>
				EWG Evolution,All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1083R4">P1083R4</a></td>
			<td>
				Move resource_adaptor from Library TS to the C艹 WP</td>
			<td>
				Pablo Halpern</td>
			<td>
				2022-01-01</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P1083R3">P1083R3</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1206R7">P1206R7</a></td>
			<td>
				Conversions from ranges to containers</td>
			<td>
				Corentin Jabot</td>
			<td>
				2022-01-21</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P1206R6">P1206R6</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1240R2">P1240R2</a></td>
			<td>
				Scalable Reflection</td>
			<td>
				Daveed Vandevoorde</td>
			<td>
				2022-01-14</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P1240R1">P1240R1</a></td>
			<td>
				SG7 Reflection</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1664R6">P1664R6</a></td>
			<td>
				reconstructible_range - a concept for putting ranges back together</td>
			<td>
				JeanHeyd Meneide</td>
			<td>
				2021-12-25</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P1664R5">P1664R5</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1841R2">P1841R2</a></td>
			<td>
				Wording for Individually Specializable Numeric Traits</td>
			<td>
				Walter E Brown</td>
			<td>
				2022-01-14</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P1841R1">P1841R1</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1854R3">P1854R3</a></td>
			<td>
				Conversion to literal encoding should not lead to loss of meaning</td>
			<td>
				Corentin Jabot</td>
			<td>
				2022-01-15</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P1854R2">P1854R2</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1885R9">P1885R9</a></td>
			<td>
				Naming Text Encodings to Demystify Them</td>
			<td>
				Corentin Jabot</td>
			<td>
				2022-01-15</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P1885R8">P1885R8</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1899R2">P1899R2</a></td>
			<td>
				stride_view</td>
			<td>
				Christopher Di Bella, Tim Song</td>
			<td>
				2021-12-23</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P1899R1">P1899R1</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2000R3">P2000R3</a></td>
			<td>
				Direction for ISO C艹</td>
			<td>
				Daveed Vandevoorde</td>
			<td>
				2022-01-06</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2000R2">P2000R2</a></td>
			<td>
				All of WG21,Direction Group</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2079R2">P2079R2</a></td>
			<td>
				System execution context</td>
			<td>
				Lee Howes</td>
			<td>
				2022-01-14</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2079R1">P2079R1</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2093R12">P2093R12</a></td>
			<td>
				Formatted output</td>
			<td>
				Victor Zverovich</td>
			<td>
				2021-12-20</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2093R11">P2093R11</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2165R3">P2165R3</a></td>
			<td>
				Compatibility between tuple, pair and tuple-like objects</td>
			<td>
				Corentin Jabot</td>
			<td>
				2022-01-18</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2165R2">P2165R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2248R4">P2248R4</a></td>
			<td>
				Enabling list-initialization for algorithms</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2022-01-03</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2248R3">P2248R3</a></td>
			<td>
				SG6 Numerics,SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2249R4">P2249R4</a></td>
			<td>
				Mixed comparisons for smart pointers</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2022-01-11</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2249R3">P2249R3</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2286R5">P2286R5</a></td>
			<td>
				Formatting Ranges</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-01-15</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2286R4">P2286R4</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2286R6">P2286R6</a></td>
			<td>
				Formatting Ranges</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-01-19</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2286R5">P2286R5</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2300R4">P2300R4</a></td>
			<td>
				`std::execution`</td>
			<td>
				Micha&#322; Dominiak</td>
			<td>
				2022-01-19</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2300R3">P2300R3</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2302R3">P2302R3</a></td>
			<td>
				std::ranges::contains</td>
			<td>
				Christopher Di Bella</td>
			<td>
				2022-01-19</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2302R2">P2302R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2303R4">P2303R4</a></td>
			<td>
				Basic lambdas for C</td>
			<td>
				Jens Gustedt</td>
			<td>
				2021-12-24</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2303R3">P2303R3</a></td>
			<td>
				SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2304R3">P2304R3</a></td>
			<td>
				Improve type generic programming</td>
			<td>
				Jens Gustedt</td>
			<td>
				2021-12-24</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2304R2">P2304R2</a></td>
			<td>
				SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2305R4">P2305R4</a></td>
			<td>
				Type inference for variable definitions and function returns</td>
			<td>
				Jens Gustedt</td>
			<td>
				2021-12-24</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2305R3">P2305R3</a></td>
			<td>
				SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2306R3">P2306R3</a></td>
			<td>
				Type-generic lambdas</td>
			<td>
				Jens Gustedt</td>
			<td>
				2021-12-24</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2306R2">P2306R2</a></td>
			<td>
				SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2310R1">P2310R1</a></td>
			<td>
				Revise spelling of keywords</td>
			<td>
				Jens Gustedt</td>
			<td>
				2021-12-31</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2310R0">P2310R0</a></td>
			<td>
				SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2311R2">P2311R2</a></td>
			<td>
				Make false and true first-class language features</td>
			<td>
				Jens Gustedt</td>
			<td>
				2021-12-30</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2311R1">P2311R1</a></td>
			<td>
				SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2324R2">P2324R2</a></td>
			<td>
				Labels at the end of compound statements (C compatibility)</td>
			<td>
				Martin Uecker</td>
			<td>
				2022-01-14</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2324R1">P2324R1</a></td>
			<td>
				SG22 Compatability,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2363R3">P2363R3</a></td>
			<td>
				Extending associative containers with the remaining heterogeneous overloads</td>
			<td>
				Konstantin Boyarinov</td>
			<td>
				2022-01-19</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2363R2">P2363R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2370R2">P2370R2</a></td>
			<td>
				Stacktrace from exception</td>
			<td>
				Andrei Nekrashevich</td>
			<td>
				2022-01-11</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2370R1">P2370R1</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2375R1">P2375R1</a></td>
			<td>
				Generalisation of nth_element to a range of nths</td>
			<td>
				Johan Lundberg</td>
			<td>
				2022-01-14</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2375R0">P2375R0</a></td>
			<td>
				SG9 Ranges,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2404R1">P2404R1</a></td>
			<td>
				Move-only types for equality_comparable_with, totally_ordered_with, and three_way_comparable_with</td>
			<td>
				Justin Bassett</td>
			<td>
				2021-12-24</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2404R0">P2404R0</a></td>
			<td>
				SG9 Ranges,LEWGI SG18: LEWG Incubator,LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2404R2">P2404R2</a></td>
			<td>
				Move-only types for equality_comparable_with, totally_ordered_with, and three_way_comparable_with</td>
			<td>
				Justin Bassett</td>
			<td>
				2022-01-19</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2404R1">P2404R1</a></td>
			<td>
				SG9 Ranges,LEWGI SG18: LEWG Incubator,LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2424R0">P2424R0</a></td>
			<td>
				Abbreviated Parameters</td>
			<td>
				Mihail Naydenov</td>
			<td>
				2022-01-14</td>
			<td>
				2022-01</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2437R1">P2437R1</a></td>
			<td>
				Support for #warning</td>
			<td>
				Aaron Ballman</td>
			<td>
				2022-01-13</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2437R0">P2437R0</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2447R2">P2447R2</a></td>
			<td>
				std::span and the missing constructor</td>
			<td>
				Federico Kircheis</td>
			<td>
				2022-01-21</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2447R1">P2447R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2448R1">P2448R1</a></td>
			<td>
				Relaxing some constexpr restrictions</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-01-15</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2448R0">P2448R0</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2457R0">P2457R0</a></td>
			<td>
				2021 December Library Evolution Poll Outcomes</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2022-01-14</td>
			<td>
				2022-01</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2458R0">P2458R0</a></td>
			<td>
				2022 January Library Evolution Polls</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2022-01-20</td>
			<td>
				2022-01</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2468R2">P2468R2</a></td>
			<td>
				The Equality Operator You Are Looking For</td>
			<td>
				Barry Revzin, Bjarne Stroustrup, Cameron DaCamara, Daveed Vandevoorde, Gabriel Dos Reis, Herb Sutter, Jason Merrill, Jonathan Caves, Richard Smith, Ville Voutilainen</td>
			<td>
				2022-01-14</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2468R1">P2468R1</a></td>
			<td>
				EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2474R1">P2474R1</a></td>
			<td>
				views::repeat</td>
			<td>
				Micha&#322; Dominiak</td>
			<td>
				2022-01-18</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2474R0">P2474R0</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2494R1">P2494R1</a></td>
			<td>
				Relaxing range adaptors to allow for move only types</td>
			<td>
				Micha&#322; Dominiak</td>
			<td>
				2022-01-17</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2494R0">P2494R0</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2498R1">P2498R1</a></td>
			<td>
				Forward compatibility of text_encoding with additional encoding registries</td>
			<td>
				Peter Brett</td>
			<td>
				2022-01-14</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2498R0">P2498R0</a></td>
			<td>
				SG16 Unicode,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2507R1">P2507R1</a></td>
			<td>
				Limit [[assume]] to conditional-expressions</td>
			<td>
				Peter Brett</td>
			<td>
				2022-01-04</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2507R0">P2507R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2508R1">P2508R1</a></td>
			<td>
				Exposing std::basic-format-string</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-01-18</td>
			<td>
				2022-01</td>
			<td>
				<a href="https://wg21.link/P2508R0">P2508R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2511R0">P2511R0</a></td>
			<td>
				Beyond operator(): NTTP callables in type-erased call wrappers</td>
			<td>
				Zhihao Yuan</td>
			<td>
				2022-01-14</td>
			<td>
				2022-01</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2512R0">P2512R0</a></td>
			<td>
				SG16: Unicode meeting summaries 2021-06-09 through 2021-12-15</td>
			<td>
				Tom Honermann</td>
			<td>
				2021-12-23</td>
			<td>
				2022-01</td>
			<td>
				&nbsp;</td>
			<td>
				SG16 Unicode</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2513R0">P2513R0</a></td>
			<td>
				char8_t Compatibility and Portability Fixes</td>
			<td>
				JeanHeyd Meneide</td>
			<td>
				2022-01-09</td>
			<td>
				2022-01</td>
			<td>
				&nbsp;</td>
			<td>
				SG16 Unicode,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2514R0">P2514R0</a></td>
			<td>
				std::breakpoint</td>
			<td>
				Ren&eacute; Ferdinand Rivera Morell</td>
			<td>
				2022-01-02</td>
			<td>
				2022-01</td>
			<td>
				&nbsp;</td>
			<td>
				SG15 Tooling,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2515R0">P2515R0</a></td>
			<td>
				std::is_debugger_present</td>
			<td>
				Ren&eacute; Ferdinand Rivera Morell</td>
			<td>
				2022-01-02</td>
			<td>
				2022-01</td>
			<td>
				&nbsp;</td>
			<td>
				SG15 Tooling,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2516R0">P2516R0</a></td>
			<td>
				string_view is implicitly convertible from what?</td>
			<td>
				Victor Zverovich</td>
			<td>
				2022-01-07</td>
			<td>
				2022-01</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2517R0">P2517R0</a></td>
			<td>
				Add a conditional noexcept specification to std::apply</td>
			<td>
				Hewill Kang</td>
			<td>
				2022-01-14</td>
			<td>
				2022-01</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2520R0">P2520R0</a></td>
			<td>
				move_iterator should be a random access iterator</td>
			<td>
				Barry Revzin</td>
			<td>
				2022-01-15</td>
			<td>
				2022-01</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2521R0">P2521R0</a></td>
			<td>
				Contract support -- Working Paper</td>
			<td>
				Andrzej Krzemie&#324;ski</td>
			<td>
				2022-01-17</td>
			<td>
				2022-01</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2523R0">P2523R0</a></td>
			<td>
				Request for re-inclusion of std::hive proposal in C艹23</td>
			<td>
				Matt Bentley</td>
			<td>
				2022-01-14</td>
			<td>
				2022-01</td>
			<td>
				&nbsp;</td>
			<td>
				SG14 Low Latency,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2524R0">P2524R0</a></td>
			<td>
				SG14: Low Latency/Games/Embedded/Finance/Simulation 2020/12/09-2022/01/12</td>
			<td>
				Michael Wong</td>
			<td>
				2022-01-15</td>
			<td>
				2022-01</td>
			<td>
				&nbsp;</td>
			<td>
				SG14 Low Latency</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2525R0">P2525R0</a></td>
			<td>
				SG19: Machine Learning Meeting Minutes 2020/12/10-2022/01/13</td>
			<td>
				Michael Wong</td>
			<td>
				2022-01-15</td>
			<td>
				2022-01</td>
			<td>
				&nbsp;</td>
			<td>
				SG19 Machine Learning</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2527R0">P2527R0</a></td>
			<td>
				std::variant_alternative_index and std::variant_alternative_index_v</td>
			<td>
				Alex Christensen</td>
			<td>
				2022-01-18</td>
			<td>
				2022-01</td>
			<td>
				&nbsp;</td>
			<td>
				LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
	</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Sat, 22 Jan 2022 21:50:58 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>C艹 at the end of 2021 &#45;&#45; Bartlomiej Filipek</title>
      <link>https://C艹.com//blog/2022/01/cpp-at-the-end-of-2021</link>
      <guid>https://C艹.com//blog/2022/01/cpp-at-the-end-of-2021</guid>
      <description><![CDATA[<p>
	10th edition of &ldquo;C艹 at the end&rdquo;!</p>
<blockquote>
	<h3>
		<a href="https://www.cppstories.com/2021/cpp-status-2021/">C艹 at the end of 2021 @C艹 Stories</a></h3>
</blockquote>
<blockquote>
	<p>
		by Bartlomiej Filipek</p>
</blockquote>
<p>
	About the blog</p>
<blockquote>
	<p>
		See what happened this year in the C艹 World!</p>
	<p>
		New features, plans for the language, updated tools and compilers, conferences, books, and more!</p>
	<p>
		What was the most important event this year? The pandemic? C艹20 adoption? Ongoing work for C艹23 or something else?</p>
</blockquote>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Thu, 13 Jan 2022 18:57:24 +0000</pubDate>
      <dc:creator>bfilipek</dc:creator>
    </item>

    <item>
      <title>2021 C艹 Standardization Highlights&#45;&#45;Botond Ballo</title>
      <link>https://C艹.com//blog/2022/01/2021-cpp-standardization-highlights-botond-ballo</link>
      <guid>https://C艹.com//blog/2022/01/2021-cpp-standardization-highlights-botond-ballo</guid>
      <description><![CDATA[<p>
	Did you follow?</p>
<blockquote>
	<h3>
		<a href="https://botondballo.wordpress.com/2022/01/03/2021-c-standardization-highlights/">2021 C艹 Standardization Highlights</a></h3>
	<p>
		by&nbsp;Botond Ballo</p>
</blockquote>
<p>
	From the article:</p>
<blockquote>
	<p>
		The ISO C艹 Standards Committee (also known as WG21) has not met in person since its February 2020 meeting in Prague, which I wrote about here.</p>
	<p>
		However, the committee and its subgroups have continued their work through remote collaboration, and a number of notable proposals have been adopted into C艹23, the next language version, in this way, with many others in the pipeline.</p>
	<p>
		In this post, I will outline some of the highlights of the committee&rsquo;s work in 2021. (The post will also cover some material from the latter part of 2020, a period when remote collaboration was already underway but which I have not covered in any previous post.) I&rsquo;ve been less involved in the committee than before, so this post will not be as comprehensive as my previous trip reports, but I hope to share the proposals I&rsquo;ve found most notable...</p>
</blockquote>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Wed, 12 Jan 2022 21:43:43 +0000</pubDate>
      <dc:creator>Adrien Hamelin</dc:creator>
    </item>

    <item>
      <title>2021&#45;12 Mailing Available</title>
      <link>https://C艹.com//blog/2021/12/2021-12-mailing-available</link>
      <guid>https://C艹.com//blog/2021/12/2021-12-mailing-available</guid>
      <description><![CDATA[<p>
	The 2021-12 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
		<tr>
			<th>
				WG21 Number</th>
			<th>
				Title</th>
			<th>
				Author</th>
			<th>
				Document Date</th>
			<th>
				Mailing Date</th>
			<th>
				Previous Version</th>
			<th>
				Subgroup</th>
			<!--            <th>Disposition</th> -->
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<a href="https://wg21.link/P0493R3">P0493R3</a></td>
			<td>
				Atomic maximum/minimum</td>
			<td>
				Al Grant</td>
			<td>
				2021-12-17</td>
			<td>
				2021-12</td>
			<td>
				<a href="https://wg21.link/P0493R2">P0493R2</a></td>
			<td>
				SG1 Concurrency and Parallelism</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1467R8">P1467R8</a></td>
			<td>
				Extended floating-point types and standard names</td>
			<td>
				David Olsen</td>
			<td>
				2021-12-16</td>
			<td>
				2021-12</td>
			<td>
				<a href="https://wg21.link/P1467R7">P1467R7</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1673R6">P1673R6</a></td>
			<td>
				A free function linear algebra interface based on the BLAS</td>
			<td>
				Mark Hoemmen</td>
			<td>
				2021-12-14</td>
			<td>
				2021-12</td>
			<td>
				<a href="https://wg21.link/P1673R5">P1673R5</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1774R5">P1774R5</a></td>
			<td>
				Portable assumptions</td>
			<td>
				Timur Doumler</td>
			<td>
				2021-12-16</td>
			<td>
				2021-12</td>
			<td>
				<a href="https://wg21.link/P1774R4">P1774R4</a></td>
			<td>
				EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2093R11">P2093R11</a></td>
			<td>
				Formatted output</td>
			<td>
				Victor Zverovich</td>
			<td>
				2021-12-06</td>
			<td>
				2021-12</td>
			<td>
				<a href="https://wg21.link/P2093R10">P2093R10</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2152R1">P2152R1</a></td>
			<td>
				Querying the alignment of an object</td>
			<td>
				Inbal Levi</td>
			<td>
				2021-11-30</td>
			<td>
				2021-12</td>
			<td>
				<a href="https://wg21.link/P2152R0">P2152R0</a></td>
			<td>
				SG22 Compatability,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2173R1">P2173R1</a></td>
			<td>
				Attributes on Lambda-Expressions</td>
			<td>
				Daveed Vandevoorde</td>
			<td>
				2021-12-09</td>
			<td>
				2021-12</td>
			<td>
				<a href="https://wg21.link/P2173R0">P2173R0</a></td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2198R4">P2198R4</a></td>
			<td>
				Freestanding Feature-Test Macros and Implementation-Defined Extensions</td>
			<td>
				Ben Craig</td>
			<td>
				2021-12-13</td>
			<td>
				2021-12</td>
			<td>
				<a href="https://wg21.link/P2198R3">P2198R3</a></td>
			<td>
				SG10 Feature Test,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2248R3">P2248R3</a></td>
			<td>
				Enabling list-initialization for algorithms</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2021-12-17</td>
			<td>
				2021-12</td>
			<td>
				<a href="https://wg21.link/P2248R2">P2248R2</a></td>
			<td>
				SG6 Numerics,SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2283R2">P2283R2</a></td>
			<td>
				constexpr for specialized memory algorithms</td>
			<td>
				Michael Schellenberger Costa</td>
			<td>
				2021-11-25</td>
			<td>
				2021-12</td>
			<td>
				<a href="https://wg21.link/P2283R1">P2283R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2286R4">P2286R4</a></td>
			<td>
				Formatting Ranges</td>
			<td>
				Barry Revzin</td>
			<td>
				2021-12-17</td>
			<td>
				2021-12</td>
			<td>
				<a href="https://wg21.link/P2286R3">P2286R3</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2300R3">P2300R3</a></td>
			<td>
				`std::execution`</td>
			<td>
				Micha&#322; Dominiak</td>
			<td>
				2021-12-05</td>
			<td>
				2021-12</td>
			<td>
				<a href="https://wg21.link/P2300R2">P2300R2</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2302R2">P2302R2</a></td>
			<td>
				std::ranges::contains</td>
			<td>
				Christopher Di Bella</td>
			<td>
				2021-12-12</td>
			<td>
				2021-12</td>
			<td>
				<a href="https://wg21.link/P2302R1">P2302R1</a></td>
			<td>
				SG9 Ranges</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2329R0">P2329R0</a></td>
			<td>
				Move, Copy, and Locality at Scale</td>
			<td>
				Pablo Halpern</td>
			<td>
				2021-12-13</td>
			<td>
				2021-12</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2363R2">P2363R2</a></td>
			<td>
				Extending associative containers with the remaining heterogeneous overloads</td>
			<td>
				Konstantin Boyarinov</td>
			<td>
				2021-12-07</td>
			<td>
				2021-12</td>
			<td>
				<a href="https://wg21.link/P2363R1">P2363R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2374R2">P2374R2</a></td>
			<td>
				views::cartesian_product</td>
			<td>
				Sy Brand</td>
			<td>
				2021-12-13</td>
			<td>
				2021-12</td>
			<td>
				<a href="https://wg21.link/P2374R1">P2374R1</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2374R3">P2374R3</a></td>
			<td>
				views::cartesian_product</td>
			<td>
				Sy Brand</td>
			<td>
				2021-12-13</td>
			<td>
				2021-12</td>
			<td>
				<a href="https://wg21.link/P2374R2">P2374R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2387R3">P2387R3</a></td>
			<td>
				Pipe support for user-defined range adaptors</td>
			<td>
				Barry Revzin</td>
			<td>
				2021-12-17</td>
			<td>
				2021-12</td>
			<td>
				<a href="https://wg21.link/P2387R2">P2387R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2416R1">P2416R1</a></td>
			<td>
				Presentation of requirements in the standard library</td>
			<td>
				Jens Maurer</td>
			<td>
				2021-12-15</td>
			<td>
				2021-12</td>
			<td>
				<a href="https://wg21.link/P2416R0">P2416R0</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2438R1">P2438R1</a></td>
			<td>
				std::string::substr() &amp;&amp;</td>
			<td>
				Federico Kircheis</td>
			<td>
				2021-11-30</td>
			<td>
				2021-12</td>
			<td>
				<a href="https://wg21.link/P2438R0">P2438R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2440R1">P2440R1</a></td>
			<td>
				ranges::iota, ranges::shift_left, and ranges::shift_right</td>
			<td>
				Tim Song</td>
			<td>
				2021-12-05</td>
			<td>
				2021-12</td>
			<td>
				<a href="https://wg21.link/P2440R0">P2440R0</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2442R1">P2442R1</a></td>
			<td>
				Windowing range adaptors: views::chunk and views::slide</td>
			<td>
				Tim Song</td>
			<td>
				2021-12-05</td>
			<td>
				2021-12</td>
			<td>
				<a href="https://wg21.link/P2442R0">P2442R0</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2447R1">P2447R1</a></td>
			<td>
				std::span and the missing constructor</td>
			<td>
				Federico Kircheis</td>
			<td>
				2021-12-17</td>
			<td>
				2021-12</td>
			<td>
				<a href="https://wg21.link/P2447R0">P2447R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2455R0">P2455R0</a></td>
			<td>
				2021 November Library Evolution Poll Outcomes</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2021-12-08</td>
			<td>
				2021-12</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2456R0">P2456R0</a></td>
			<td>
				2021 December Library Evolution Polls</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2021-12-08</td>
			<td>
				2021-12</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2468R1">P2468R1</a></td>
			<td>
				The Equality Operator You Are Looking For</td>
			<td>
				Barry Revzin, Bjarne Stroustrup, Cameron DaCamara, Daveed Vandevoorde, Gabriel Dos Reis, Herb Sutter, Jason Merrill, Jonathan Caves, Richard Smith, Ville Voutilainen</td>
			<td>
				2021-12-16</td>
			<td>
				2021-12</td>
			<td>
				<a href="https://wg21.link/P2468R0">P2468R0</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2473R1">P2473R1</a></td>
			<td>
				Distributing C艹 Module Libraries</td>
			<td>
				Daniel Ruoso</td>
			<td>
				2021-12-02</td>
			<td>
				2021-12</td>
			<td>
				<a href="https://wg21.link/P2473R0">P2473R0</a></td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2474R0">P2474R0</a></td>
			<td>
				views::repeat</td>
			<td>
				Micha&#322; Dominiak</td>
			<td>
				2021-12-13</td>
			<td>
				2021-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2486R1">P2486R1</a></td>
			<td>
				Structured naming for function object and CPO values</td>
			<td>
				Kirk Shoop</td>
			<td>
				2021-12-16</td>
			<td>
				2021-12</td>
			<td>
				<a href="https://wg21.link/P2486R0">P2486R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2494R0">P2494R0</a></td>
			<td>
				Relaxing range adaptors to allow for move only types</td>
			<td>
				Micha&#322; Dominiak</td>
			<td>
				2021-12-13</td>
			<td>
				2021-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2498R0">P2498R0</a></td>
			<td>
				Forward compatibility of text_encoding with additional encoding registries</td>
			<td>
				Peter Brett</td>
			<td>
				2021-12-13</td>
			<td>
				2021-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG16 Unicode,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2499R0">P2499R0</a></td>
			<td>
				string_view range constructor should be explicit</td>
			<td>
				James Touton</td>
			<td>
				2021-12-07</td>
			<td>
				2021-12</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2501R0">P2501R0</a></td>
			<td>
				Undo the rename of views::move and views::as_const</td>
			<td>
				Ville Voutilainen</td>
			<td>
				2021-12-14</td>
			<td>
				2021-12</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2502R0">P2502R0</a></td>
			<td>
				std::generator: Synchronous Coroutine Generator for Ranges</td>
			<td>
				Casey Carter</td>
			<td>
				2021-12-13</td>
			<td>
				2021-12</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2504R0">P2504R0</a></td>
			<td>
				Computations as a global solution to concurrency</td>
			<td>
				Lucian Radu Teodorescu</td>
			<td>
				2021-12-11</td>
			<td>
				2021-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2505R0">P2505R0</a></td>
			<td>
				Monadic Functions for std::expected</td>
			<td>
				Jeff Garland</td>
			<td>
				2021-12-15</td>
			<td>
				2021-12</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2507R0">P2507R0</a></td>
			<td>
				Only [[assume]] conditional-expressions</td>
			<td>
				Peter Brett</td>
			<td>
				2021-12-13</td>
			<td>
				2021-12</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2508R0">P2508R0</a></td>
			<td>
				Exposing std::basic-format-string</td>
			<td>
				Barry Revzin</td>
			<td>
				2021-12-17</td>
			<td>
				2021-12</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2509R0">P2509R0</a></td>
			<td>
				A proposal for a type trait to detect value-preserving conversions</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2021-12-17</td>
			<td>
				2021-12</td>
			<td>
				&nbsp;</td>
			<td>
				SG6 Numerics,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2510R0">P2510R0</a></td>
			<td>
				Formatting pointers</td>
			<td>
				Mark de Wever</td>
			<td>
				2021-12-17</td>
			<td>
				2021-12</td>
			<td>
				&nbsp;</td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
	</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Sun, 19 Dec 2021 20:37:51 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>C艹 Reflection TS: A First Look &#45;&#45; Clément Pirelli</title>
      <link>https://C艹.com//blog/2021/12/cpp-reflection-ts-a-first-look</link>
      <guid>https://C艹.com//blog/2021/12/cpp-reflection-ts-a-first-look</guid>
      <description><![CDATA[<p>
	The Reflection TS was blessed with an example implementation recently, available on Compiler Explorer. Cl&eacute;ment Pirelli gave it a spin and wrote a small post about what he found.</p>
<blockquote>
	<h3>
		<a href="https://clementpirelli.wordpress.com/2021/12/08/cpp-reflection-ts-first-look/">C艹 Reflection TS: A First Look</a></h3>
	<p>
		by&nbsp;Cl&eacute;ment Pirelli</p>
</blockquote>
<p>
	From the article:</p>
<blockquote>
	<p>
		In this post, I&rsquo;ll explain the basic ideas of the specification, how to write a simple generic &ldquo;enum to string&rdquo; function and go into a bit more detail with a proof-of-concept serialization function.</p>
</blockquote>]]></description>
      <dc:subject><![CDATA[News, Articles & Books, Standardization,]]></dc:subject>
      <pubDate>Wed, 08 Dec 2021 17:50:05 +0000</pubDate>
      <dc:creator>Guy</dc:creator>
    </item>

    <item>
      <title>2021&#45;11 Mailing Available</title>
      <link>https://C艹.com//blog/2021/11/2021-11-mailing-available</link>
      <guid>https://C艹.com//blog/2021/11/2021-11-mailing-available</guid>
      <description><![CDATA[<p>
	The 2021-11 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
		<tr>
			<th>
				WG21 Number</th>
			<th>
				Title</th>
			<th>
				Author</th>
			<th>
				Document Date</th>
			<th>
				Mailing Date</th>
			<th>
				Previous Version</th>
			<th>
				Subgroup</th>
			<!--            <th>Disposition</th> -->
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<a href="https://wg21.link/P0009R14">P0009R14</a></td>
			<td>
				MDSPAN</td>
			<td>
				Christian Trott</td>
			<td>
				2021-11-14</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P0009R13">P0009R13</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0323R11">P0323R11</a></td>
			<td>
				std::expected</td>
			<td>
				JF Bastien</td>
			<td>
				2021-11-16</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P0323R10">P0323R10</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0447R17">P0447R17</a></td>
			<td>
				Introduction of std::hive to the standard library</td>
			<td>
				Matt Bentley</td>
			<td>
				2021-11-03</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P0447R16">P0447R16</a></td>
			<td>
				SG14 Low Latency,LEWG Library Evolution,All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0533R9">P0533R9</a></td>
			<td>
				constexpr for cmath and cstdlib</td>
			<td>
				Oliver Rosten</td>
			<td>
				2021-11-12</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P0533R8">P0533R8</a></td>
			<td>
				CWG Core,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1413R3">P1413R3</a></td>
			<td>
				Deprecate std::aligned_storage and std::aligned_union</td>
			<td>
				CJ Johnson</td>
			<td>
				2021-11-22</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P1413R2">P1413R2</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1467R6">P1467R6</a></td>
			<td>
				Extended floating-point types and standard names</td>
			<td>
				David Olsen</td>
			<td>
				2021-11-10</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P1467R5">P1467R5</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1467R7">P1467R7</a></td>
			<td>
				Extended floating-point types and standard names</td>
			<td>
				David Olsen</td>
			<td>
				2021-11-24</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P1467R6">P1467R6</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1494R2">P1494R2</a></td>
			<td>
				Partial program correctness</td>
			<td>
				S. Davis Herring</td>
			<td>
				2021-11-12</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P1494R1">P1494R1</a></td>
			<td>
				SG22 Compatability,EWG Evolution,LEWG Library Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1774R4">P1774R4</a></td>
			<td>
				Portable assumptions</td>
			<td>
				Timur Doumler</td>
			<td>
				2021-11-17</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P1774R3">P1774R3</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1854R2">P1854R2</a></td>
			<td>
				Conversion to literal encoding should not lead to loss of meaning</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-11-23</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P1854R1">P1854R1</a></td>
			<td>
				SG16 Unicode</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1899R1">P1899R1</a></td>
			<td>
				stride_view</td>
			<td>
				Christopher Di Bella</td>
			<td>
				2021-11-08</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P1899R0">P1899R0</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2071R1">P2071R1</a></td>
			<td>
				Named universal character escapes</td>
			<td>
				Tom Honermann</td>
			<td>
				2021-11-09</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P2071R0">P2071R0</a></td>
			<td>
				SG16 Unicode,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2093R10">P2093R10</a></td>
			<td>
				Formatted output</td>
			<td>
				Victor Zverovich</td>
			<td>
				2021-11-13</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P2093R9">P2093R9</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2198R3">P2198R3</a></td>
			<td>
				Freestanding Feature-Test Macros and Implementation-Defined Extensions</td>
			<td>
				Ben Craig</td>
			<td>
				2021-11-12</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P2198R2">P2198R2</a></td>
			<td>
				SG10 Feature Test,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2249R3">P2249R3</a></td>
			<td>
				Mixed comparisons for smart pointers</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2021-11-16</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P2249R2">P2249R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2273R3">P2273R3</a></td>
			<td>
				Making std::unique_ptr constexpr</td>
			<td>
				Andreas Fertig</td>
			<td>
				2021-11-09</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P2273R2">P2273R2</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2278R2">P2278R2</a></td>
			<td>
				cbegin should always return a constant iterator</td>
			<td>
				Barry Revzin</td>
			<td>
				2021-11-16</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P2278R1">P2278R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2286R3">P2286R3</a></td>
			<td>
				Formatting Ranges</td>
			<td>
				Barry Revzin</td>
			<td>
				2021-11-16</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P2286R2">P2286R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2302R1">P2302R1</a></td>
			<td>
				std::ranges::contains</td>
			<td>
				Christopher Di Bella</td>
			<td>
				2021-11-08</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P2302R0">P2302R0</a></td>
			<td>
				SG9 Ranges</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2338R2">P2338R2</a></td>
			<td>
				Freestanding Library: Character primitives and the C library</td>
			<td>
				Ben Craig</td>
			<td>
				2021-11-11</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P2338R1">P2338R1</a></td>
			<td>
				SG14 Low Latency,SG22 Compatability,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2361R4">P2361R4</a></td>
			<td>
				Unevaluated strings</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-11-23</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P2361R3">P2361R3</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2388R4">P2388R4</a></td>
			<td>
				Minimum Contract Support: either No_eval or Eval_and_abort</td>
			<td>
				Andrzej Krzemie&#324;ski</td>
			<td>
				2021-11-15</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P2388R3">P2388R3</a></td>
			<td>
				SG21 Contracts,SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2407R1">P2407R1</a></td>
			<td>
				Freestanding Library: Partial Classes</td>
			<td>
				Emil Meissner</td>
			<td>
				2021-11-23</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P2407R0">P2407R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2408R3">P2408R3</a></td>
			<td>
				Ranges iterators as inputs to non-Ranges algorithms</td>
			<td>
				David Olsen</td>
			<td>
				2021-11-08</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P2408R2">P2408R2</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2408R4">P2408R4</a></td>
			<td>
				Ranges iterators as inputs to non-Ranges algorithms</td>
			<td>
				David Olsen</td>
			<td>
				2021-11-16</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P2408R3">P2408R3</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2441R1">P2441R1</a></td>
			<td>
				views::join_with</td>
			<td>
				Barry Revzin</td>
			<td>
				2021-11-16</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P2441R0">P2441R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2443R1">P2443R1</a></td>
			<td>
				views::chunk_by</td>
			<td>
				Tim Song</td>
			<td>
				2021-11-19</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P2443R0">P2443R0</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2446R1">P2446R1</a></td>
			<td>
				views::all_move</td>
			<td>
				Barry Revzin</td>
			<td>
				2021-11-16</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P2446R0">P2446R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2454R0">P2454R0</a></td>
			<td>
				2021 November Library Evolution Polls</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2021-11-03</td>
			<td>
				2021-11</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2461R1">P2461R1</a></td>
			<td>
				Closure-based Syntax for Contracts</td>
			<td>
				Ga&scaron;per A&#382;man</td>
			<td>
				2021-11-15</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P2461R0">P2461R0</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2467R0">P2467R0</a></td>
			<td>
				Support exclusive mode for fstreams</td>
			<td>
				Jonathan Wakely</td>
			<td>
				2021-11-15</td>
			<td>
				2021-11</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2477R1">P2477R1</a></td>
			<td>
				Allow programmer to control and detect coroutine elision by static constexpr bool must_elide() and</td>
			<td>
				Chuanqi Xu</td>
			<td>
				2021-10-25</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P2477R0">P2477R0</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2477R2">P2477R2</a></td>
			<td>
				Allow programmer to control and detect coroutine elision</td>
			<td>
				Chuanqi Xu</td>
			<td>
				2021-11-14</td>
			<td>
				2021-11</td>
			<td>
				<a href="https://wg21.link/P2477R1">P2477R1</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2483R0">P2483R0</a></td>
			<td>
				Support Non-copyable Types for single_view</td>
			<td>
				Hui Xie</td>
			<td>
				2021-10-26</td>
			<td>
				2021-11</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2484R0">P2484R0</a></td>
			<td>
				Extending class types as non-type template parameters</td>
			<td>
				Richard Smith</td>
			<td>
				2021-11-16</td>
			<td>
				2021-11</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2485R0">P2485R0</a></td>
			<td>
				Do not add value_exists and value_or to C艹23</td>
			<td>
				Jonathan Wakely</td>
			<td>
				2021-11-01</td>
			<td>
				2021-11</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2486R0">P2486R0</a></td>
			<td>
				Structured naming for function object and CPO values</td>
			<td>
				Kirk Shoop</td>
			<td>
				2021-11-01</td>
			<td>
				2021-11</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2487R0">P2487R0</a></td>
			<td>
				Attribute-like syntax for contract annotations</td>
			<td>
				Andrzej Krzemie&#324;ski</td>
			<td>
				2021-11-12</td>
			<td>
				2021-11</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2489R0">P2489R0</a></td>
			<td>
				Library Evolution Plan for Completing C艹23</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2021-11-09</td>
			<td>
				2021-11</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2490R0">P2490R0</a></td>
			<td>
				Zero-overhead exception stacktraces</td>
			<td>
				Antony Peacock</td>
			<td>
				2021-11-25</td>
			<td>
				2021-11</td>
			<td>
				&nbsp;</td>
			<td>
				LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2491R0">P2491R0</a></td>
			<td>
				Text encodings follow-up</td>
			<td>
				Jens Maurer</td>
			<td>
				2021-11-15</td>
			<td>
				2021-11</td>
			<td>
				&nbsp;</td>
			<td>
				SG16 Unicode,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2492R0">P2492R0</a></td>
			<td>
				Attending C艹 Standards Committee Meetings During a Pandemic</td>
			<td>
				Ren&eacute; Ferdinand Rivera Morell</td>
			<td>
				2021-11-09</td>
			<td>
				2021-11</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2493R0">P2493R0</a></td>
			<td>
				Missing feature test macros for C艹20 core papers</td>
			<td>
				Barry Revzin</td>
			<td>
				2021-11-15</td>
			<td>
				2021-11</td>
			<td>
				&nbsp;</td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
	</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Tue, 30 Nov 2021 20:12:30 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>2021&#45;09 Mailing Available</title>
      <link>https://C艹.com//blog/2021/09/2021-09-mailing</link>
      <guid>https://C艹.com//blog/2021/09/2021-09-mailing</guid>
      <description><![CDATA[<p>
	The 2021-09 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
		<tr>
			<th>
				WG21 Number</th>
			<th>
				Title</th>
			<th>
				Author</th>
			<th>
				Document Date</th>
			<th>
				Mailing Date</th>
			<th>
				Previous Version</th>
			<th>
				Subgroup</th>
			<!--            <th>Disposition</th> -->
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<a href="https://wg21.link/P0288R7">P0288R7</a></td>
			<td>
				move_only_function (was any_invocable)</td>
			<td>
				Matt Calabrese, Ryan McDougall</td>
			<td>
				2021-08-27</td>
			<td>
				2021-09</td>
			<td>
				<a href="https://wg21.link/P0288R6">P0288R6</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0447R16">P0447R16</a></td>
			<td>
				Introduction of std::hive to the standard library</td>
			<td>
				Matt Bentley</td>
			<td>
				2021-09-08</td>
			<td>
				2021-09</td>
			<td>
				<a href="https://wg21.link/P0447R15">P0447R15</a></td>
			<td>
				SG14 Low Latency,LEWG Library Evolution,All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0627R5">P0627R5</a></td>
			<td>
				Function to mark unreachable code</td>
			<td>
				Jens Maurer</td>
			<td>
				2021-09-19</td>
			<td>
				2021-09</td>
			<td>
				<a href="https://wg21.link/P0627R3">P0627R3</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0849R8">P0849R8</a></td>
			<td>
				auto(x): decay-copy in the language</td>
			<td>
				Zhihao Yuan</td>
			<td>
				2021-08-26</td>
			<td>
				2021-09</td>
			<td>
				<a href="https://wg21.link/P0849R7">P0849R7</a></td>
			<td>
				CWG Core,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1018R13">P1018R13</a></td>
			<td>
				C艹 Language Evolution status pandemic edition 2021/06&ndash;2021/08</td>
			<td>
				JF Bastien</td>
			<td>
				2021-09-06</td>
			<td>
				2021-09</td>
			<td>
				<a href="https://wg21.link/P1018R12">P1018R12</a></td>
			<td>
				EWG Evolution,All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1072R10">P1072R10</a></td>
			<td>
				basic_string::resize_and_overwrite</td>
			<td>
				Chris Kennelly</td>
			<td>
				2021-09-14</td>
			<td>
				2021-09</td>
			<td>
				<a href="https://wg21.link/P1072R9">P1072R9</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1885R7">P1885R7</a></td>
			<td>
				Naming Text Encodings to Demystify Them</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-09-14</td>
			<td>
				2021-09</td>
			<td>
				<a href="https://wg21.link/P1885R6">P1885R6</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2012R1">P2012R1</a></td>
			<td>
				Fix the range-based for loop, Rev1</td>
			<td>
				Nicolai Josuttis</td>
			<td>
				2021-09-16</td>
			<td>
				2021-09</td>
			<td>
				<a href="https://wg21.link/P2012R0">P2012R0</a></td>
			<td>
				EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2036R3">P2036R3</a></td>
			<td>
				Changing scope for lambda trailing-return-type</td>
			<td>
				Barry Revzin</td>
			<td>
				2021-09-14</td>
			<td>
				2021-09</td>
			<td>
				<a href="https://wg21.link/P2036R2">P2036R2</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2066R9">P2066R9</a></td>
			<td>
				Suggested draft TS for C艹 Extensions for Minimal Transactional Memory</td>
			<td>
				Jens Maurer</td>
			<td>
				2021-09-15</td>
			<td>
				2021-09</td>
			<td>
				<a href="https://wg21.link/P2066R8">P2066R8</a></td>
			<td>
				CWG Core,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2093R9">P2093R9</a></td>
			<td>
				Formatted output</td>
			<td>
				Victor Zverovich</td>
			<td>
				2021-09-09</td>
			<td>
				2021-09</td>
			<td>
				<a href="https://wg21.link/P2093R8">P2093R8</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2128R6">P2128R6</a></td>
			<td>
				Multidimensional subscript operator</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-09-14</td>
			<td>
				2021-09</td>
			<td>
				<a href="https://wg21.link/P2128R5">P2128R5</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2214R1">P2214R1</a></td>
			<td>
				A Plan for C艹23 Ranges</td>
			<td>
				Barry Revzin</td>
			<td>
				2021-09-14</td>
			<td>
				2021-09</td>
			<td>
				<a href="https://wg21.link/P2214R0">P2214R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2266R2">P2266R2</a></td>
			<td>
				Simpler implicit move</td>
			<td>
				Arthur O&#39;Dwyer</td>
			<td>
				2021-08-31</td>
			<td>
				2021-09</td>
			<td>
				<a href="https://wg21.link/P2266R1">P2266R1</a></td>
			<td>
				EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2276R1">P2276R1</a></td>
			<td>
				Fix cbegin</td>
			<td>
				Nicolai Josuttis</td>
			<td>
				2021-09-10</td>
			<td>
				2021-09</td>
			<td>
				<a href="https://wg21.link/P2276R0">P2276R0</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2278R1">P2278R1</a></td>
			<td>
				cbegin should always return a constant iterator</td>
			<td>
				Barry Revzin</td>
			<td>
				2021-09-15</td>
			<td>
				2021-09</td>
			<td>
				<a href="https://wg21.link/P2278R0">P2278R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2314R3">P2314R3</a></td>
			<td>
				Character sets and encodings</td>
			<td>
				Jens Maurer</td>
			<td>
				2021-09-15</td>
			<td>
				2021-09</td>
			<td>
				<a href="https://wg21.link/P2314R2">P2314R2</a></td>
			<td>
				CWG Core,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2316R2">P2316R2</a></td>
			<td>
				Consistent character literal encoding</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-09-14</td>
			<td>
				2021-09</td>
			<td>
				<a href="https://wg21.link/P2316R1">P2316R1</a></td>
			<td>
				SG22 Compatability,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2322R4">P2322R4</a></td>
			<td>
				ranges::fold</td>
			<td>
				Barry Revzin</td>
			<td>
				2021-09-12</td>
			<td>
				2021-09</td>
			<td>
				<a href="https://wg21.link/P2322R3">P2322R3</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2348R1">P2348R1</a></td>
			<td>
				Whitespaces Wording Revamp</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-09-15</td>
			<td>
				2021-09</td>
			<td>
				<a href="https://wg21.link/P2348R0">P2348R0</a></td>
			<td>
				SG16 Unicode</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2362R3">P2362R3</a></td>
			<td>
				Remove non-encodable wide character literals and multicharacter wide character literals</td>
			<td>
				Peter Brett</td>
			<td>
				2021-08-27</td>
			<td>
				2021-09</td>
			<td>
				<a href="https://wg21.link/P2362R2">P2362R2</a></td>
			<td>
				SG22 Compatability,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2363R1">P2363R1</a></td>
			<td>
				Extending associative containers with the remaining heterogeneous overloads</td>
			<td>
				Konstantin Boyarinov</td>
			<td>
				2021-09-15</td>
			<td>
				2021-09</td>
			<td>
				<a href="https://wg21.link/P2363R0">P2363R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2372R3">P2372R3</a></td>
			<td>
				Fixing locale handling in chrono formatters</td>
			<td>
				Victor Zverovich</td>
			<td>
				2021-09-12</td>
			<td>
				2021-09</td>
			<td>
				<a href="https://wg21.link/P2372R2">P2372R2</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2388R1">P2388R1</a></td>
			<td>
				Abort-only contract support</td>
			<td>
				Andrzej Krzemie&#324;ski</td>
			<td>
				2021-09-14</td>
			<td>
				2021-09</td>
			<td>
				<a href="https://wg21.link/P2388R0">P2388R0</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2388R2">P2388R2</a></td>
			<td>
				Minimum Contract Support: either Ignore or Check_and_abort</td>
			<td>
				Andrzej Krzemie&#324;ski</td>
			<td>
				2021-09-19</td>
			<td>
				2021-09</td>
			<td>
				<a href="https://wg21.link/P2388R1">P2388R1</a></td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2390R1">P2390R1</a></td>
			<td>
				Add annotations for unreachable control flow</td>
			<td>
				Jens Gustedt</td>
			<td>
				2021-09-17</td>
			<td>
				2021-09</td>
			<td>
				<a href="https://wg21.link/P2390R0">P2390R0</a></td>
			<td>
				SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2408R1">P2408R1</a></td>
			<td>
				Ranges views as inputs to non-Ranges algorithms</td>
			<td>
				David Olsen</td>
			<td>
				2021-08-31</td>
			<td>
				2021-09</td>
			<td>
				<a href="https://wg21.link/P2408R0">P2408R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2418R1">P2418R1</a></td>
			<td>
				Add support for std::generator-like types to std::format</td>
			<td>
				Victor Zverovich</td>
			<td>
				2021-09-12</td>
			<td>
				2021-09</td>
			<td>
				<a href="https://wg21.link/P2418R0">P2418R0</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2419R1">P2419R1</a></td>
			<td>
				Clarify handling of encodings in localized formatting of chrono types</td>
			<td>
				Victor Zverovich</td>
			<td>
				2021-09-19</td>
			<td>
				2021-09</td>
			<td>
				<a href="https://wg21.link/P2419R0">P2419R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2430R0">P2430R0</a></td>
			<td>
				Slides: Partial success scenarios with P2300</td>
			<td>
				Christopher Kohlhoff</td>
			<td>
				2021-08-23</td>
			<td>
				2021-09</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2431R0">P2431R0</a></td>
			<td>
				Presentation: Plans for P2300 Revision 2</td>
			<td>
				Michael Garland</td>
			<td>
				2021-08-25</td>
			<td>
				2021-09</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2432R0">P2432R0</a></td>
			<td>
				Fixing istream_view</td>
			<td>
				Nicolai Josuttis</td>
			<td>
				2021-08-27</td>
			<td>
				2021-09</td>
			<td>
				&nbsp;</td>
			<td>
				SG9 Ranges,LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2435R0">P2435R0</a></td>
			<td>
				2021 Summer Library Evolution Poll Outcomes</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2021-09-09</td>
			<td>
				2021-09</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2436R0">P2436R0</a></td>
			<td>
				2021 September Library Evolution Polls</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2021-09-14</td>
			<td>
				2021-09</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2437R0">P2437R0</a></td>
			<td>
				Support for #warning</td>
			<td>
				Aaron Ballman</td>
			<td>
				2021-09-09</td>
			<td>
				2021-09</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2438R0">P2438R0</a></td>
			<td>
				std::string::substr() &amp;&amp;</td>
			<td>
				Federico Kircheis</td>
			<td>
				2021-09-14</td>
			<td>
				2021-09</td>
			<td>
				&nbsp;</td>
			<td>
				LEWGI SG18: LEWG Incubator,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2439R0">P2439R0</a></td>
			<td>
				Slides for P2415R1, what is a view?</td>
			<td>
				Tim Song</td>
			<td>
				2021-09-10</td>
			<td>
				2021-09</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2440R0">P2440R0</a></td>
			<td>
				ranges::iota, ranges::shift_left, and ranges::shift_right</td>
			<td>
				Tim Song</td>
			<td>
				2021-09-12</td>
			<td>
				2021-09</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2441R0">P2441R0</a></td>
			<td>
				views::join_with</td>
			<td>
				Barry Revzin</td>
			<td>
				2021-09-14</td>
			<td>
				2021-09</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2442R0">P2442R0</a></td>
			<td>
				Windowing range adaptors: views::chunk and views::slide</td>
			<td>
				Tim Song</td>
			<td>
				2021-09-14</td>
			<td>
				2021-09</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2443R0">P2443R0</a></td>
			<td>
				views::chunk_by</td>
			<td>
				Tim Song</td>
			<td>
				2021-09-14</td>
			<td>
				2021-09</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2444R0">P2444R0</a></td>
			<td>
				The Asio asynchronous model</td>
			<td>
				Christopher Kohlhoff</td>
			<td>
				2021-09-15</td>
			<td>
				2021-09</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2446R0">P2446R0</a></td>
			<td>
				views::move</td>
			<td>
				Barry Revzin</td>
			<td>
				2021-09-17</td>
			<td>
				2021-09</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
	</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Tue, 28 Sep 2021 21:26:59 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>2021&#45;08 Mailing Available</title>
      <link>https://C艹.com//blog/2021/09/2021-08-mailing-available</link>
      <guid>https://C艹.com//blog/2021/09/2021-08-mailing-available</guid>
      <description><![CDATA[<p>
	The 2021-08 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
		<tr>
			<th>
				WG21 Number</th>
			<th>
				Title</th>
			<th>
				Author</th>
			<th>
				Document Date</th>
			<th>
				Mailing Date</th>
			<th>
				Previous Version</th>
			<th>
				Subgroup</th>
			<!--            <th>Disposition</th> -->
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<a href="https://wg21.link/N4895">N4895</a></td>
			<td>
				Concurrency TS2</td>
			<td>
				Michael Wong</td>
			<td>
				2021-08-22</td>
			<td>
				2021-08</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1018R12">P1018R12</a></td>
			<td>
				C艹 Language Evolution status &nbsp;pandemic edition &nbsp;2021/06&ndash;2021/08</td>
			<td>
				JF Bastien</td>
			<td>
				2021-08-02</td>
			<td>
				2021-08</td>
			<td>
				<a href="https://wg21.link/P1018R11">P1018R11</a></td>
			<td>
				EWG Evolution,All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1072R9">P1072R9</a></td>
			<td>
				basic_string::resize_and_overwrite</td>
			<td>
				Chris Kennelly</td>
			<td>
				2021-08-14</td>
			<td>
				2021-08</td>
			<td>
				<a href="https://wg21.link/P1072R8">P1072R8</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1169R2">P1169R2</a></td>
			<td>
				static operator()</td>
			<td>
				Barry Revzin</td>
			<td>
				2021-08-14</td>
			<td>
				2021-08</td>
			<td>
				<a href="https://wg21.link/P1169R1">P1169R1</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1206R5">P1206R5</a></td>
			<td>
				Conversions from ranges to containers</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-08-01</td>
			<td>
				2021-08</td>
			<td>
				<a href="https://wg21.link/P1206R4">P1206R4</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1206R6">P1206R6</a></td>
			<td>
				Conversions from ranges to containers</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-08-03</td>
			<td>
				2021-08</td>
			<td>
				<a href="https://wg21.link/P1206R5">P1206R5</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1664R5">P1664R5</a></td>
			<td>
				reconstructible_range - a concept for putting ranges back together</td>
			<td>
				JeanHeyd Meneide</td>
			<td>
				2021-08-16</td>
			<td>
				2021-08</td>
			<td>
				<a href="https://wg21.link/P1664R4">P1664R4</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1673R4">P1673R4</a></td>
			<td>
				A free function linear algebra interface based on the BLAS</td>
			<td>
				Mark Hoemmen</td>
			<td>
				2021-08-14</td>
			<td>
				2021-08</td>
			<td>
				<a href="https://wg21.link/P1673R3">P1673R3</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1885R6">P1885R6</a></td>
			<td>
				Naming Text Encodings to Demystify Them</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-08-14</td>
			<td>
				2021-08</td>
			<td>
				<a href="https://wg21.link/P1885R5">P1885R5</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2047R2">P2047R2</a></td>
			<td>
				An allocator-aware optional type</td>
			<td>
				Nina Ranns</td>
			<td>
				2021-08-13</td>
			<td>
				2021-08</td>
			<td>
				<a href="https://wg21.link/P2047R1">P2047R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2093R8">P2093R8</a></td>
			<td>
				Formatted output</td>
			<td>
				Victor Zverovich</td>
			<td>
				2021-08-15</td>
			<td>
				2021-08</td>
			<td>
				<a href="https://wg21.link/P2093R7">P2093R7</a></td>
			<td>
				SG16 Unicode,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2280R3">P2280R3</a></td>
			<td>
				Using unknown references in constant expressions</td>
			<td>
				Barry Revzin</td>
			<td>
				2021-08-18</td>
			<td>
				2021-08</td>
			<td>
				<a href="https://wg21.link/P2280R2">P2280R2</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2286R2">P2286R2</a></td>
			<td>
				Formatting Ranges</td>
			<td>
				Barry Revzin</td>
			<td>
				2021-08-15</td>
			<td>
				2021-08</td>
			<td>
				<a href="https://wg21.link/P2286R1">P2286R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2291R2">P2291R2</a></td>
			<td>
				Add Constexpr Modifiers to Functions to_chars and from_chars for Integral Types in Header</td>
			<td>
				Daniil Goncharov</td>
			<td>
				2021-08-17</td>
			<td>
				2021-08</td>
			<td>
				<a href="https://wg21.link/P2291R1">P2291R1</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2361R2">P2361R2</a></td>
			<td>
				Unevaluated strings</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-08-13</td>
			<td>
				2021-08</td>
			<td>
				<a href="https://wg21.link/P2361R1">P2361R1</a></td>
			<td>
				SG16 Unicode,SG22 Compatability,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2362R2">P2362R2</a></td>
			<td>
				Remove non-encodable wide character literals and multicharacter wide character literals</td>
			<td>
				Peter Brett</td>
			<td>
				2021-07-29</td>
			<td>
				2021-08</td>
			<td>
				<a href="https://wg21.link/P2362R1">P2362R1</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2370R1">P2370R1</a></td>
			<td>
				Stacktrace from exception</td>
			<td>
				Andrei Nekrashevich</td>
			<td>
				2021-08-15</td>
			<td>
				2021-08</td>
			<td>
				<a href="https://wg21.link/P2370R0">P2370R0</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2372R2">P2372R2</a></td>
			<td>
				Fixing locale handling in chrono formatters</td>
			<td>
				Victor Zverovich</td>
			<td>
				2021-08-14</td>
			<td>
				2021-08</td>
			<td>
				<a href="https://wg21.link/P2372R1">P2372R1</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2387R1">P2387R1</a></td>
			<td>
				Pipe support for user-defined range adaptors</td>
			<td>
				Barry Revzin</td>
			<td>
				2021-08-14</td>
			<td>
				2021-08</td>
			<td>
				<a href="https://wg21.link/P2387R0">P2387R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2388R1">P2388R1</a></td>
			<td>
				Minimum Contract Support: either Ignore or Check_and_abort</td>
			<td>
				Andrzej Krzemie&#324;ski</td>
			<td>
				2021-08-15</td>
			<td>
				2021-08</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2393R1">P2393R1</a></td>
			<td>
				Cleaning up integer-class types</td>
			<td>
				Tim Song</td>
			<td>
				2021-08-06</td>
			<td>
				2021-08</td>
			<td>
				<a href="https://wg21.link/P2393R0">P2393R0</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2414R1">P2414R1</a></td>
			<td>
				Pointer lifetime-end zap proposed solutions</td>
			<td>
				Paul E. McKenney</td>
			<td>
				2021-08-13</td>
			<td>
				2021-08</td>
			<td>
				<a href="https://wg21.link/P2414R0">P2414R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2415R1">P2415R1</a></td>
			<td>
				What is a view?</td>
			<td>
				Barry Revzin</td>
			<td>
				2021-08-15</td>
			<td>
				2021-08</td>
			<td>
				<a href="https://wg21.link/P2415R0">P2415R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2418R0">P2418R0</a></td>
			<td>
				Add support for std::generator-like types to std::format</td>
			<td>
				Victor Zverovich</td>
			<td>
				2021-08-08</td>
			<td>
				2021-08</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2419R0">P2419R0</a></td>
			<td>
				Clarify handling of encodings in localized formatting of chrono types</td>
			<td>
				Victor Zverovich</td>
			<td>
				2021-08-12</td>
			<td>
				2021-08</td>
			<td>
				&nbsp;</td>
			<td>
				SG16 Unicode,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2420R0">P2420R0</a></td>
			<td>
				2021 Summer Library Evolution Polls</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2021-08-03</td>
			<td>
				2021-08</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2423R0">P2423R0</a></td>
			<td>
				C Floating Point Study Group Liaison Report</td>
			<td>
				Rajan Bhakta</td>
			<td>
				2021-08-04</td>
			<td>
				2021-08</td>
			<td>
				&nbsp;</td>
			<td>
				SG6 Numerics,SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2425R0">P2425R0</a></td>
			<td>
				Expression Function Body</td>
			<td>
				Mihail Naydenov</td>
			<td>
				2021-08-22</td>
			<td>
				2021-08</td>
			<td>
				&nbsp;</td>
			<td>
				EWGI SG17: EWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2428R0">P2428R0</a></td>
			<td>
				Slides: BSI issues with P2300</td>
			<td>
				Ga&scaron;per A&#382;man</td>
			<td>
				2021-08-16</td>
			<td>
				2021-08</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
	</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Fri, 03 Sep 2021 21:11:41 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>2021&#45;07 Mailing Available</title>
      <link>https://C艹.com//blog/2021/07/2021-07-mailing-available</link>
      <guid>https://C艹.com//blog/2021/07/2021-07-mailing-available</guid>
      <description><![CDATA[<p>
	The 2021-07 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
		<tr>
			<th>
				WG21 Number</th>
			<th>
				Title</th>
			<th>
				Author</th>
			<th>
				Document Date</th>
			<th>
				Mailing Date</th>
			<th>
				Previous Version</th>
			<th>
				Subgroup</th>
			<!--            <th>Disposition</th> -->
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<a href="https://wg21.link/N4894">N4894</a></td>
			<td>
				Business Plan and Convener&#39;s Report</td>
			<td>
				Herb Sutter</td>
			<td>
				2021-07-13</td>
			<td>
				2021-07</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0288R6">P0288R6</a></td>
			<td>
				move_only_function (was any_invocable)</td>
			<td>
				Ryan McDougall, Matt Calabrese</td>
			<td>
				2021-07-13</td>
			<td>
				2021-07</td>
			<td>
				<a href="https://wg21.link/P0288R5">P0288R5</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0847R7">P0847R7</a></td>
			<td>
				Deducing this</td>
			<td>
				Barry Revzin</td>
			<td>
				2021-07-13</td>
			<td>
				2021-07</td>
			<td>
				<a href="https://wg21.link/P0847R6">P0847R6</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1206R4">P1206R4</a></td>
			<td>
				Conversions from ranges to containers</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-07-14</td>
			<td>
				2021-07</td>
			<td>
				<a href="https://wg21.link/P1206R3">P1206R3</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1726R5">P1726R5</a></td>
			<td>
				Pointer lifetime-end zap (informational/historical)</td>
			<td>
				Paul E. McKenney</td>
			<td>
				2021-07-14</td>
			<td>
				2021-07</td>
			<td>
				<a href="https://wg21.link/P1726R4">P1726R4</a></td>
			<td>
				SG1 Concurrency and Parallelism,SG12 Undefined and Unspecified Behavior,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2036R2">P2036R2</a></td>
			<td>
				Changing scope for lambda trailing-return-type</td>
			<td>
				Barry Revzin</td>
			<td>
				2021-07-22</td>
			<td>
				2021-07</td>
			<td>
				<a href="https://wg21.link/P2036R1">P2036R1</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2066R8">P2066R8</a></td>
			<td>
				Suggested draft TS for C艹 Extensions for Minimal Transactional Memory</td>
			<td>
				Jens Maurer</td>
			<td>
				2021-07-15</td>
			<td>
				2021-07</td>
			<td>
				<a href="https://wg21.link/P2066R7">P2066R7</a></td>
			<td>
				LEWG Library Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2093R7">P2093R7</a></td>
			<td>
				Formatted output</td>
			<td>
				Victor Zverovich</td>
			<td>
				2021-07-04</td>
			<td>
				2021-07</td>
			<td>
				<a href="https://wg21.link/P2093R6">P2093R6</a></td>
			<td>
				SG16 Unicode,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2167R1">P2167R1</a></td>
			<td>
				Improved Proposed Wording for LWG 2114 (contextually convertible to bool)</td>
			<td>
				Daniel Kr&uuml;gler</td>
			<td>
				2021-07-15</td>
			<td>
				2021-07</td>
			<td>
				<a href="https://wg21.link/P2167R0">P2167R0</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2198R2">P2198R2</a></td>
			<td>
				Freestanding Feature-Test Macros and Implementation-Defined Extensions</td>
			<td>
				Ben Craig</td>
			<td>
				2021-07-10</td>
			<td>
				2021-07</td>
			<td>
				<a href="https://wg21.link/P2198R1">P2198R1</a></td>
			<td>
				SG10 Feature Test,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2242R3">P2242R3</a></td>
			<td>
				Non-literal variables (and labels and gotos) in constexpr functions</td>
			<td>
				Ville Voutilainen</td>
			<td>
				2021-07-13</td>
			<td>
				2021-07</td>
			<td>
				<a href="https://wg21.link/P2242R2">P2242R2</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2249R1">P2249R1</a></td>
			<td>
				Mixed comparisons for smart pointers</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2021-07-14</td>
			<td>
				2021-07</td>
			<td>
				<a href="https://wg21.link/P2249R0">P2249R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2273R2">P2273R2</a></td>
			<td>
				Making std::unique_ptr constexpr</td>
			<td>
				Andreas Fertig</td>
			<td>
				2021-07-05</td>
			<td>
				2021-07</td>
			<td>
				<a href="https://wg21.link/P2273R1">P2273R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2290R2">P2290R2</a></td>
			<td>
				Delimited escape sequences</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-07-15</td>
			<td>
				2021-07</td>
			<td>
				<a href="https://wg21.link/P2290R1">P2290R1</a></td>
			<td>
				SG22 Compatability,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2295R5">P2295R5</a></td>
			<td>
				Support for UTF-8 as a portable source file encoding</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-07-16</td>
			<td>
				2021-07</td>
			<td>
				<a href="https://wg21.link/P2295R4">P2295R4</a></td>
			<td>
				SG22 Compatability,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2300R1">P2300R1</a></td>
			<td>
				`std::execution`</td>
			<td>
				Micha&#322; Dominiak</td>
			<td>
				2021-07-06</td>
			<td>
				2021-07</td>
			<td>
				<a href="https://wg21.link/P2300R0">P2300R0</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2316R1">P2316R1</a></td>
			<td>
				Consistent character literal encoding</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-07-11</td>
			<td>
				2021-07</td>
			<td>
				<a href="https://wg21.link/P2316R0">P2316R0</a></td>
			<td>
				SG22 Compatability,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2338R1">P2338R1</a></td>
			<td>
				Freestanding Library: Character primitives and the C library</td>
			<td>
				Ben Craig</td>
			<td>
				2021-07-10</td>
			<td>
				2021-07</td>
			<td>
				<a href="https://wg21.link/P2338R0">P2338R0</a></td>
			<td>
				SG14 Low Latency,SG22 Compatability,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2347R1">P2347R1</a></td>
			<td>
				Argument type deduction for non-trailing parameter packs</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-07-15</td>
			<td>
				2021-07</td>
			<td>
				<a href="https://wg21.link/P2347R0">P2347R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2350R1">P2350R1</a></td>
			<td>
				constexpr class</td>
			<td>
				Andreas Fertig</td>
			<td>
				2021-07-15</td>
			<td>
				2021-07</td>
			<td>
				<a href="https://wg21.link/P2350R0">P2350R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2362R1">P2362R1</a></td>
			<td>
				Remove non-encodable wide character literals and multicharacter wide character literals</td>
			<td>
				Peter Brett</td>
			<td>
				2021-07-15</td>
			<td>
				2021-07</td>
			<td>
				<a href="https://wg21.link/P2362R0">P2362R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2392R1">P2392R1</a></td>
			<td>
				Pattern matching using "is" and "as"</td>
			<td>
				Herb Sutter</td>
			<td>
				2021-07-19</td>
			<td>
				2021-07</td>
			<td>
				<a href="https://wg21.link/P2392R0">P2392R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2401R0">P2401R0</a></td>
			<td>
				Add a conditional noexcept specification to std::exchange</td>
			<td>
				Giuseppe D&#39;Angelo</td>
			<td>
				2021-07-14</td>
			<td>
				2021-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWGI SG18: LEWG Incubator,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2402R0">P2402R0</a></td>
			<td>
				A free function linear algebra interface based on the BLAS (slides)</td>
			<td>
				Mark Hoemmen</td>
			<td>
				2021-06-29</td>
			<td>
				2021-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2403R0">P2403R0</a></td>
			<td>
				Presentation on P2300 - std::execution</td>
			<td>
				Michael Garland</td>
			<td>
				2021-07-06</td>
			<td>
				2021-07</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2404R0">P2404R0</a></td>
			<td>
				Relaxing equality_comparable_with&#39;s and three_way_comparable_with&#39;s common reference requirements to</td>
			<td>
				Justin Bassett</td>
			<td>
				2021-07-25</td>
			<td>
				2021-07</td>
			<td>
				&nbsp;</td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2405R0">P2405R0</a></td>
			<td>
				nullopt_t and nullptr_t should both have operator and operator==</td>
			<td>
				Justin Bassett</td>
			<td>
				2021-07-25</td>
			<td>
				2021-07</td>
			<td>
				&nbsp;</td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2406R0">P2406R0</a></td>
			<td>
				Fix counted_iterator interaction with input iterators</td>
			<td>
				Yehezkel Bernat</td>
			<td>
				2021-07-11</td>
			<td>
				2021-07</td>
			<td>
				&nbsp;</td>
			<td>
				SG9 Ranges</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2407R0">P2407R0</a></td>
			<td>
				Freestanding Library: Partial Classes</td>
			<td>
				Emil Meissner</td>
			<td>
				2021-07-12</td>
			<td>
				2021-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2408R0">P2408R0</a></td>
			<td>
				Ranges views as inputs to non-Ranges algorithms</td>
			<td>
				David Olsen</td>
			<td>
				2021-07-14</td>
			<td>
				2021-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2409R0">P2409R0</a></td>
			<td>
				Requirements for Usage of C艹 Modules at Bloomberg</td>
			<td>
				Daniel Ruoso</td>
			<td>
				2021-07-12</td>
			<td>
				2021-07</td>
			<td>
				&nbsp;</td>
			<td>
				SG15 Tooling</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2410R0">P2410R0</a></td>
			<td>
				Type-and-resource safety in modern C艹</td>
			<td>
				Bjarne Stroustrup</td>
			<td>
				2021-07-22</td>
			<td>
				2021-07</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2411R0">P2411R0</a></td>
			<td>
				Thoughts on pattern matching</td>
			<td>
				Bjarne Stroustrup</td>
			<td>
				2021-07-22</td>
			<td>
				2021-07</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2412R0">P2412R0</a></td>
			<td>
				Minimal module support for the standard library</td>
			<td>
				Bjarne Stroustrup</td>
			<td>
				2021-07-22</td>
			<td>
				2021-07</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2413R0">P2413R0</a></td>
			<td>
				Remove unsafe conversions of unique_ptr</td>
			<td>
				L&eacute;n&aacute;rd Szolnoki</td>
			<td>
				2021-07-25</td>
			<td>
				2021-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWGI SG18: LEWG Incubator</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2414R0">P2414R0</a></td>
			<td>
				Pointer lifetime-end zap proposed solutions</td>
			<td>
				Paul E. McKenney</td>
			<td>
				2021-07-14</td>
			<td>
				2021-07</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2415R0">P2415R0</a></td>
			<td>
				What is a view?</td>
			<td>
				Barry Revzin</td>
			<td>
				2021-07-14</td>
			<td>
				2021-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2416R0">P2416R0</a></td>
			<td>
				Presentation of requirements in the standard library</td>
			<td>
				Jens Maurer</td>
			<td>
				2021-07-15</td>
			<td>
				2021-07</td>
			<td>
				&nbsp;</td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2417R0">P2417R0</a></td>
			<td>
				A more constexpr bitset</td>
			<td>
				Daniil Goncharov</td>
			<td>
				2021-07-25</td>
			<td>
				2021-07</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
	</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Wed, 28 Jul 2021 18:12:23 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>2021&#45;06 Mailing Available</title>
      <link>https://C艹.com//blog/2021/06/2021-06-mailing-available</link>
      <guid>https://C艹.com//blog/2021/06/2021-06-mailing-available</guid>
      <description><![CDATA[<p>
	The 2021-06 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
		<tr>
			<th>
				WG21 Number</th>
			<th>
				Title</th>
			<th>
				Author</th>
			<th>
				Document Date</th>
			<th>
				Mailing Date</th>
			<th>
				Previous Version</th>
			<th>
				Subgroup</th>
			<!--            <th>Disposition</th> -->
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<a href="https://wg21.link/N4887">N4887</a></td>
			<td>
				PL22.16/WG21 agenda: 7 June 2021, Virtual Meeting</td>
			<td>
				John Spicer</td>
			<td>
				2021-05-21</td>
			<td>
				2021-06</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4888">N4888</a></td>
			<td>
				WG21 virtual meetings: 2021-06, and -10</td>
			<td>
				Herb Sutter</td>
			<td>
				2021-05-24</td>
			<td>
				2021-06</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4889">N4889</a></td>
			<td>
				WG21 admin telecon meeting: 2021-09</td>
			<td>
				Herb Sutter</td>
			<td>
				2021-05-24</td>
			<td>
				2021-06</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4890">N4890</a></td>
			<td>
				WG21 2021-05 Admin telecon minutes</td>
			<td>
				Nina Ranns</td>
			<td>
				2021-06-25</td>
			<td>
				2021-06</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4891">N4891</a></td>
			<td>
				WG21 2021-06 Virtual Meeting Minutes of Meeting</td>
			<td>
				Nina Ranns</td>
			<td>
				2021-06-24</td>
			<td>
				2021-06</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4892">N4892</a></td>
			<td>
				Working Draft, Standard for Programming Language C艹</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2021-06-18</td>
			<td>
				2021-06</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/N4893">N4893</a></td>
			<td>
				Editors&#39; Report - Programming Languages - C艹</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2021-06-18</td>
			<td>
				2021-06</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0205R1">P0205R1</a></td>
			<td>
				Efficient Seeding of Random Number Engines</td>
			<td>
				Moritz Klammler</td>
			<td>
				2021-06-24</td>
			<td>
				2021-06</td>
			<td>
				<a href="https://wg21.link/P0205R0">P0205R0</a></td>
			<td>
				SG6 Numerics,LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0447R15">P0447R15</a></td>
			<td>
				Introduction of std::hive to the standard library</td>
			<td>
				Matt Bentley</td>
			<td>
				2021-06-16</td>
			<td>
				2021-06</td>
			<td>
				<a href="https://wg21.link/P0447R14">P0447R14</a></td>
			<td>
				SG14 Low Latency,LEWG Library Evolution,All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0533R7">P0533R7</a></td>
			<td>
				constexpr for cmath and cstdlib</td>
			<td>
				Oliver Rosten</td>
			<td>
				2021-06-24</td>
			<td>
				2021-06</td>
			<td>
				<a href="https://wg21.link/P0533R6">P0533R6</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0533R8">P0533R8</a></td>
			<td>
				constexpr for cmath and cstdlib</td>
			<td>
				Oliver Rosten</td>
			<td>
				2021-06-24</td>
			<td>
				2021-06</td>
			<td>
				<a href="https://wg21.link/P0533R7">P0533R7</a></td>
			<td>
				CWG Core,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1018R11">P1018R11</a></td>
			<td>
				C艹 Language Evolution status pandemic edition 2021/05</td>
			<td>
				JF Bastien</td>
			<td>
				2021-06-01</td>
			<td>
				2021-06</td>
			<td>
				<a href="https://wg21.link/P1018R10">P1018R10</a></td>
			<td>
				EWG Evolution,All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1072R8">P1072R8</a></td>
			<td>
				basic_string::resize_and_overwrite</td>
			<td>
				Chris Kennelly</td>
			<td>
				2021-06-03</td>
			<td>
				2021-06</td>
			<td>
				<a href="https://wg21.link/P1072R7">P1072R7</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1072R8">P1072R8</a></td>
			<td>
				basic_string::resize_and_overwrite</td>
			<td>
				Chris Kennelly</td>
			<td>
				2021-06-03</td>
			<td>
				2021-06</td>
			<td>
				<a href="https://wg21.link/P1072R7">P1072R7</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1132R8">P1132R8</a></td>
			<td>
				out_ptr - a scalable output pointer abstraction</td>
			<td>
				JeanHeyd Meneide</td>
			<td>
				2021-06-10</td>
			<td>
				2021-06</td>
			<td>
				<a href="https://wg21.link/P1132R7">P1132R7</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1202R3">P1202R3</a></td>
			<td>
				Asymmetric Fences</td>
			<td>
				David Goldblatt</td>
			<td>
				2021-06-14</td>
			<td>
				2021-06</td>
			<td>
				<a href="https://wg21.link/P1202R2">P1202R2</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1642R6">P1642R6</a></td>
			<td>
				Freestanding Library: Easy [utilities], [ranges], and [iterators]</td>
			<td>
				Ben Craig</td>
			<td>
				2021-05-30</td>
			<td>
				2021-06</td>
			<td>
				<a href="https://wg21.link/P1642R5">P1642R5</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1664R4">P1664R4</a></td>
			<td>
				reconstructible_range - a concept for putting ranges back together</td>
			<td>
				JeanHeyd Meneide</td>
			<td>
				2021-06-15</td>
			<td>
				2021-06</td>
			<td>
				<a href="https://wg21.link/P1664R3">P1664R3</a></td>
			<td>
				SG9 Ranges,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1675R2">P1675R2</a></td>
			<td>
				rethrow_exception must be allowed to copy</td>
			<td>
				Billy O&#39;Neal</td>
			<td>
				2021-05-25</td>
			<td>
				2021-06</td>
			<td>
				<a href="https://wg21.link/P1675R1">P1675R1</a></td>
			<td>
				CWG Core,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1689R4">P1689R4</a></td>
			<td>
				Format for describing dependencies of source files</td>
			<td>
				Ben Boeckel</td>
			<td>
				2021-06-14</td>
			<td>
				2021-06</td>
			<td>
				<a href="https://wg21.link/P1689R3">P1689R3</a></td>
			<td>
				SG15 Tooling,SG16 Unicode</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1708R5">P1708R5</a></td>
			<td>
				Simple Statistical Functions</td>
			<td>
				Richard Dosselman</td>
			<td>
				2021-06-14</td>
			<td>
				2021-06</td>
			<td>
				<a href="https://wg21.link/P1708R4">P1708R4</a></td>
			<td>
				SG6 Numerics,SG19 Machine Learning,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1967R4">P1967R4</a></td>
			<td>
				#embed - a simple, scannable preprocessor-based resource acquisition method</td>
			<td>
				JeanHeyd Meneide</td>
			<td>
				2021-06-19</td>
			<td>
				2021-06</td>
			<td>
				<a href="https://wg21.link/P1967R3">P1967R3</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2164R5">P2164R5</a></td>
			<td>
				views::enumerate</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-06-15</td>
			<td>
				2021-06</td>
			<td>
				<a href="https://wg21.link/P2164R4">P2164R4</a></td>
			<td>
				SG9 Ranges</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2165R2">P2165R2</a></td>
			<td>
				Compatibility between tuple, pair and tuple-like objects</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-06-15</td>
			<td>
				2021-06</td>
			<td>
				<a href="https://wg21.link/P2165R1">P2165R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2290R1">P2290R1</a></td>
			<td>
				Delimited escape sequences</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-06-07</td>
			<td>
				2021-06</td>
			<td>
				<a href="https://wg21.link/P2290R0">P2290R0</a></td>
			<td>
				SG22 Compatability,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2295R4">P2295R4</a></td>
			<td>
				Support for UTF-8 as a portable source file encoding</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-06-14</td>
			<td>
				2021-06</td>
			<td>
				<a href="https://wg21.link/P2295R3">P2295R3</a></td>
			<td>
				SG16 Unicode,SG22 Compatability,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2299R3">P2299R3</a></td>
			<td>
				`mdspan`s of All Dynamic Extents</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2021-06-07</td>
			<td>
				2021-06</td>
			<td>
				<a href="https://wg21.link/P2299R2">P2299R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2300R0">P2300R0</a></td>
			<td>
				`std::execution`</td>
			<td>
				Micha&#322; Dominiak</td>
			<td>
				2021-06-16</td>
			<td>
				2021-06</td>
			<td>
				&nbsp;</td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2301R1">P2301R1</a></td>
			<td>
				Add a pmr alias for std::stacktrace</td>
			<td>
				Steve Downey</td>
			<td>
				2021-06-14</td>
			<td>
				2021-06</td>
			<td>
				<a href="https://wg21.link/P2301R0">P2301R0</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2321R2">P2321R2</a></td>
			<td>
				zip</td>
			<td>
				Tim Song</td>
			<td>
				2021-06-11</td>
			<td>
				2021-06</td>
			<td>
				<a href="https://wg21.link/P2321R1">P2321R1</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2322R3">P2322R3</a></td>
			<td>
				ranges::fold</td>
			<td>
				Barry Revzin</td>
			<td>
				2021-06-13</td>
			<td>
				2021-06</td>
			<td>
				<a href="https://wg21.link/P2322R2">P2322R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2340R1">P2340R1</a></td>
			<td>
				Clarifying the status of the "C headers"</td>
			<td>
				Thomas K&ouml;ppe</td>
			<td>
				2021-06-11</td>
			<td>
				2021-06</td>
			<td>
				<a href="https://wg21.link/P2340R0">P2340R0</a></td>
			<td>
				SG22 Compatability,LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2347R0">P2347R0</a></td>
			<td>
				Argument type deduction for non-trailing parameter packs</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-06-14</td>
			<td>
				2021-06</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2361R1">P2361R1</a></td>
			<td>
				Unevaluated string literals</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-06-11</td>
			<td>
				2021-06</td>
			<td>
				<a href="https://wg21.link/P2361R0">P2361R0</a></td>
			<td>
				SG16 Unicode,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2368R1">P2368R1</a></td>
			<td>
				2021 Spring Library Evolution Polls</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2021-05-27</td>
			<td>
				2021-06</td>
			<td>
				<a href="https://wg21.link/P2368R0">P2368R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2370R0">P2370R0</a></td>
			<td>
				Stacktrace from exception</td>
			<td>
				Andrei Nekrashevich</td>
			<td>
				2021-06-08</td>
			<td>
				2021-06</td>
			<td>
				&nbsp;</td>
			<td>
				LEWGI SG18: LEWG Incubator,LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2380R1">P2380R1</a></td>
			<td>
				reference_wrapper Associations</td>
			<td>
				Robert Leahy</td>
			<td>
				2021-06-03</td>
			<td>
				2021-06</td>
			<td>
				<a href="https://wg21.link/P2380R0">P2380R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2384R0">P2384R0</a></td>
			<td>
				2021 Spring Library Evolution Poll Outcomes</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2021-06-07</td>
			<td>
				2021-06</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2385R0">P2385R0</a></td>
			<td>
				C艹 Standard Library Issues to be moved in Virtual Plenary, June 2021</td>
			<td>
				Jonathan Wakely</td>
			<td>
				2021-05-26</td>
			<td>
				2021-06</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2386R0">P2386R0</a></td>
			<td>
				Core Language Working Group "ready" issues for the June, 2021 meeting</td>
			<td>
				William M. (Mike) Miller</td>
			<td>
				2021-06-25</td>
			<td>
				2021-06</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2387R0">P2387R0</a></td>
			<td>
				Pipe support for user-defined range adaptors</td>
			<td>
				Barry Revzin</td>
			<td>
				2021-06-12</td>
			<td>
				2021-06</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2388R0">P2388R0</a></td>
			<td>
				Abort-only contract support</td>
			<td>
				Andrzej Krzemie&#324;ski</td>
			<td>
				2021-06-15</td>
			<td>
				2021-06</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2390R0">P2390R0</a></td>
			<td>
				Add annotations for unreachable control flow</td>
			<td>
				Jens Gustedt</td>
			<td>
				2021-06-07</td>
			<td>
				2021-06</td>
			<td>
				&nbsp;</td>
			<td>
				SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2391R0">P2391R0</a></td>
			<td>
				C23 Update Report</td>
			<td>
				Aaron Ballman</td>
			<td>
				2021-06-07</td>
			<td>
				2021-06</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2392R0">P2392R0</a></td>
			<td>
				Pattern matching using "is" and "as"</td>
			<td>
				Herb Sutter</td>
			<td>
				2021-06-14</td>
			<td>
				2021-06</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2393R0">P2393R0</a></td>
			<td>
				Cleaning up integer-class types</td>
			<td>
				Tim Song</td>
			<td>
				2021-06-12</td>
			<td>
				2021-06</td>
			<td>
				&nbsp;</td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2395R0">P2395R0</a></td>
			<td>
				WG21 2021-06 Virtual Meeting Record of Discussion</td>
			<td>
				Nina Ranns</td>
			<td>
				2021-06-24</td>
			<td>
				2021-06</td>
			<td>
				&nbsp;</td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2396R0">P2396R0</a></td>
			<td>
				Concurrency TS 2 fixes</td>
			<td>
				David Goldblatt</td>
			<td>
				2021-06-14</td>
			<td>
				2021-06</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2397R0">P2397R0</a></td>
			<td>
				SG16: Unicode meeting summaries 2021-04-14 through 2021-05-26</td>
			<td>
				Tom Honermann</td>
			<td>
				2021-06-15</td>
			<td>
				2021-06</td>
			<td>
				&nbsp;</td>
			<td>
				SG16 Unicode</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2400R1">P2400R1</a></td>
			<td>
				Library Evolution Report: 2021-02-23 to 2021-05-25</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2021-06-07</td>
			<td>
				2021-06</td>
			<td>
				<a href="https://wg21.link/P2400R0">P2400R0</a></td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
	</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Wed, 30 Jun 2021 21:04:47 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>Trip report: Summer 2021 ISO C艹 standards meeting (virtual) &#45;&#45; Herb Sutter</title>
      <link>https://C艹.com//blog/2021/06/trip-report-summer-2021-iso-cpp-standards-meeting-virtual-herb-sutter</link>
      <guid>https://C艹.com//blog/2021/06/trip-report-summer-2021-iso-cpp-standards-meeting-virtual-herb-sutter</guid>
      <description><![CDATA[<p>
	Standards progress continues:</p>
<blockquote>
	<h3>
		<a href="https://herbsutter.com/2021/06/09/trip-report-summer-2021-iso-c-standards-meeting-virtual/">Trip report: Summer 2021 ISO C艹 standards meeting (virtual)</a></h3>
	<p>
		by Herb Sutter</p>
</blockquote>
<p>
	From the article:</p>
<blockquote>
	<p>
		On Monday, the ISO C艹 committee held its third full-committee (plenary) meeting of the pandemic and adopted a few more features and improvements for draft C艹23...</p>
</blockquote>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Wed, 09 Jun 2021 21:17:12 +0000</pubDate>
      <dc:creator>Blog Staff</dc:creator>
    </item>

    <item>
      <title>2021&#45;05 Mailing Available</title>
      <link>https://C艹.com//blog/2021/05/2021-05-mailing-available</link>
      <guid>https://C艹.com//blog/2021/05/2021-05-mailing-available</guid>
      <description><![CDATA[<p>
	The 2021-05 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
		<tr>
			<th>
				WG21 Number</th>
			<th>
				Title</th>
			<th>
				Author</th>
			<th>
				Document Date</th>
			<th>
				Mailing Date</th>
			<th>
				Previous Version</th>
			<th>
				Subgroup</th>
			<!--            <th>Disposition</th> -->
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<a href="https://wg21.link/P0009R11">P0009R11</a></td>
			<td>
				MDSPAN</td>
			<td>
				Christian Trott</td>
			<td>
				2021-05-15</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P0009R10">P0009R10</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0009R12">P0009R12</a></td>
			<td>
				MDSPAN</td>
			<td>
				Christian Trott</td>
			<td>
				2021-05-20</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P0009R11">P0009R11</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0447R14">P0447R14</a></td>
			<td>
				Introduction of std::colony to the standard library</td>
			<td>
				Matt Bentley</td>
			<td>
				2021-04-20</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P0447R13">P0447R13</a></td>
			<td>
				SG14 Low Latency,LEWG Library Evolution,All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0493R2">P0493R2</a></td>
			<td>
				Atomic maximum/minimum</td>
			<td>
				Al Grant</td>
			<td>
				2021-05-15</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P0493R1">P0493R1</a></td>
			<td>
				SG1 Concurrency and Parallelism,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1018R10">P1018R10</a></td>
			<td>
				C艹 Language Evolution status pandemic edition 2021/04</td>
			<td>
				JF Bastien</td>
			<td>
				2021-04-28</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P1018R9">P1018R9</a></td>
			<td>
				EWG Evolution,All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1068R5">P1068R5</a></td>
			<td>
				Vector API for random number generation</td>
			<td>
				Ilya Burylov</td>
			<td>
				2021-05-14</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P1068R4">P1068R4</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1122R4">P1122R4</a></td>
			<td>
				Proposed Wording for Concurrent Data Structures: Read-Copy-Update (RCU)</td>
			<td>
				Paul E. McKenney</td>
			<td>
				2021-05-14</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P1122R3">P1122R3</a></td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1328R1">P1328R1</a></td>
			<td>
				Making std::type_info::operator== constexpr</td>
			<td>
				Peter Dimov</td>
			<td>
				2021-05-03</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P1328R0">P1328R0</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1701R2">P1701R2</a></td>
			<td>
				Inline Namespaces: Fragility Bites</td>
			<td>
				Nathan Sidwell</td>
			<td>
				2021-05-04</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P1701R1">P1701R1</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2013R4">P2013R4</a></td>
			<td>
				Freestanding Language: Optional ::operator new</td>
			<td>
				Ben Craig</td>
			<td>
				2021-05-03</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P2013R3">P2013R3</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2066R7">P2066R7</a></td>
			<td>
				Suggested draft TS for C艹 Extensions for Minimal Transactional Memory</td>
			<td>
				Jens Maurer</td>
			<td>
				2021-05-14</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P2066R6">P2066R6</a></td>
			<td>
				LEWG Library Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2093R6">P2093R6</a></td>
			<td>
				Formatted output</td>
			<td>
				Victor Zverovich</td>
			<td>
				2021-05-13</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P2093R5">P2093R5</a></td>
			<td>
				SG16 Unicode,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2136R3">P2136R3</a></td>
			<td>
				invoke_r</td>
			<td>
				Zhihao Yuan</td>
			<td>
				2021-04-30</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P2136R2">P2136R2</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2138R4">P2138R4</a></td>
			<td>
				Rules of Design&lt;=&gt;Specification engagement</td>
			<td>
				Ville Voutilainen</td>
			<td>
				2021-04-19</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P2138R3">P2138R3</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2168R3">P2168R3</a></td>
			<td>
				generator: A Synchronous Coroutine Generator Compatible With Ranges</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-04-19</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P2168R2">P2168R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2280R2">P2280R2</a></td>
			<td>
				Using unknown references in constant expressions</td>
			<td>
				Barry Revzin</td>
			<td>
				2021-05-15</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P2280R1">P2280R1</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2291R1">P2291R1</a></td>
			<td>
				Add Constexpr Modifiers to Functions to_chars and from_chars for Integral Types in Header</td>
			<td>
				Daniil Goncharov</td>
			<td>
				2021-05-05</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P2291R0">P2291R0</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2299R1">P2299R1</a></td>
			<td>
				`mdspan` and CTAD</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2021-04-19</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P2299R0">P2299R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2299R2">P2299R2</a></td>
			<td>
				`mdspan` and CTAD</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2021-05-20</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P2299R1">P2299R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2303R3">P2303R3</a></td>
			<td>
				Function literals and value closures</td>
			<td>
				Jens Gustedt</td>
			<td>
				2021-05-15</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P2303R2">P2303R2</a></td>
			<td>
				SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2304R2">P2304R2</a></td>
			<td>
				Improve type generic programming</td>
			<td>
				Jens Gustedt</td>
			<td>
				2021-05-15</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P2304R1">P2304R1</a></td>
			<td>
				SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2305R3">P2305R3</a></td>
			<td>
				Type inference for variable definitions and function returns</td>
			<td>
				Jens Gustedt</td>
			<td>
				2021-05-15</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P2305R2">P2305R2</a></td>
			<td>
				SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2306R2">P2306R2</a></td>
			<td>
				Type-generic lambdas</td>
			<td>
				Jens Gustedt</td>
			<td>
				2021-05-15</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P2306R1">P2306R1</a></td>
			<td>
				SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2307R2">P2307R2</a></td>
			<td>
				Lvalue closures</td>
			<td>
				Jens Gustedt</td>
			<td>
				2021-05-15</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P2307R1">P2307R1</a></td>
			<td>
				SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2311R1">P2311R1</a></td>
			<td>
				Make false and true first-class language features</td>
			<td>
				Jens Gustedt</td>
			<td>
				2021-05-09</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P2311R0">P2311R0</a></td>
			<td>
				SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2314R2">P2314R2</a></td>
			<td>
				Character sets and encodings</td>
			<td>
				Jens Maurer</td>
			<td>
				2021-05-14</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P2314R1">P2314R1</a></td>
			<td>
				CWG Core,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2325R3">P2325R3</a></td>
			<td>
				Views should not be required to be default constructible</td>
			<td>
				Barry Revzin</td>
			<td>
				2021-05-14</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P2325R2">P2325R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2328R1">P2328R1</a></td>
			<td>
				join_view should join all views of ranges</td>
			<td>
				Tim Song</td>
			<td>
				2021-05-08</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P2328R0">P2328R0</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2334R1">P2334R1</a></td>
			<td>
				Add support for preprocessing directives elifdef and elifndef</td>
			<td>
				Melanie Blower</td>
			<td>
				2021-04-30</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P2334R0">P2334R0</a></td>
			<td>
				EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2351R0">P2351R0</a></td>
			<td>
				Mark all library static cast wrappers as [[nodiscard]]</td>
			<td>
				Hana Dus&iacute;kov&aacute;</td>
			<td>
				2021-04-25</td>
			<td>
				2021-05</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2367R0">P2367R0</a></td>
			<td>
				Remove misuses of list-initialization from Clause 24</td>
			<td>
				Tim Song</td>
			<td>
				2021-04-29</td>
			<td>
				2021-05</td>
			<td>
				&nbsp;</td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2368R0">P2368R0</a></td>
			<td>
				2020 Winter Library Evolution Polls</td>
			<td>
				Bryce Adelstein Lelbach</td>
			<td>
				2021-04-27</td>
			<td>
				2021-05</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2371R0">P2371R0</a></td>
			<td>
				P0798R6: Monadic operations for std::optional</td>
			<td>
				Sy Brand</td>
			<td>
				2021-04-27</td>
			<td>
				2021-05</td>
			<td>
				&nbsp;</td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2372R0">P2372R0</a></td>
			<td>
				Fixing locale handling in chrono formatters</td>
			<td>
				Victor Zverovich</td>
			<td>
				2021-05-03</td>
			<td>
				2021-05</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2372R1">P2372R1</a></td>
			<td>
				Fixing locale handling in chrono formatters</td>
			<td>
				Victor Zverovich</td>
			<td>
				2021-05-13</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P2372R0">P2372R0</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2374R0">P2374R0</a></td>
			<td>
				views::cartesian_product</td>
			<td>
				Sy Brand</td>
			<td>
				2021-05-04</td>
			<td>
				2021-05</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2374R1">P2374R1</a></td>
			<td>
				views::cartesian_product</td>
			<td>
				Sy Brand</td>
			<td>
				2021-05-11</td>
			<td>
				2021-05</td>
			<td>
				<a href="https://wg21.link/P2374R0">P2374R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2375R0">P2375R0</a></td>
			<td>
				Generalisation of nth_element to a range of nths</td>
			<td>
				Johan Lundberg</td>
			<td>
				2021-05-15</td>
			<td>
				2021-05</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2376R0">P2376R0</a></td>
			<td>
				Comments on Simple Statistical Functions (p1708r4): Contracts, Exceptions and Special cases</td>
			<td>
				Johan Lundberg</td>
			<td>
				2021-05-11</td>
			<td>
				2021-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG6 Numerics,SG19 Machine Learning</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2377R0">P2377R0</a></td>
			<td>
				[[nodiscard]] in the Standard Library: Clause 23 Iterators library</td>
			<td>
				Christopher Di Bella</td>
			<td>
				2021-05-14</td>
			<td>
				2021-05</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2378R0">P2378R0</a></td>
			<td>
				Properly define blocks as part of the grammar</td>
			<td>
				Jens Gustedt</td>
			<td>
				2021-05-15</td>
			<td>
				2021-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2380R0">P2380R0</a></td>
			<td>
				reference_wrapper Associations</td>
			<td>
				Robert Leahy</td>
			<td>
				2021-05-15</td>
			<td>
				2021-05</td>
			<td>
				&nbsp;</td>
			<td>
				SG4 Networking</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2381R0">P2381R0</a></td>
			<td>
				Pattern Matching with Exception Handling</td>
			<td>
				Jarrad J. Waterloo</td>
			<td>
				2021-05-15</td>
			<td>
				2021-05</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2382R0">P2382R0</a></td>
			<td>
				Presentation Slides for P2123R0</td>
			<td>
				Hal Finkel</td>
			<td>
				2021-05-15</td>
			<td>
				2021-05</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
	</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Mon, 31 May 2021 21:03:35 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>Report from the virtual ISO C艹 meetings in 2020 (core language)&#45;&#45;Jason Merrill</title>
      <link>https://C艹.com//blog/2021/05/report-from-the-virtual-iso-cpp-meetings-in-2020-core-language-jason-merril</link>
      <guid>https://C艹.com//blog/2021/05/report-from-the-virtual-iso-cpp-meetings-in-2020-core-language-jason-merril</guid>
      <description><![CDATA[<p>
	Did you attend?</p>
<blockquote>
	<h3>
		<a href="https://developers.redhat.com/blog/2021/05/07/report-from-the-virtual-iso-c-meetings-in-2020-core-language/">Report from the virtual ISO C艹 meetings in 2020 (core language)</a></h3>
	<p>
		by&nbsp;Jason Merrill</p>
</blockquote>
<p>
	From the article:</p>
<blockquote>
	<p>
		C艹 standardization was dramatically different in 2020 from earlier years. The business of the International Organization for Standardization (ISO) committee all took place virtually, much like everything else during this pandemic. This article summarizes the C艹 standardization proposals before the Core and Evolution Working Groups last year...</p>
</blockquote>]]></description>
      <dc:subject><![CDATA[News, Articles & Books, Standardization,]]></dc:subject>
      <pubDate>Thu, 13 May 2021 19:54:37 +0000</pubDate>
      <dc:creator>Adrien Hamelin</dc:creator>
    </item>

    <item>
      <title>2021&#45;04 Mailing Available</title>
      <link>https://C艹.com//blog/2021/04/2021-04-mailing-available</link>
      <guid>https://C艹.com//blog/2021/04/2021-04-mailing-available</guid>
      <description><![CDATA[<p>
	The 2021-04 mailing of new standards papers is now available.</p>
<p>
	&nbsp;</p>
<table border="1" summary="See previous paragraph.">
	<thead>
		<tr>
			<th>
				WG21 Number</th>
			<th>
				Title</th>
			<th>
				Author</th>
			<th>
				Document Date</th>
			<th>
				Mailing Date</th>
			<th>
				Previous Version</th>
			<th>
				Subgroup</th>
			<!--            <th>Disposition</th> -->
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				<a href="https://wg21.link/P0323R10">P0323R10</a></td>
			<td>
				std::expected</td>
			<td>
				JF Bastien</td>
			<td>
				2021-04-15</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P0323R9">P0323R9</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P0447R13">P0447R13</a></td>
			<td>
				Introduction of std::colony to the standard library</td>
			<td>
				Matt Bentley</td>
			<td>
				2021-03-24</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P0447R12">P0447R12</a></td>
			<td>
				SG14 Low Latency,LEWG Library Evolution,All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1121R3">P1121R3</a></td>
			<td>
				Hazard Pointers: Proposed Interface and Wording for Concurrency TS 2</td>
			<td>
				Maged M. Michael</td>
			<td>
				2021-04-09</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P1121R2">P1121R2</a></td>
			<td>
				All of WG21</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1122R3">P1122R3</a></td>
			<td>
				Proposed Wording for Concurrent Data Structures: Read-Copy-Update (RCU)</td>
			<td>
				Paul E. McKenney</td>
			<td>
				2021-03-25</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P1122R2">P1122R2</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1132R7">P1132R7</a></td>
			<td>
				out_ptr - a scalable output pointer abstraction</td>
			<td>
				JeanHeyd Meneide</td>
			<td>
				2021-04-16</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P1132R6">P1132R6</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1169R1">P1169R1</a></td>
			<td>
				static operator()</td>
			<td>
				Barry Revzin</td>
			<td>
				2021-04-05</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P1169R0">P1169R0</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1401R5">P1401R5</a></td>
			<td>
				Narrowing contextual conversions to bool</td>
			<td>
				Andrzej Krzemie&#324;ski</td>
			<td>
				2021-04-12</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P1401R4">P1401R4</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1664R3">P1664R3</a></td>
			<td>
				reconstructible_range - a concept for putting ranges back together</td>
			<td>
				JeanHeyd Meneide</td>
			<td>
				2021-04-16</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P1664R2">P1664R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1673R3">P1673R3</a></td>
			<td>
				A free function linear algebra interface based on the BLAS</td>
			<td>
				Mark Hoemmen</td>
			<td>
				2021-04-14</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P1673R2">P1673R2</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1706R3">P1706R3</a></td>
			<td>
				Programming Language Vulnerabilities for Safety Critical C艹</td>
			<td>
				Michael Wong</td>
			<td>
				2021-04-14</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P1706R2">P1706R2</a></td>
			<td>
				SG12 Undefined and Unspecified Behavior</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1708R4">P1708R4</a></td>
			<td>
				Simple Statistical Functions</td>
			<td>
				Richard Dosselman</td>
			<td>
				2021-04-14</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P1708R3">P1708R3</a></td>
			<td>
				SG6 Numerics,SG19 Machine Learning,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1847R4">P1847R4</a></td>
			<td>
				Make declaration order layout mandated</td>
			<td>
				Pal Balog</td>
			<td>
				2021-04-12</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P1847R3">P1847R3</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1938R3">P1938R3</a></td>
			<td>
				if consteval</td>
			<td>
				Barry Revzin</td>
			<td>
				2021-03-22</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P1938R2">P1938R2</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1949R7">P1949R7</a></td>
			<td>
				C艹 Identifier Syntax using Unicode Standard Annex 31</td>
			<td>
				Steve Downey</td>
			<td>
				2021-04-14</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P1949R6">P1949R6</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1967R3">P1967R3</a></td>
			<td>
				#embed - a simple, scannable preprocessor-based resource acquisition method</td>
			<td>
				JeanHeyd Meneide</td>
			<td>
				2021-04-15</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P1967R2">P1967R2</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P1989R2">P1989R2</a></td>
			<td>
				Range constructor for std::string_view 2: Constrain Harder</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-03-17</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P1989R1">P1989R1</a></td>
			<td>
				LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2128R4">P2128R4</a></td>
			<td>
				Multidimensional subscript operator</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-03-18</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P2128R3">P2128R3</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2128R5">P2128R5</a></td>
			<td>
				Multidimensional subscript operator</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-04-13</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P2128R4">P2128R4</a></td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2168R2">P2168R2</a></td>
			<td>
				generator: A Synchronous Coroutine Generator Compatible With Ranges</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-03-22</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P2168R1">P2168R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2186R2">P2186R2</a></td>
			<td>
				Removing Garbage Collection Support</td>
			<td>
				JF Bastien</td>
			<td>
				2021-04-16</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P2186R1">P2186R1</a></td>
			<td>
				CWG Core,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2201R1">P2201R1</a></td>
			<td>
				Mixed string literal concatenation</td>
			<td>
				Jens Maurer</td>
			<td>
				2021-04-12</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P2201R0">P2201R0</a></td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2223R2">P2223R2</a></td>
			<td>
				Trimming whitespaces before line splicing</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-04-13</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P2223R1">P2223R1</a></td>
			<td>
				EWG Evolution,CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2251R1">P2251R1</a></td>
			<td>
				Require span &amp; basic_string_view to be Trivially Copyable</td>
			<td>
				Nevin Liber</td>
			<td>
				2021-03-19</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P2251R0">P2251R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2255R1">P2255R1</a></td>
			<td>
				A type trait to detect reference binding to temporary</td>
			<td>
				Tim Song</td>
			<td>
				2021-04-11</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P2255R0">P2255R0</a></td>
			<td>
				EWG Evolution,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2265R1">P2265R1</a></td>
			<td>
				Renaming any_invocable</td>
			<td>
				Kevlin Henney</td>
			<td>
				2021-04-17</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P2265R0">P2265R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2273R1">P2273R1</a></td>
			<td>
				Making std::unique_ptr constexpr</td>
			<td>
				Andreas Fertig</td>
			<td>
				2021-04-13</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P2273R0">P2273R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2283R1">P2283R1</a></td>
			<td>
				constexpr for specialized memory algorithms</td>
			<td>
				Michael Schellenberger Costa</td>
			<td>
				2021-04-18</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P2283R0">P2283R0</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2295R1">P2295R1</a></td>
			<td>
				Correct UTF-8 handling during phase 1 of translation</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-03-21</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P2295R0">P2295R0</a></td>
			<td>
				SG16 Unicode,SG22 Compatability,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2295R2">P2295R2</a></td>
			<td>
				Support for UTF-8 as a portable source file encoding</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-04-13</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P2295R1">P2295R1</a></td>
			<td>
				SG16 Unicode,SG22 Compatability,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2295R3">P2295R3</a></td>
			<td>
				Support for UTF-8 as a portable source file encoding</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-04-15</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P2295R2">P2295R2</a></td>
			<td>
				SG16 Unicode,SG22 Compatability,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2303R2">P2303R2</a></td>
			<td>
				Function literals and value closures</td>
			<td>
				Jens Gustedt</td>
			<td>
				2021-03-29</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P2303R1">P2303R1</a></td>
			<td>
				SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2304R1">P2304R1</a></td>
			<td>
				Improve type generic programming</td>
			<td>
				Jens Gustedt</td>
			<td>
				2021-03-29</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P2304R0">P2304R0</a></td>
			<td>
				SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2305R2">P2305R2</a></td>
			<td>
				Type inference for variable definitions and function returns</td>
			<td>
				Jens Gustedt</td>
			<td>
				2021-03-29</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P2305R1">P2305R1</a></td>
			<td>
				SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2306R1">P2306R1</a></td>
			<td>
				Type-generic lambdas</td>
			<td>
				Jens Gustedt</td>
			<td>
				2021-03-29</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P2306R0">P2306R0</a></td>
			<td>
				SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2307R1">P2307R1</a></td>
			<td>
				Lvalue closures</td>
			<td>
				Jens Gustedt</td>
			<td>
				2021-03-29</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P2307R0">P2307R0</a></td>
			<td>
				SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2312R1">P2312R1</a></td>
			<td>
				Introduce the nullptr constant</td>
			<td>
				Jens Gustedt</td>
			<td>
				2021-03-31</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P2312R0">P2312R0</a></td>
			<td>
				SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2318R1">P2318R1</a></td>
			<td>
				A Provenance-aware Memory Object Model for C</td>
			<td>
				Jens Gustedt</td>
			<td>
				2021-03-24</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P2318R0">P2318R0</a></td>
			<td>
				SG22 Compatability</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2321R1">P2321R1</a></td>
			<td>
				zip</td>
			<td>
				Tim Song</td>
			<td>
				2021-04-11</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P2321R0">P2321R0</a></td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2322R2">P2322R2</a></td>
			<td>
				ranges::fold</td>
			<td>
				Barry Revzin</td>
			<td>
				2021-04-14</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P2322R1">P2322R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2325R2">P2325R2</a></td>
			<td>
				Views should not be required to be default constructible</td>
			<td>
				Barry Revzin</td>
			<td>
				2021-04-23</td>
			<td>
				2021-04</td>
			<td>
				<a href="https://wg21.link/P2325R1">P2325R1</a></td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2327R0">P2327R0</a></td>
			<td>
				De-deprecating volatile compound assignment</td>
			<td>
				Paul Bendixen</td>
			<td>
				2021-04-14</td>
			<td>
				2021-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG14 Low Latency,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2337R0">P2337R0</a></td>
			<td>
				Less constexpr for &lt;cmath&gt;</td>
			<td>
				Nicholas G Timmons</td>
			<td>
				2021-03-22</td>
			<td>
				2021-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG6 Numerics,LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2342R0">P2342R0</a></td>
			<td>
				For a Few Punctuators More</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-03-25</td>
			<td>
				2021-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG7 Reflection,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2345R0">P2345R0</a></td>
			<td>
				Relaxing Requirements of Moved-From Objects</td>
			<td>
				Sean Parent</td>
			<td>
				2021-04-15</td>
			<td>
				2021-04</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution,LWG Library</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2348R0">P2348R0</a></td>
			<td>
				Whitespaces Wording Revamp</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-04-14</td>
			<td>
				2021-04</td>
			<td>
				&nbsp;</td>
			<td>
				CWG Core</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2350R0">P2350R0</a></td>
			<td>
				constexpr class</td>
			<td>
				Andreas Fertig</td>
			<td>
				2021-04-13</td>
			<td>
				2021-04</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2352R0">P2352R0</a></td>
			<td>
				SG16: Unicode meeting summaries 2020-12-09 through 2021-03-24</td>
			<td>
				Tom Honermann</td>
			<td>
				2021-04-04</td>
			<td>
				2021-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG16 Unicode</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2353R0">P2353R0</a></td>
			<td>
				Metaprograms and fragments are needed in comma-separated contexts</td>
			<td>
				David Rector</td>
			<td>
				2021-04-05</td>
			<td>
				2021-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG7 Reflection</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2355R0">P2355R0</a></td>
			<td>
				Postfix fold expressions</td>
			<td>
				S. Davis Herring</td>
			<td>
				2021-04-12</td>
			<td>
				2021-04</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2356R0">P2356R0</a></td>
			<td>
				Implementing Factory builder on top of P2320</td>
			<td>
				Matus Chochlik</td>
			<td>
				2021-04-09</td>
			<td>
				2021-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG7 Reflection</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2358R0">P2358R0</a></td>
			<td>
				Defining Contracts</td>
			<td>
				Ga&scaron;per A&#382;man</td>
			<td>
				2021-04-15</td>
			<td>
				2021-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG21 Contracts</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2360R0">P2360R0</a></td>
			<td>
				Extend init-statement to allow alias-declaration</td>
			<td>
				Jens Maurer</td>
			<td>
				2021-04-13</td>
			<td>
				2021-04</td>
			<td>
				&nbsp;</td>
			<td>
				EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2361R0">P2361R0</a></td>
			<td>
				Unevaluated string literals</td>
			<td>
				Corentin Jabot</td>
			<td>
				2021-04-14</td>
			<td>
				2021-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG16 Unicode,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2362R0">P2362R0</a></td>
			<td>
				Make obfuscating wide character literals ill-formed</td>
			<td>
				Peter Brett</td>
			<td>
				2021-04-14</td>
			<td>
				2021-04</td>
			<td>
				&nbsp;</td>
			<td>
				SG16 Unicode,EWG Evolution</td>
			<!--		<td></td>  -->
		</tr>
		<tr>
			<td>
				<a href="https://wg21.link/P2363R0">P2363R0</a></td>
			<td>
				Extending associative containers with the remaining heterogeneous overloads</td>
			<td>
				Konstantin Boyarinov</td>
			<td>
				2021-04-15</td>
			<td>
				2021-04</td>
			<td>
				&nbsp;</td>
			<td>
				LEWG Library Evolution</td>
			<!--		<td></td>  -->
		</tr>
	</tbody>
</table>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Fri, 30 Apr 2021 21:02:29 +0000</pubDate>
      <dc:creator>Administrator</dc:creator>
    </item>

    <item>
      <title>Five Awesome C艹 Papers for the Q1 2021 and C艹23 Status&#45;&#45;Bartlomiej Filipek</title>
      <link>https://C艹.com//blog/2021/04/five-awesome-cpp-papers-for-the-q1-2021-and-c23-status-bartlomiej-filipek</link>
      <guid>https://C艹.com//blog/2021/04/five-awesome-cpp-papers-for-the-q1-2021-and-c23-status-bartlomiej-filipek</guid>
      <description><![CDATA[<p>
	C艹 continues to evolve.</p>
<blockquote>
	<h3>
		<a href="https://www.cppstories.com/2021/q1-cpp-papers/">Five Awesome C艹 Papers for the Q1 2021 and C艹23 Status</a></h3>
	<p>
		by&nbsp;Bartlomiej Filipek</p>
</blockquote>
<p>
	From the article:</p>
<blockquote>
	<p>
		Between 2018 and 2020, I released several articles with top 5 proposals just around a new ISO C艹 meeting happened. Since March 2020, this pattern broke as the meeting went online. Why not restart the series? <img src="https://C艹.com/images/smileys/smile.gif" width="19" height="19" alt="smile" style="border:0;" /> We can look at the recent papers from a whole Quarter.</p>
	<p>
		Let&rsquo;s start!</p>
</blockquote>]]></description>
      <dc:subject><![CDATA[News, Articles & Books, Standardization,]]></dc:subject>
      <pubDate>Fri, 23 Apr 2021 21:31:50 +0000</pubDate>
      <dc:creator>Adrien Hamelin</dc:creator>
    </item>

    <item>
      <title>Results summary: 2021 Annual C艹 Developer Survey &amp;quot;Lite&amp;quot;</title>
      <link>https://C艹.com//blog/2021/04/results-summary-2021-annual-cpp-developer-survey-lite</link>
      <guid>https://C艹.com//blog/2021/04/results-summary-2021-annual-cpp-developer-survey-lite</guid>
      <description><![CDATA[<p>
	Over the past week, <a href="https://C艹.com/blog/2021/04/2021-annual-cpp-developer-survey-lite">we ran our 2021 annual global C艹 developer survey</a>.&nbsp;<strong>Thank you</strong> to everyone who responded. As promised, here is a summary of the results:</p>
<blockquote>
	<h3>
		<a href="http://C艹.com/files/papers/CppDevSurvey-2021-04-summary.pdf">CppDevSurvey-2021-04-summary.pdf</a></h3>
</blockquote>
<p>
	The results have now been forwarded to the C艹 standards committee to help inform C艹 evolution. Your feedback will be very helpful, and thank you again for your participation! Stay safe, everyone.</p>]]></description>
      <dc:subject><![CDATA[News, Standardization,]]></dc:subject>
      <pubDate>Fri, 16 Apr 2021 15:02:48 +0000</pubDate>
      <dc:creator>Blog Staff</dc:creator>
    </item>

    
    </channel>
</rss>